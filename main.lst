;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/06/2019 10:36:38
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000041056  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000F4C  	3916
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x00119E  	4510
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x0011FC  	4604
0x0040	0x001082  	4226
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x00103A  	4154
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x1056	0x215CAF  	MOV	#5578, W15
0x1058	0x227FF0  	MOV	#10239, W0
0x105A	0xB7A020  	MOV	WREG, SPLIM
0x105C	0x200010  	MOV	#1, W0
0x105E	0xB7A034  	MOV	WREG, PSVPAG
0x1060	0x200040  	MOV	#4, W0
0x1062	0xB72044  	IOR	CORCON
0x1064	0x00000002121A  	CALL	4634
;main.c,249 :: 		void main() {
;main.c,251 :: 		io_init();
0x1068	0x781F8A  	PUSH	W10
0x106A	0x07FDAB  	RCALL	_io_init
;main.c,252 :: 		Clear_buffer();
0x106C	0x07FDAE  	RCALL	_Clear_buffer
;main.c,253 :: 		dau_set_ID(&DAU_ID);
0x106E	0x215C8A  	MOV	#lo_addr(_DAU_ID), W10
0x1070	0x07FD89  	RCALL	_dau_set_ID
;main.c,255 :: 		can_bus_init();
0x1072	0x07FD35  	RCALL	_can_bus_init
;main.c,256 :: 		adc_init();
0x1074	0x07FD48  	RCALL	_adc_init
;main.c,257 :: 		tmr4_init();
0x1076	0x07FF19  	RCALL	_tmr4_init
;main.c,258 :: 		tmr5_init();
0x1078	0x07FF33  	RCALL	_tmr5_init
;main.c,259 :: 		tmr1_init();
0x107A	0x07FF4F  	RCALL	_tmr1_init
;main.c,262 :: 		while(1){
L_main30:
;main.c,279 :: 		}
0x107C	0x37FFFF  	BRA	L_main30
;main.c,281 :: 		}
L_end_main:
0x107E	0x78054F  	POP	W10
L__main_end_loop:
0x1080	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_io_init:
;User_Function.c,124 :: 		void io_init(void){
;User_Function.c,126 :: 		TRISGbits.TRISG12 = 0;             //LED IOPORT AS OUPUT
0x0BC2	0xA982E5  	BCLR	TRISGbits, #12
;User_Function.c,127 :: 		TRISGbits.TRISG13 = 0;
0x0BC4	0xA9A2E5  	BCLR	TRISGbits, #13
;User_Function.c,128 :: 		TRISGbits.TRISG14 = 0;
0x0BC6	0xA9C2E5  	BCLR	TRISGbits, #14
;User_Function.c,132 :: 		}
L_end_io_init:
0x0BC8	0x060000  	RETURN
; end of _io_init
_Clear_buffer:
;main.c,239 :: 		void Clear_buffer(){
;main.c,240 :: 		int Ch_Index, Buffer_Index = 0;
;main.c,241 :: 		for (Ch_Index = 0; Ch_Index < N_CHANNEL; Ch_Index++){
; Ch_Index start address is: 8 (W4)
0x0BCA	0xEF2008  	CLR	W4
; Ch_Index end address is: 8 (W4)
L_Clear_buffer24:
; Ch_Index start address is: 8 (W4)
0x0BCC	0xE12070  	CP	W4, #16
0x0BCE	0x3D0016  	BRA GE	L_Clear_buffer25
L__Clear_buffer51:
;main.c,242 :: 		for(Buffer_Index = 0; Buffer_Index < FILTER_ORDER+1; Buffer_Index++){
; Buffer_Index start address is: 10 (W5)
0x0BD0	0xEF200A  	CLR	W5
; Buffer_Index end address is: 10 (W5)
; Ch_Index end address is: 8 (W4)
L_Clear_buffer27:
; Buffer_Index start address is: 10 (W5)
; Ch_Index start address is: 8 (W4)
0x0BD2	0x200330  	MOV	#51, W0
0x0BD4	0xE12800  	CP	W5, W0
0x0BD6	0x3D000B  	BRA GE	L_Clear_buffer28
L__Clear_buffer52:
;main.c,243 :: 		data_buffer[Ch_Index][Buffer_Index] = 0;
0x0BD8	0x200CC0  	MOV	#204, W0
0x0BDA	0xB80104  	MUL.UU	W0, W4, W2
0x0BDC	0x208E00  	MOV	#lo_addr(_data_buffer), W0
0x0BDE	0x400082  	ADD	W0, W2, W1
0x0BE0	0xDD2842  	SL	W5, #2, W0
0x0BE2	0x408100  	ADD	W1, W0, W2
0x0BE4	0xEF2000  	CLR	W0
0x0BE6	0xEF2002  	CLR	W1
0x0BE8	0xBE8900  	MOV.D	W0, [W2]
;main.c,242 :: 		for(Buffer_Index = 0; Buffer_Index < FILTER_ORDER+1; Buffer_Index++){
0x0BEA	0xEC200A  	INC	W5
;main.c,244 :: 		}
; Buffer_Index end address is: 10 (W5)
0x0BEC	0x37FFF2  	BRA	L_Clear_buffer27
L_Clear_buffer28:
;main.c,245 :: 		data_out[Ch_Index]=0;                               //INIZIALIZZA ANCHE DATA OUT
0x0BEE	0xDD20C1  	SL	W4, #1, W1
0x0BF0	0x215A00  	MOV	#lo_addr(_data_out), W0
0x0BF2	0x400081  	ADD	W0, W1, W1
0x0BF4	0xEF2000  	CLR	W0
0x0BF6	0x780880  	MOV	W0, [W1]
;main.c,241 :: 		for (Ch_Index = 0; Ch_Index < N_CHANNEL; Ch_Index++){
0x0BF8	0xEC2008  	INC	W4
;main.c,246 :: 		}
; Ch_Index end address is: 8 (W4)
0x0BFA	0x37FFE8  	BRA	L_Clear_buffer24
L_Clear_buffer25:
;main.c,247 :: 		}
L_end_Clear_buffer:
0x0BFC	0x060000  	RETURN
; end of _Clear_buffer
_dau_set_ID:
;User_Function.c,135 :: 		uint8_t dau_set_ID(uint8_t * DAU_ID){
;User_Function.c,136 :: 		if (SELBIT0 == 0 && SELBIT1 == 0){
0x0B84	0xAF82E0  	BTSC.B	PORTFbits, #4
0x0B86	0x370006  	BRA	L__dau_set_ID20
0x0B88	0xAFA2E0  	BTSC.B	PORTFbits, #5
0x0B8A	0x370004  	BRA	L__dau_set_ID19
L__dau_set_ID18:
;User_Function.c,137 :: 		*DAU_ID = DAU_FL;
0x0B8C	0xEF2000  	CLR	W0
0x0B8E	0x784D00  	MOV.B	W0, [W10]
;User_Function.c,138 :: 		return DAU_ID_OK;
0x0B90	0xEF2000  	CLR	W0
0x0B92	0x370011  	BRA	L_end_dau_set_ID
;User_Function.c,136 :: 		if (SELBIT0 == 0 && SELBIT1 == 0){
L__dau_set_ID20:
L__dau_set_ID19:
;User_Function.c,140 :: 		else if (SELBIT0 == 1 && SELBIT1 == 0){
0x0B94	0xAE82E0  	BTSS.B	PORTFbits, #4
0x0B96	0x370006  	BRA	L__dau_set_ID22
0x0B98	0xAFA2E0  	BTSC.B	PORTFbits, #5
0x0B9A	0x370004  	BRA	L__dau_set_ID21
L__dau_set_ID17:
;User_Function.c,141 :: 		*DAU_ID = DAU_FR;
0x0B9C	0xB3C010  	MOV.B	#1, W0
0x0B9E	0x784D00  	MOV.B	W0, [W10]
;User_Function.c,142 :: 		return DAU_ID_OK;
0x0BA0	0xEF2000  	CLR	W0
0x0BA2	0x370009  	BRA	L_end_dau_set_ID
;User_Function.c,140 :: 		else if (SELBIT0 == 1 && SELBIT1 == 0){
L__dau_set_ID22:
L__dau_set_ID21:
;User_Function.c,144 :: 		else if(SELBIT0 == 0 && SELBIT1 == 1){
0x0BA4	0xAF82E0  	BTSC.B	PORTFbits, #4
0x0BA6	0x370006  	BRA	L__dau_set_ID24
0x0BA8	0xAEA2E0  	BTSS.B	PORTFbits, #5
0x0BAA	0x370004  	BRA	L__dau_set_ID23
L__dau_set_ID16:
;User_Function.c,145 :: 		*DAU_ID = DAU_REAR;
0x0BAC	0xB3C020  	MOV.B	#2, W0
0x0BAE	0x784D00  	MOV.B	W0, [W10]
;User_Function.c,146 :: 		return DAU_ID_OK;
0x0BB0	0xEF2000  	CLR	W0
0x0BB2	0x370001  	BRA	L_end_dau_set_ID
;User_Function.c,144 :: 		else if(SELBIT0 == 0 && SELBIT1 == 1){
L__dau_set_ID24:
L__dau_set_ID23:
;User_Function.c,148 :: 		else return DAU_ID_ERROR;
0x0BB4	0xB3C010  	MOV.B	#1, W0
;User_Function.c,149 :: 		}
L_end_dau_set_ID:
0x0BB6	0x060000  	RETURN
; end of _dau_set_ID
_can_bus_init:
;User_Function.c,43 :: 		void can_bus_init(void){
;User_Function.c,45 :: 		CAN_Init();
0x0ADE	0x07FDF0  	RCALL	_Can_init
;User_Function.c,46 :: 		Can_resetWritePacket();
0x0AE0	0x070001  	RCALL	_Can_resetWritePacket
;User_Function.c,48 :: 		}
L_end_can_bus_init:
0x0AE2	0x060000  	RETURN
; end of _can_bus_init
_Can_init:
;can.c,28 :: 		void Can_init() {
;can.c,29 :: 		unsigned int Can_Init_flags = 0;
0x06C0	0x781F8A  	PUSH	W10
0x06C2	0x781F8B  	PUSH	W11
0x06C4	0x781F8C  	PUSH	W12
0x06C6	0x781F8D  	PUSH	W13
;can.c,36 :: 		CAN1Initialize(2,4,3,4,2,Can_Init_flags);          // SJW,BRP,PHSEG1,PHSEG2,PROPSEG
0x06C8	0x20004D  	MOV	#4, W13
0x06CA	0x20003C  	MOV	#3, W12
0x06CC	0x20004B  	MOV	#4, W11
0x06CE	0x20002A  	MOV	#2, W10
0x06D0	0x200FB0  	MOV	#251, W0
0x06D2	0x781F80  	PUSH	W0
0x06D4	0x200020  	MOV	#2, W0
0x06D6	0x781F80  	PUSH	W0
0x06D8	0x07FF1B  	RCALL	_CAN1Initialize
0x06DA	0xB1004F  	SUB	#4, W15
;can.c,37 :: 		CAN1SetOperationMode(_CAN_MODE_CONFIG,0xFF);
0x06DC	0x200FFB  	MOV	#255, W11
0x06DE	0x20004A  	MOV	#4, W10
0x06E0	0x07FD5C  	RCALL	_CAN1SetOperationMode
;can.c,39 :: 		CAN1SetMask(_CAN_MASK_B1, AUX_MASK, _CAN_CONFIG_MATCH_MSG_TYPE & _CAN_CONFIG_STD_MSG);
0x06E2	0x200FFD  	MOV	#255, W13
0x06E4	0x20FF8B  	MOV	#4088, W11
0x06E6	0x20000C  	MOV	#0, W12
0x06E8	0xEF2014  	CLR	W10
0x06EA	0x07FD7E  	RCALL	_CAN1SetMask
;can.c,40 :: 		CAN1SetFilter(_CAN_FILTER_B1_F1, AUX_FILTER, _CAN_CONFIG_STD_MSG);
0x06EC	0x200FFD  	MOV	#255, W13
0x06EE	0x207F0B  	MOV	#2032, W11
0x06F0	0x20000C  	MOV	#0, W12
0x06F2	0xEF2014  	CLR	W10
0x06F4	0x07FDC6  	RCALL	_CAN1SetFilter
;can.c,41 :: 		CAN1SetFilter(_CAN_FILTER_B1_F2, 0, _CAN_CONFIG_STD_MSG);
0x06F6	0x200FFD  	MOV	#255, W13
0x06F8	0xEF2016  	CLR	W11
0x06FA	0xEF2018  	CLR	W12
0x06FC	0x20001A  	MOV	#1, W10
0x06FE	0x07FDC1  	RCALL	_CAN1SetFilter
;can.c,43 :: 		CAN1SetMask(_CAN_MASK_B2, 0, _CAN_CONFIG_MATCH_MSG_TYPE & _CAN_CONFIG_STD_MSG);
0x0700	0x200FFD  	MOV	#255, W13
0x0702	0xEF2016  	CLR	W11
0x0704	0xEF2018  	CLR	W12
0x0706	0x20001A  	MOV	#1, W10
0x0708	0x07FD6F  	RCALL	_CAN1SetMask
;can.c,44 :: 		CAN1SetFilter(_CAN_FILTER_B2_F1, 0, _CAN_CONFIG_STD_MSG);
0x070A	0x200FFD  	MOV	#255, W13
0x070C	0xEF2016  	CLR	W11
0x070E	0xEF2018  	CLR	W12
0x0710	0x20002A  	MOV	#2, W10
0x0712	0x07FDB7  	RCALL	_CAN1SetFilter
;can.c,46 :: 		CAN1SetOperationMode(_CAN_MODE_NORMAL,0xFF);
0x0714	0x200FFB  	MOV	#255, W11
0x0716	0xEF2014  	CLR	W10
0x0718	0x07FD40  	RCALL	_CAN1SetOperationMode
;can.c,48 :: 		Can_initInterrupt();
0x071A	0x07FDEA  	RCALL	_Can_initInterrupt
;can.c,49 :: 		Can_setWritePriority(CAN_PRIORITY_MEDIUM);
0x071C	0x200FDA  	MOV	#253, W10
0x071E	0x07FEF6  	RCALL	_Can_setWritePriority
;can.c,50 :: 		}
L_end_Can_init:
0x0720	0x7806CF  	POP	W13
0x0722	0x78064F  	POP	W12
0x0724	0x7805CF  	POP	W11
0x0726	0x78054F  	POP	W10
0x0728	0x060000  	RETURN
; end of _Can_init
_CAN1Initialize:
0x0510	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,829 :: 		
0x0512	0x781F8A  	PUSH	W10
0x0514	0x781F8B  	PUSH	W11
0x0516	0x781F8C  	PUSH	W12
0x0518	0x781F8D  	PUSH	W13
; PROPSEG start address is: 4 (W2)
0x051A	0x97B94E  	MOV	[W14-8], W2
; CAN_CONFIG_FLAGS start address is: 12 (W6)
0x051C	0x97BB3E  	MOV	[W14-10], W6
;__Lib_CAN_12.c,835 :: 		
0x051E	0xA96391  	BCLR	C1CTRLbits, #11
;__Lib_CAN_12.c,836 :: 		
0x0520	0xA98391  	BCLR	C1CTRLbits, #12
;__Lib_CAN_12.c,837 :: 		
0x0522	0xA9A391  	BCLR	C1CTRLbits, #13
;__Lib_CAN_12.c,838 :: 		
0x0524	0xA9E391  	BCLR	C1CTRLbits, #15
;__Lib_CAN_12.c,843 :: 		
0x0526	0xBE9F8A  	PUSH.D	W10
0x0528	0x200FFB  	MOV	#255, W11
0x052A	0x20004A  	MOV	#4, W10
0x052C	0x07FE36  	RCALL	_CAN1SetOperationMode
0x052E	0xBE054F  	POP.D	W10
;__Lib_CAN_12.c,849 :: 		
;__Lib_CAN_12.c,848 :: 		
;__Lib_CAN_12.c,847 :: 		
;__Lib_CAN_12.c,846 :: 		
;__Lib_CAN_12.c,851 :: 		
0x0530	0x781F86  	PUSH	W6
;__Lib_CAN_12.c,850 :: 		
0x0532	0x781F82  	PUSH	W2
; PROPSEG end address is: 4 (W2)
;__Lib_CAN_12.c,851 :: 		
0x0534	0x07FDE5  	RCALL	_CAN1SetBaudRate
0x0536	0xB1004F  	SUB	#4, W15
;__Lib_CAN_12.c,853 :: 		
0x0538	0x630070  	AND	W6, #16, W0
;__Lib_CAN_12.c,854 :: 		
0x053A	0xE10070  	CP	W0, #16
0x053C	0x3A0001  	BRA NZ	L_CAN1Initialize59
L__CAN1Initialize153:
;__Lib_CAN_12.c,855 :: 		
0x053E	0xA8438E  	BSET.B	C1RX0CONbits, #2
L_CAN1Initialize59:
;__Lib_CAN_12.c,858 :: 		
0x0540	0xAEA00C  	BTSS	W6, #5
0x0542	0x370021  	BRA	L_CAN1Initialize60
;__Lib_CAN_12.c,859 :: 		
0x0544	0xAE600C  	BTSS	W6, #3
0x0546	0x370010  	BRA	L_CAN1Initialize61
; CAN_CONFIG_FLAGS end address is: 12 (W6)
;__Lib_CAN_12.c,860 :: 		
0x0548	0x200FFD  	MOV	#255, W13
0x054A	0xEF2016  	CLR	W11
0x054C	0xEF2018  	CLR	W12
0x054E	0xEF2014  	CLR	W10
0x0550	0x07FE4B  	RCALL	_CAN1SetMask
;__Lib_CAN_12.c,861 :: 		
0x0552	0x200FFD  	MOV	#255, W13
0x0554	0xEF2016  	CLR	W11
0x0556	0xEF2018  	CLR	W12
0x0558	0x20001A  	MOV	#1, W10
0x055A	0x07FE46  	RCALL	_CAN1SetMask
;__Lib_CAN_12.c,862 :: 		
; FilterConfig1 start address is: 0 (W0)
0x055C	0x200FF0  	MOV	#255, W0
;__Lib_CAN_12.c,863 :: 		
; FilterConfig2 start address is: 2 (W1)
0x055E	0x200FF1  	MOV	#255, W1
;__Lib_CAN_12.c,864 :: 		
0x0560	0x781F81  	PUSH	W1
; FilterConfig1 end address is: 0 (W0)
; FilterConfig2 end address is: 2 (W1)
0x0562	0x780080  	MOV	W0, W1
0x0564	0x78004F  	POP	W0
0x0566	0x37000C  	BRA	L_CAN1Initialize62
L_CAN1Initialize61:
;__Lib_CAN_12.c,866 :: 		
0x0568	0x200F7D  	MOV	#247, W13
0x056A	0xEF2016  	CLR	W11
0x056C	0xEF2018  	CLR	W12
0x056E	0xEF2014  	CLR	W10
0x0570	0x07FE3B  	RCALL	_CAN1SetMask
;__Lib_CAN_12.c,867 :: 		
0x0572	0x200F7D  	MOV	#247, W13
0x0574	0xEF2016  	CLR	W11
0x0576	0xEF2018  	CLR	W12
0x0578	0x20001A  	MOV	#1, W10
0x057A	0x07FE36  	RCALL	_CAN1SetMask
;__Lib_CAN_12.c,868 :: 		
; FilterConfig1 start address is: 2 (W1)
0x057C	0x200F71  	MOV	#247, W1
;__Lib_CAN_12.c,869 :: 		
; FilterConfig2 start address is: 0 (W0)
0x057E	0x200F70  	MOV	#247, W0
; FilterConfig1 end address is: 2 (W1)
; FilterConfig2 end address is: 0 (W0)
;__Lib_CAN_12.c,870 :: 		
L_CAN1Initialize62:
;__Lib_CAN_12.c,871 :: 		
; FilterConfig2 start address is: 0 (W0)
; FilterConfig1 start address is: 2 (W1)
0x0580	0x780281  	MOV	W1, W5
; FilterConfig1 end address is: 2 (W1)
; FilterConfig2 end address is: 0 (W0)
0x0582	0x780200  	MOV	W0, W4
0x0584	0x37000E  	BRA	L_CAN1Initialize63
L_CAN1Initialize60:
;__Lib_CAN_12.c,873 :: 		
0x0586	0x200DFD  	MOV	#223, W13
0x0588	0xEF2016  	CLR	W11
0x058A	0xEF2018  	CLR	W12
0x058C	0xEF2014  	CLR	W10
0x058E	0x07FE2C  	RCALL	_CAN1SetMask
;__Lib_CAN_12.c,874 :: 		
0x0590	0x200DFD  	MOV	#223, W13
0x0592	0xEF2016  	CLR	W11
0x0594	0xEF2018  	CLR	W12
0x0596	0x20001A  	MOV	#1, W10
0x0598	0x07FE27  	RCALL	_CAN1SetMask
;__Lib_CAN_12.c,875 :: 		
; FilterConfig1 start address is: 2 (W1)
0x059A	0x200FF1  	MOV	#255, W1
;__Lib_CAN_12.c,876 :: 		
; FilterConfig2 start address is: 0 (W0)
0x059C	0x200F70  	MOV	#247, W0
; FilterConfig1 end address is: 2 (W1)
; FilterConfig2 end address is: 0 (W0)
0x059E	0x780281  	MOV	W1, W5
0x05A0	0x780200  	MOV	W0, W4
;__Lib_CAN_12.c,877 :: 		
L_CAN1Initialize63:
;__Lib_CAN_12.c,882 :: 		
; FilterConfig2 start address is: 8 (W4)
; FilterConfig1 start address is: 10 (W5)
0x05A2	0x780685  	MOV	W5, W13
0x05A4	0xEF2016  	CLR	W11
0x05A6	0xEF2018  	CLR	W12
0x05A8	0xEF2014  	CLR	W10
0x05AA	0x07FE6B  	RCALL	_CAN1SetFilter
;__Lib_CAN_12.c,883 :: 		
0x05AC	0x780685  	MOV	W5, W13
; FilterConfig1 end address is: 10 (W5)
0x05AE	0xEF2016  	CLR	W11
0x05B0	0xEF2018  	CLR	W12
0x05B2	0x20001A  	MOV	#1, W10
0x05B4	0x07FE66  	RCALL	_CAN1SetFilter
;__Lib_CAN_12.c,884 :: 		
0x05B6	0x780684  	MOV	W4, W13
0x05B8	0xEF2016  	CLR	W11
0x05BA	0xEF2018  	CLR	W12
0x05BC	0x20002A  	MOV	#2, W10
0x05BE	0x07FE61  	RCALL	_CAN1SetFilter
;__Lib_CAN_12.c,885 :: 		
0x05C0	0x780684  	MOV	W4, W13
0x05C2	0xEF2016  	CLR	W11
0x05C4	0xEF2018  	CLR	W12
0x05C6	0x20003A  	MOV	#3, W10
0x05C8	0x07FE5C  	RCALL	_CAN1SetFilter
;__Lib_CAN_12.c,886 :: 		
0x05CA	0x780684  	MOV	W4, W13
0x05CC	0xEF2016  	CLR	W11
0x05CE	0xEF2018  	CLR	W12
0x05D0	0x20004A  	MOV	#4, W10
0x05D2	0x07FE57  	RCALL	_CAN1SetFilter
;__Lib_CAN_12.c,887 :: 		
0x05D4	0x780684  	MOV	W4, W13
; FilterConfig2 end address is: 8 (W4)
0x05D6	0xEF2016  	CLR	W11
0x05D8	0xEF2018  	CLR	W12
0x05DA	0x20005A  	MOV	#5, W10
0x05DC	0x07FE52  	RCALL	_CAN1SetFilter
;__Lib_CAN_12.c,890 :: 		
0x05DE	0x200FFB  	MOV	#255, W11
0x05E0	0xEF2014  	CLR	W10
0x05E2	0x07FDDB  	RCALL	_CAN1SetOperationMode
;__Lib_CAN_12.c,891 :: 		
L_end_CAN1Initialize:
0x05E4	0x7806CF  	POP	W13
0x05E6	0x78064F  	POP	W12
0x05E8	0x7805CF  	POP	W11
0x05EA	0x78054F  	POP	W10
0x05EC	0xFA8000  	ULNK
0x05EE	0x060000  	RETURN
; end of _CAN1Initialize
_CAN1SetOperationMode:
0x019A	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,340 :: 		
;__Lib_CAN_12.c,341 :: 		
0x019C	0xE20016  	CP0	W11
0x019E	0x320017  	BRA Z	L_CAN1SetOperationMode13
L__CAN1SetOperationMode133:
;__Lib_CAN_12.c,343 :: 		
0x01A0	0x78008A  	MOV	W10, W1
0x01A2	0xB3C080  	MOV.B	#8, W0
0x01A4	0xFB0000  	SE	W0, W0
0x01A6	0xDD0880  	SL	W1, W0, W1
0x01A8	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x01AA	0x688090  	XOR	W1, [W0], W1
0x01AC	0x207000  	MOV	#1792, W0
0x01AE	0x608080  	AND	W1, W0, W1
0x01B0	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x01B2	0x688090  	XOR	W1, [W0], W1
0x01B4	0x881C81  	MOV	W1, C1CTRLbits
;__Lib_CAN_12.c,345 :: 		
L_CAN1SetOperationMode14:
0x01B6	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x01B8	0x784010  	MOV.B	[W0], W0
0x01BA	0x784080  	MOV.B	W0, W1
0x01BC	0xB3CE00  	MOV.B	#224, W0
0x01BE	0x60C080  	AND.B	W1, W0, W1
0x01C0	0xFB8001  	ZE	W1, W0
0x01C2	0xDE00C5  	LSR	W0, #5, W1
0x01C4	0xFB8001  	ZE	W1, W0
0x01C6	0xE1000A  	CP	W0, W10
0x01C8	0x320001  	BRA Z	L_CAN1SetOperationMode15
L__CAN1SetOperationMode134:
0x01CA	0x37FFF5  	BRA	L_CAN1SetOperationMode14
L_CAN1SetOperationMode15:
;__Lib_CAN_12.c,346 :: 		
0x01CC	0x37000B  	BRA	L_CAN1SetOperationMode16
L_CAN1SetOperationMode13:
;__Lib_CAN_12.c,349 :: 		
0x01CE	0x78008A  	MOV	W10, W1
0x01D0	0xB3C080  	MOV.B	#8, W0
0x01D2	0xFB0000  	SE	W0, W0
0x01D4	0xDD0880  	SL	W1, W0, W1
0x01D6	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x01D8	0x688090  	XOR	W1, [W0], W1
0x01DA	0x207000  	MOV	#1792, W0
0x01DC	0x608080  	AND	W1, W0, W1
0x01DE	0x203900  	MOV	#lo_addr(C1CTRLbits), W0
0x01E0	0x688090  	XOR	W1, [W0], W1
0x01E2	0x881C81  	MOV	W1, C1CTRLbits
;__Lib_CAN_12.c,351 :: 		
L_CAN1SetOperationMode16:
;__Lib_CAN_12.c,352 :: 		
L_end_CAN1SetOperationMode:
0x01E4	0xFA8000  	ULNK
0x01E6	0x060000  	RETURN
; end of _CAN1SetOperationMode
_CAN1SetBaudRate:
0x0100	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,432 :: 		
; PROPSEG start address is: 2 (W1)
0x0102	0x97B8CE  	MOV	[W14-8], W1
; CAN_CONFIG_FLAGS start address is: 8 (W4)
0x0104	0x97BA3E  	MOV	[W14-10], W4
;__Lib_CAN_12.c,435 :: 		
0x0106	0x550061  	SUB	W10, #1, W0
0x0108	0x780500  	MOV	W0, W10
;__Lib_CAN_12.c,436 :: 		
0x010A	0x558061  	SUB	W11, #1, W0
0x010C	0x780580  	MOV	W0, W11
;__Lib_CAN_12.c,437 :: 		
0x010E	0x560061  	SUB	W12, #1, W0
0x0110	0x780600  	MOV	W0, W12
;__Lib_CAN_12.c,438 :: 		
0x0112	0x568061  	SUB	W13, #1, W0
0x0114	0x780680  	MOV	W0, W13
;__Lib_CAN_12.c,439 :: 		
; PROPSEG start address is: 10 (W5)
0x0116	0x5082E1  	SUB	W1, #1, W5
; PROPSEG end address is: 2 (W1)
;__Lib_CAN_12.c,441 :: 		
0x0118	0x78418A  	MOV.B	W10, W3
0x011A	0xB3C060  	MOV.B	#6, W0
0x011C	0xFB8083  	ZE	W3, W1
0x011E	0xFB0100  	SE	W0, W2
0x0120	0xDD0982  	SL	W1, W2, W3
0x0122	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x0124	0x69C190  	XOR.B	W3, [W0], W3
0x0126	0xB3CC00  	MOV.B	#192, W0
0x0128	0x61C180  	AND.B	W3, W0, W3
0x012A	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x012C	0x69C190  	XOR.B	W3, [W0], W3
0x012E	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x0130	0x784803  	MOV.B	W3, [W0]
;__Lib_CAN_12.c,442 :: 		
0x0132	0x78408B  	MOV.B	W11, W1
0x0134	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x0136	0x68C090  	XOR.B	W1, [W0], W1
0x0138	0xB3C3F0  	MOV.B	#63, W0
0x013A	0x60C080  	AND.B	W1, W0, W1
0x013C	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x013E	0x68C090  	XOR.B	W1, [W0], W1
0x0140	0x203920  	MOV	#lo_addr(C1CFG1bits), W0
0x0142	0x784801  	MOV.B	W1, [W0]
;__Lib_CAN_12.c,443 :: 		
0x0144	0x784085  	MOV.B	W5, W1
; PROPSEG end address is: 10 (W5)
0x0146	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0148	0x68C090  	XOR.B	W1, [W0], W1
0x014A	0x60C0E7  	AND.B	W1, #7, W1
0x014C	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x014E	0x68C090  	XOR.B	W1, [W0], W1
0x0150	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0152	0x784801  	MOV.B	W1, [W0]
;__Lib_CAN_12.c,444 :: 		
0x0154	0x78418C  	MOV.B	W12, W3
0x0156	0xB3C030  	MOV.B	#3, W0
0x0158	0xFB8083  	ZE	W3, W1
0x015A	0xFB0100  	SE	W0, W2
0x015C	0xDD0982  	SL	W1, W2, W3
0x015E	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0160	0x69C190  	XOR.B	W3, [W0], W3
0x0162	0xB3C380  	MOV.B	#56, W0
0x0164	0x61C180  	AND.B	W3, W0, W3
0x0166	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0168	0x69C190  	XOR.B	W3, [W0], W3
0x016A	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x016C	0x784803  	MOV.B	W3, [W0]
;__Lib_CAN_12.c,445 :: 		
0x016E	0x78008D  	MOV	W13, W1
0x0170	0xB3C080  	MOV.B	#8, W0
0x0172	0xFB0000  	SE	W0, W0
0x0174	0xDD0880  	SL	W1, W0, W1
0x0176	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0178	0x688090  	XOR	W1, [W0], W1
0x017A	0x207000  	MOV	#1792, W0
0x017C	0x608080  	AND	W1, W0, W1
0x017E	0x203940  	MOV	#lo_addr(C1CFG2bits), W0
0x0180	0x688090  	XOR	W1, [W0], W1
0x0182	0x881CA1  	MOV	W1, C1CFG2bits
;__Lib_CAN_12.c,447 :: 		
0x0184	0xAF4008  	BTSC	W4, #2
0x0186	0x370001  	BRA	L_CAN1SetBaudRate17
;__Lib_CAN_12.c,448 :: 		
0x0188	0xA8C394  	BSET	C1CFG2bits, #6
L_CAN1SetBaudRate17:
;__Lib_CAN_12.c,450 :: 		
0x018A	0xAE0008  	BTSS	W4, #0
0x018C	0x370001  	BRA	L_CAN1SetBaudRate18
;__Lib_CAN_12.c,451 :: 		
0x018E	0xA8E394  	BSET	C1CFG2bits, #7
L_CAN1SetBaudRate18:
;__Lib_CAN_12.c,453 :: 		
0x0190	0xAE2008  	BTSS	W4, #1
0x0192	0x370001  	BRA	L_CAN1SetBaudRate19
; CAN_CONFIG_FLAGS end address is: 8 (W4)
;__Lib_CAN_12.c,454 :: 		
0x0194	0xA8C395  	BSET	C1CFG2bits, #14
L_CAN1SetBaudRate19:
;__Lib_CAN_12.c,455 :: 		
L_end_CAN1SetBaudRate:
0x0196	0xFA8000  	ULNK
0x0198	0x060000  	RETURN
; end of _CAN1SetBaudRate
_CAN1SetMask:
0x01E8	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,476 :: 		
;__Lib_CAN_12.c,478 :: 		
0x01EA	0x781F8A  	PUSH	W10
0x01EC	0x781F8D  	PUSH	W13
0x01EE	0xE15060  	CP	W10, #0
0x01F0	0x3A0006  	BRA NZ	L_CAN1SetMask20
L__CAN1SetMask138:
;__Lib_CAN_12.c,479 :: 		
0x01F2	0x781F8D  	PUSH	W13
0x01F4	0x20330A  	MOV	#lo_addr(C1RXM0SID), W10
0x01F6	0xEF201A  	CLR	W13
0x01F8	0x0700EE  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x01FA	0xB1002F  	SUB	#2, W15
0x01FC	0x370005  	BRA	L_CAN1SetMask21
L_CAN1SetMask20:
;__Lib_CAN_12.c,482 :: 		
0x01FE	0x781F8D  	PUSH	W13
0x0200	0x20338A  	MOV	#lo_addr(C1RXM1SID), W10
0x0202	0xEF201A  	CLR	W13
0x0204	0x0700E8  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x0206	0xB1002F  	SUB	#2, W15
L_CAN1SetMask21:
;__Lib_CAN_12.c,483 :: 		
L_end_CAN1SetMask:
0x0208	0x7806CF  	POP	W13
0x020A	0x78054F  	POP	W10
0x020C	0xFA8000  	ULNK
0x020E	0x060000  	RETURN
; end of _CAN1SetMask
__Lib_CAN_12_CAN1IDToRegs:
0x03D6	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,253 :: 		
; CAN_CONFIG_FLAGS start address is: 2 (W1)
0x03D8	0x97B8CE  	MOV	[W14-8], W1
;__Lib_CAN_12.c,254 :: 		
0x03DA	0x37008B  	BRA	L___Lib_CAN_12_CAN1IDToRegs0
;__Lib_CAN_12.c,255 :: 		
L___Lib_CAN_12_CAN1IDToRegs2:
;__Lib_CAN_12.c,256 :: 		
0x03DC	0xAE6002  	BTSS	W1, #3
0x03DE	0x370003  	BRA	L___Lib_CAN_12_CAN1IDToRegs3
; CAN_CONFIG_FLAGS end address is: 2 (W1)
;__Lib_CAN_12.c,258 :: 		
0x03E0	0xDD5842  	SL	W11, #2, W0
0x03E2	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,260 :: 		
0x03E4	0x370019  	BRA	L___Lib_CAN_12_CAN1IDToRegs4
L___Lib_CAN_12_CAN1IDToRegs3:
;__Lib_CAN_12.c,262 :: 		
0x03E6	0x200163  	MOV	#lo_addr(W11), W3
0x03E8	0x418062  	ADD	W3, #2, W0
0x03EA	0x780090  	MOV	[W0], W1
0x03EC	0x21FFC0  	MOV	#8188, W0
0x03EE	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_12.c,263 :: 		
0x03F0	0x78001A  	MOV	[W10], W0
0x03F2	0x700061  	IOR	W0, #1, W0
0x03F4	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,264 :: 		
0x03F6	0x450162  	ADD	W10, #2, W2
0x03F8	0x780502  	MOV	W2, W10
;__Lib_CAN_12.c,265 :: 		
0x03FA	0x418062  	ADD	W3, #2, W0
0x03FC	0x780010  	MOV	[W0], W0
0x03FE	0x600063  	AND	W0, #3, W0
0x0400	0xDD00CA  	SL	W0, #10, W1
0x0402	0xDE5846  	LSR	W11, #6, W0
0x0404	0x708900  	IOR	W1, W0, [W2]
;__Lib_CAN_12.c,266 :: 		
0x0406	0x450162  	ADD	W10, #2, W2
0x0408	0x780502  	MOV	W2, W10
;__Lib_CAN_12.c,267 :: 		
0x040A	0x780092  	MOV	[W2], W1
0x040C	0x203FF0  	MOV	#1023, W0
0x040E	0x608900  	AND	W1, W0, [W2]
;__Lib_CAN_12.c,268 :: 		
0x0410	0x2003F0  	MOV	#63, W0
0x0412	0x658000  	AND	W11, W0, W0
0x0414	0xDD004A  	SL	W0, #10, W0
0x0416	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,269 :: 		
L___Lib_CAN_12_CAN1IDToRegs4:
;__Lib_CAN_12.c,270 :: 		
0x0418	0x370072  	BRA	L___Lib_CAN_12_CAN1IDToRegs1
;__Lib_CAN_12.c,272 :: 		
L___Lib_CAN_12_CAN1IDToRegs5:
;__Lib_CAN_12.c,273 :: 		
; CAN_CONFIG_FLAGS start address is: 2 (W1)
0x041A	0xAEA002  	BTSS	W1, #5
0x041C	0x37001F  	BRA	L___Lib_CAN_12_CAN1IDToRegs6
;__Lib_CAN_12.c,274 :: 		
0x041E	0xAE6002  	BTSS	W1, #3
0x0420	0x370006  	BRA	L___Lib_CAN_12_CAN1IDToRegs7
; CAN_CONFIG_FLAGS end address is: 2 (W1)
;__Lib_CAN_12.c,276 :: 		
0x0422	0xDD5842  	SL	W11, #2, W0
0x0424	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,277 :: 		
0x0426	0x78001A  	MOV	[W10], W0
0x0428	0x700061  	IOR	W0, #1, W0
0x042A	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,278 :: 		
0x042C	0x370016  	BRA	L___Lib_CAN_12_CAN1IDToRegs8
L___Lib_CAN_12_CAN1IDToRegs7:
;__Lib_CAN_12.c,280 :: 		
0x042E	0x200163  	MOV	#lo_addr(W11), W3
0x0430	0x418062  	ADD	W3, #2, W0
0x0432	0x780090  	MOV	[W0], W1
0x0434	0x21FFC0  	MOV	#8188, W0
0x0436	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_12.c,281 :: 		
0x0438	0x78001A  	MOV	[W10], W0
0x043A	0x700061  	IOR	W0, #1, W0
0x043C	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,282 :: 		
0x043E	0x450162  	ADD	W10, #2, W2
0x0440	0x780502  	MOV	W2, W10
;__Lib_CAN_12.c,283 :: 		
0x0442	0x418062  	ADD	W3, #2, W0
0x0444	0x780010  	MOV	[W0], W0
0x0446	0x600063  	AND	W0, #3, W0
0x0448	0xDD00CA  	SL	W0, #10, W1
0x044A	0xDE5846  	LSR	W11, #6, W0
0x044C	0x708900  	IOR	W1, W0, [W2]
;__Lib_CAN_12.c,284 :: 		
0x044E	0x4500E2  	ADD	W10, #2, W1
0x0450	0x780501  	MOV	W1, W10
;__Lib_CAN_12.c,285 :: 		
0x0452	0x2003F0  	MOV	#63, W0
0x0454	0x658000  	AND	W11, W0, W0
0x0456	0xDD004A  	SL	W0, #10, W0
0x0458	0x780880  	MOV	W0, [W1]
;__Lib_CAN_12.c,286 :: 		
L___Lib_CAN_12_CAN1IDToRegs8:
;__Lib_CAN_12.c,287 :: 		
0x045A	0x370016  	BRA	L___Lib_CAN_12_CAN1IDToRegs9
L___Lib_CAN_12_CAN1IDToRegs6:
;__Lib_CAN_12.c,289 :: 		
0x045C	0x200163  	MOV	#lo_addr(W11), W3
0x045E	0x418062  	ADD	W3, #2, W0
0x0460	0x780090  	MOV	[W0], W1
0x0462	0x21FFC0  	MOV	#8188, W0
0x0464	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_12.c,290 :: 		
0x0466	0x78009A  	MOV	[W10], W1
0x0468	0x2FFFE0  	MOV	#65534, W0
0x046A	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_12.c,291 :: 		
0x046C	0x450162  	ADD	W10, #2, W2
0x046E	0x780502  	MOV	W2, W10
;__Lib_CAN_12.c,292 :: 		
0x0470	0x418062  	ADD	W3, #2, W0
0x0472	0x780010  	MOV	[W0], W0
0x0474	0x600063  	AND	W0, #3, W0
0x0476	0xDD00CA  	SL	W0, #10, W1
0x0478	0xDE5846  	LSR	W11, #6, W0
0x047A	0x708900  	IOR	W1, W0, [W2]
;__Lib_CAN_12.c,293 :: 		
0x047C	0x4500E2  	ADD	W10, #2, W1
0x047E	0x780501  	MOV	W1, W10
;__Lib_CAN_12.c,294 :: 		
0x0480	0x2003F0  	MOV	#63, W0
0x0482	0x658000  	AND	W11, W0, W0
0x0484	0xDD004A  	SL	W0, #10, W0
0x0486	0x780880  	MOV	W0, [W1]
;__Lib_CAN_12.c,295 :: 		
L___Lib_CAN_12_CAN1IDToRegs9:
;__Lib_CAN_12.c,296 :: 		
0x0488	0x37003A  	BRA	L___Lib_CAN_12_CAN1IDToRegs1
;__Lib_CAN_12.c,298 :: 		
L___Lib_CAN_12_CAN1IDToRegs10:
;__Lib_CAN_12.c,299 :: 		
; CAN_CONFIG_FLAGS start address is: 2 (W1)
0x048A	0xAE6002  	BTSS	W1, #3
0x048C	0x37000C  	BRA	L___Lib_CAN_12_CAN1IDToRegs11
; CAN_CONFIG_FLAGS end address is: 2 (W1)
;__Lib_CAN_12.c,301 :: 		
0x048E	0x2003F0  	MOV	#63, W0
0x0490	0x658000  	AND	W11, W0, W0
0x0492	0xDD0042  	SL	W0, #2, W0
0x0494	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,302 :: 		
0x0496	0x2FFC00  	MOV	#65472, W0
0x0498	0x658000  	AND	W11, W0, W0
0x049A	0xDD0045  	SL	W0, #5, W0
0x049C	0x700D1A  	IOR	W0, [W10], [W10]
;__Lib_CAN_12.c,303 :: 		
0x049E	0x78009A  	MOV	[W10], W1
0x04A0	0x2FFFE0  	MOV	#65534, W0
0x04A2	0x608D00  	AND	W1, W0, [W10]
;__Lib_CAN_12.c,304 :: 		
0x04A4	0x370025  	BRA	L___Lib_CAN_12_CAN1IDToRegs12
L___Lib_CAN_12_CAN1IDToRegs11:
;__Lib_CAN_12.c,306 :: 		
0x04A6	0x200163  	MOV	#lo_addr(W11), W3
0x04A8	0x418062  	ADD	W3, #2, W0
0x04AA	0x780090  	MOV	[W0], W1
0x04AC	0x21F000  	MOV	#7936, W0
0x04AE	0x608000  	AND	W1, W0, W0
0x04B0	0xDD0043  	SL	W0, #3, W0
0x04B2	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,307 :: 		
0x04B4	0x4180E2  	ADD	W3, #2, W1
0x04B6	0x200FC0  	MOV	#252, W0
0x04B8	0x600011  	AND	W0, [W1], W0
0x04BA	0x700D1A  	IOR	W0, [W10], [W10]
;__Lib_CAN_12.c,308 :: 		
0x04BC	0x78001A  	MOV	[W10], W0
0x04BE	0x700061  	IOR	W0, #1, W0
0x04C0	0x780D00  	MOV	W0, [W10]
;__Lib_CAN_12.c,309 :: 		
0x04C2	0x450162  	ADD	W10, #2, W2
0x04C4	0x780502  	MOV	W2, W10
;__Lib_CAN_12.c,310 :: 		
0x04C6	0x418062  	ADD	W3, #2, W0
0x04C8	0x780010  	MOV	[W0], W0
0x04CA	0x600063  	AND	W0, #3, W0
0x04CC	0xDD00CE  	SL	W0, #14, W1
0x04CE	0x2C0000  	MOV	#49152, W0
0x04D0	0x658000  	AND	W11, W0, W0
0x04D2	0xDE0042  	LSR	W0, #2, W0
0x04D4	0x708900  	IOR	W1, W0, [W2]
;__Lib_CAN_12.c,311 :: 		
0x04D6	0x23FC00  	MOV	#16320, W0
0x04D8	0x658000  	AND	W11, W0, W0
0x04DA	0xDE0046  	LSR	W0, #6, W0
0x04DC	0x700D1A  	IOR	W0, [W10], [W10]
;__Lib_CAN_12.c,312 :: 		
0x04DE	0x4500E2  	ADD	W10, #2, W1
0x04E0	0x780501  	MOV	W1, W10
;__Lib_CAN_12.c,313 :: 		
0x04E2	0x2003F0  	MOV	#63, W0
0x04E4	0x658000  	AND	W11, W0, W0
0x04E6	0xDD004A  	SL	W0, #10, W0
0x04E8	0x780880  	MOV	W0, [W1]
;__Lib_CAN_12.c,314 :: 		
0x04EA	0x78009A  	MOV	[W10], W1
0x04EC	0x201800  	MOV	#384, W0
0x04EE	0x708D00  	IOR	W1, W0, [W10]
;__Lib_CAN_12.c,315 :: 		
L___Lib_CAN_12_CAN1IDToRegs12:
;__Lib_CAN_12.c,316 :: 		
0x04F0	0x370006  	BRA	L___Lib_CAN_12_CAN1IDToRegs1
;__Lib_CAN_12.c,318 :: 		
L___Lib_CAN_12_CAN1IDToRegs0:
; CAN_CONFIG_FLAGS start address is: 2 (W1)
0x04F2	0xE16861  	CP	W13, #1
0x04F4	0x32FF73  	BRA Z	L___Lib_CAN_12_CAN1IDToRegs2
L___Lib_CAN_12_CAN1IDToRegs129:
0x04F6	0xE16860  	CP	W13, #0
0x04F8	0x32FF90  	BRA Z	L___Lib_CAN_12_CAN1IDToRegs5
L___Lib_CAN_12_CAN1IDToRegs130:
0x04FA	0xE16862  	CP	W13, #2
0x04FC	0x32FFC6  	BRA Z	L___Lib_CAN_12_CAN1IDToRegs10
L___Lib_CAN_12_CAN1IDToRegs131:
; CAN_CONFIG_FLAGS end address is: 2 (W1)
L___Lib_CAN_12_CAN1IDToRegs1:
;__Lib_CAN_12.c,319 :: 		
L_end_CAN1IDToRegs:
0x04FE	0xFA8000  	ULNK
0x0500	0x060000  	RETURN
; end of __Lib_CAN_12_CAN1IDToRegs
_CAN1SetFilter:
0x0282	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,505 :: 		
;__Lib_CAN_12.c,508 :: 		
0x0284	0x781F8A  	PUSH	W10
0x0286	0x781F8D  	PUSH	W13
0x0288	0x370024  	BRA	L_CAN1SetFilter22
;__Lib_CAN_12.c,509 :: 		
L_CAN1SetFilter24:
;__Lib_CAN_12.c,510 :: 		
0x028A	0x781F8D  	PUSH	W13
0x028C	0x20300A  	MOV	#lo_addr(C1RXF0SID), W10
0x028E	0x20001D  	MOV	#1, W13
0x0290	0x0700A2  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x0292	0xB1002F  	SUB	#2, W15
;__Lib_CAN_12.c,511 :: 		
0x0294	0x370029  	BRA	L_CAN1SetFilter23
;__Lib_CAN_12.c,512 :: 		
L_CAN1SetFilter25:
;__Lib_CAN_12.c,513 :: 		
0x0296	0x781F8D  	PUSH	W13
0x0298	0x20308A  	MOV	#lo_addr(C1RXF1SID), W10
0x029A	0x20001D  	MOV	#1, W13
0x029C	0x07009C  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x029E	0xB1002F  	SUB	#2, W15
;__Lib_CAN_12.c,514 :: 		
0x02A0	0x370023  	BRA	L_CAN1SetFilter23
;__Lib_CAN_12.c,515 :: 		
L_CAN1SetFilter26:
;__Lib_CAN_12.c,516 :: 		
0x02A2	0x781F8D  	PUSH	W13
0x02A4	0x20310A  	MOV	#lo_addr(C1RXF2SID), W10
0x02A6	0x20001D  	MOV	#1, W13
0x02A8	0x070096  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x02AA	0xB1002F  	SUB	#2, W15
;__Lib_CAN_12.c,517 :: 		
0x02AC	0x37001D  	BRA	L_CAN1SetFilter23
;__Lib_CAN_12.c,518 :: 		
L_CAN1SetFilter27:
;__Lib_CAN_12.c,519 :: 		
0x02AE	0x781F8D  	PUSH	W13
0x02B0	0x20318A  	MOV	#lo_addr(C1RXF3SID), W10
0x02B2	0x20001D  	MOV	#1, W13
0x02B4	0x070090  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x02B6	0xB1002F  	SUB	#2, W15
;__Lib_CAN_12.c,520 :: 		
0x02B8	0x370017  	BRA	L_CAN1SetFilter23
;__Lib_CAN_12.c,521 :: 		
L_CAN1SetFilter28:
;__Lib_CAN_12.c,522 :: 		
0x02BA	0x781F8D  	PUSH	W13
0x02BC	0x20320A  	MOV	#lo_addr(C1RXF4SID), W10
0x02BE	0x20001D  	MOV	#1, W13
0x02C0	0x07008A  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x02C2	0xB1002F  	SUB	#2, W15
;__Lib_CAN_12.c,523 :: 		
0x02C4	0x370011  	BRA	L_CAN1SetFilter23
;__Lib_CAN_12.c,524 :: 		
L_CAN1SetFilter29:
;__Lib_CAN_12.c,525 :: 		
0x02C6	0x781F8D  	PUSH	W13
0x02C8	0x20328A  	MOV	#lo_addr(C1RXF5SID), W10
0x02CA	0x20001D  	MOV	#1, W13
0x02CC	0x070084  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x02CE	0xB1002F  	SUB	#2, W15
;__Lib_CAN_12.c,526 :: 		
0x02D0	0x37000B  	BRA	L_CAN1SetFilter23
L_CAN1SetFilter22:
0x02D2	0xE15060  	CP	W10, #0
0x02D4	0x32FFDA  	BRA Z	L_CAN1SetFilter24
L__CAN1SetFilter140:
0x02D6	0xE15061  	CP	W10, #1
0x02D8	0x32FFDE  	BRA Z	L_CAN1SetFilter25
L__CAN1SetFilter141:
0x02DA	0xE15062  	CP	W10, #2
0x02DC	0x32FFE2  	BRA Z	L_CAN1SetFilter26
L__CAN1SetFilter142:
0x02DE	0xE15063  	CP	W10, #3
0x02E0	0x32FFE6  	BRA Z	L_CAN1SetFilter27
L__CAN1SetFilter143:
0x02E2	0xE15064  	CP	W10, #4
0x02E4	0x32FFEA  	BRA Z	L_CAN1SetFilter28
L__CAN1SetFilter144:
0x02E6	0x37FFEF  	BRA	L_CAN1SetFilter29
L_CAN1SetFilter23:
;__Lib_CAN_12.c,527 :: 		
L_end_CAN1SetFilter:
0x02E8	0x7806CF  	POP	W13
0x02EA	0x78054F  	POP	W10
0x02EC	0xFA8000  	ULNK
0x02EE	0x060000  	RETURN
; end of _CAN1SetFilter
_Can_initInterrupt:
;can.c,131 :: 		void Can_initInterrupt(void) {
;can.c,133 :: 		INTERRUPT_PROTECT(IEC1BITS.C1IE = 1);
0x02F0	0x200420  	MOV	#lo_addr(SRbits), W0
0x02F2	0x784010  	MOV.B	[W0], W0
0x02F4	0x784080  	MOV.B	W0, W1
0x02F6	0xB3CE00  	MOV.B	#224, W0
0x02F8	0x60C080  	AND.B	W1, W0, W1
0x02FA	0xFB8001  	ZE	W1, W0
0x02FC	0xDE00C5  	LSR	W0, #5, W1
; save_sr start address is: 4 (W2)
0x02FE	0xFB8101  	ZE	W1, W2
; DISI_save start address is: 6 (W3)
0x0300	0x800293  	MOV	DISICNT, W3
0x0302	0xFC03FF  	DISI	#1023
0x0304	0x200420  	MOV	#lo_addr(SRbits), W0
0x0306	0x784090  	MOV.B	[W0], W1
0x0308	0xB3CE00  	MOV.B	#224, W0
0x030A	0x70C080  	IOR.B	W1, W0, W1
0x030C	0x200420  	MOV	#lo_addr(SRbits), W0
0x030E	0x784801  	MOV.B	W1, [W0]
0x0310	0x000000  	NOP
0x0312	0x000000  	NOP
0x0314	0x880293  	MOV	W3, DISICNT
; DISI_save end address is: 6 (W3)
0x0316	0xA8608F  	BSET	IEC1bits, #11
; DISI_save start address is: 8 (W4)
0x0318	0x800294  	MOV	DISICNT, W4
0x031A	0xFC03FF  	DISI	#1023
0x031C	0x784182  	MOV.B	W2, W3
; save_sr end address is: 4 (W2)
0x031E	0xB3C050  	MOV.B	#5, W0
0x0320	0xFB8083  	ZE	W3, W1
0x0322	0xFB0100  	SE	W0, W2
0x0324	0xDD0982  	SL	W1, W2, W3
0x0326	0x200420  	MOV	#lo_addr(SRbits), W0
0x0328	0x69C190  	XOR.B	W3, [W0], W3
0x032A	0xB3CE00  	MOV.B	#224, W0
0x032C	0x61C180  	AND.B	W3, W0, W3
0x032E	0x200420  	MOV	#lo_addr(SRbits), W0
0x0330	0x69C190  	XOR.B	W3, [W0], W3
0x0332	0x200420  	MOV	#lo_addr(SRbits), W0
0x0334	0x784803  	MOV.B	W3, [W0]
0x0336	0x000000  	NOP
0x0338	0x000000  	NOP
0x033A	0x880294  	MOV	W4, DISICNT
; DISI_save end address is: 8 (W4)
;can.c,134 :: 		INTERRUPT_PROTECT(C1INTEBITS.RXB0IE = 1); //An interrupt is generated everytime that a message passes through the mask in buffer 0
0x033C	0x200420  	MOV	#lo_addr(SRbits), W0
0x033E	0x784010  	MOV.B	[W0], W0
0x0340	0x784080  	MOV.B	W0, W1
0x0342	0xB3CE00  	MOV.B	#224, W0
0x0344	0x60C080  	AND.B	W1, W0, W1
0x0346	0xFB8001  	ZE	W1, W0
0x0348	0xDE00C5  	LSR	W0, #5, W1
; save_sr start address is: 4 (W2)
0x034A	0xFB8101  	ZE	W1, W2
; DISI_save start address is: 6 (W3)
0x034C	0x800293  	MOV	DISICNT, W3
0x034E	0xFC03FF  	DISI	#1023
0x0350	0x200420  	MOV	#lo_addr(SRbits), W0
0x0352	0x784090  	MOV.B	[W0], W1
0x0354	0xB3CE00  	MOV.B	#224, W0
0x0356	0x70C080  	IOR.B	W1, W0, W1
0x0358	0x200420  	MOV	#lo_addr(SRbits), W0
0x035A	0x784801  	MOV.B	W1, [W0]
0x035C	0x000000  	NOP
0x035E	0x000000  	NOP
0x0360	0x880293  	MOV	W3, DISICNT
; DISI_save end address is: 6 (W3)
0x0362	0xA80398  	BSET.B	C1INTEbits, #0
; DISI_save start address is: 8 (W4)
0x0364	0x800294  	MOV	DISICNT, W4
0x0366	0xFC03FF  	DISI	#1023
0x0368	0x784182  	MOV.B	W2, W3
; save_sr end address is: 4 (W2)
0x036A	0xB3C050  	MOV.B	#5, W0
0x036C	0xFB8083  	ZE	W3, W1
0x036E	0xFB0100  	SE	W0, W2
0x0370	0xDD0982  	SL	W1, W2, W3
0x0372	0x200420  	MOV	#lo_addr(SRbits), W0
0x0374	0x69C190  	XOR.B	W3, [W0], W3
0x0376	0xB3CE00  	MOV.B	#224, W0
0x0378	0x61C180  	AND.B	W3, W0, W3
0x037A	0x200420  	MOV	#lo_addr(SRbits), W0
0x037C	0x69C190  	XOR.B	W3, [W0], W3
0x037E	0x200420  	MOV	#lo_addr(SRbits), W0
0x0380	0x784803  	MOV.B	W3, [W0]
0x0382	0x000000  	NOP
0x0384	0x000000  	NOP
0x0386	0x880294  	MOV	W4, DISICNT
; DISI_save end address is: 8 (W4)
;can.c,135 :: 		INTERRUPT_PROTECT(C1INTEBITS.RXB1IE = 1); //Suddividere gli ID da ricevere nei due buffer
0x0388	0x200420  	MOV	#lo_addr(SRbits), W0
0x038A	0x784010  	MOV.B	[W0], W0
0x038C	0x784080  	MOV.B	W0, W1
0x038E	0xB3CE00  	MOV.B	#224, W0
0x0390	0x60C080  	AND.B	W1, W0, W1
0x0392	0xFB8001  	ZE	W1, W0
0x0394	0xDE00C5  	LSR	W0, #5, W1
; save_sr start address is: 4 (W2)
0x0396	0xFB8101  	ZE	W1, W2
; DISI_save start address is: 6 (W3)
0x0398	0x800293  	MOV	DISICNT, W3
0x039A	0xFC03FF  	DISI	#1023
0x039C	0x200420  	MOV	#lo_addr(SRbits), W0
0x039E	0x784090  	MOV.B	[W0], W1
0x03A0	0xB3CE00  	MOV.B	#224, W0
0x03A2	0x70C080  	IOR.B	W1, W0, W1
0x03A4	0x200420  	MOV	#lo_addr(SRbits), W0
0x03A6	0x784801  	MOV.B	W1, [W0]
0x03A8	0x000000  	NOP
0x03AA	0x000000  	NOP
0x03AC	0x880293  	MOV	W3, DISICNT
; DISI_save end address is: 6 (W3)
0x03AE	0xA82398  	BSET.B	C1INTEbits, #1
; DISI_save start address is: 8 (W4)
0x03B0	0x800294  	MOV	DISICNT, W4
0x03B2	0xFC03FF  	DISI	#1023
0x03B4	0x784182  	MOV.B	W2, W3
; save_sr end address is: 4 (W2)
0x03B6	0xB3C050  	MOV.B	#5, W0
0x03B8	0xFB8083  	ZE	W3, W1
0x03BA	0xFB0100  	SE	W0, W2
0x03BC	0xDD0982  	SL	W1, W2, W3
0x03BE	0x200420  	MOV	#lo_addr(SRbits), W0
0x03C0	0x69C190  	XOR.B	W3, [W0], W3
0x03C2	0xB3CE00  	MOV.B	#224, W0
0x03C4	0x61C180  	AND.B	W3, W0, W3
0x03C6	0x200420  	MOV	#lo_addr(SRbits), W0
0x03C8	0x69C190  	XOR.B	W3, [W0], W3
0x03CA	0x200420  	MOV	#lo_addr(SRbits), W0
0x03CC	0x784803  	MOV.B	W3, [W0]
0x03CE	0x000000  	NOP
0x03D0	0x000000  	NOP
0x03D2	0x880294  	MOV	W4, DISICNT
; DISI_save end address is: 8 (W4)
;can.c,137 :: 		}
L_end_Can_initInterrupt:
0x03D4	0x060000  	RETURN
; end of _Can_initInterrupt
_Can_setWritePriority:
;can.c,96 :: 		void Can_setWritePriority(unsigned int txPriority) {
;can.c,97 :: 		can_txPriority = txPriority;
0x050C	0x88466A  	MOV	W10, _can_txPriority
;can.c,98 :: 		}
L_end_Can_setWritePriority:
0x050E	0x060000  	RETURN
; end of _Can_setWritePriority
_Can_resetWritePacket:
;can.c,100 :: 		void Can_resetWritePacket(void) {
;can.c,101 :: 		for (can_dataOutLength = 0; can_dataOutLength < CAN_PACKET_SIZE; can_dataOutLength += 1) {
0x0AE4	0xEF2000  	CLR	W0
0x0AE6	0x884670  	MOV	W0, _can_dataOutLength
L_Can_resetWritePacket9:
0x0AE8	0x804670  	MOV	_can_dataOutLength, W0
0x0AEA	0xE10068  	CP	W0, #8
0x0AEC	0x310009  	BRA GEU	L_Can_resetWritePacket10
L__Can_resetWritePacket29:
;can.c,102 :: 		can_dataOutBuffer[can_dataOutLength] = 0;
0x0AEE	0x215C01  	MOV	#lo_addr(_can_dataOutBuffer), W1
0x0AF0	0x208CE0  	MOV	#lo_addr(_can_dataOutLength), W0
0x0AF2	0x408090  	ADD	W1, [W0], W1
0x0AF4	0xEF2000  	CLR	W0
0x0AF6	0x784880  	MOV.B	W0, [W1]
;can.c,101 :: 		for (can_dataOutLength = 0; can_dataOutLength < CAN_PACKET_SIZE; can_dataOutLength += 1) {
0x0AF8	0x200011  	MOV	#1, W1
0x0AFA	0x208CE0  	MOV	#lo_addr(_can_dataOutLength), W0
0x0AFC	0x408810  	ADD	W1, [W0], [W0]
;can.c,103 :: 		}
0x0AFE	0x37FFF4  	BRA	L_Can_resetWritePacket9
L_Can_resetWritePacket10:
;can.c,104 :: 		can_dataOutLength = 0;
0x0B00	0xEF2000  	CLR	W0
0x0B02	0x884670  	MOV	W0, _can_dataOutLength
;can.c,105 :: 		}
L_end_Can_resetWritePacket:
0x0B04	0x060000  	RETURN
; end of _Can_resetWritePacket
_adc_init:
;User_Function.c,51 :: 		uint8_t adc_init(void){
;User_Function.c,53 :: 		IEC0bits.ADIE     = 0b1;               //adc interrupt enable
0x0B06	0xA8608D  	BSET	IEC0bits, #11
;User_Function.c,54 :: 		IPC2bits.ADIP     = 0b010;             //adc interrupt priority  2 MEDIA
0x0B08	0x220000  	MOV	#8192, W0
0x0B0A	0x780080  	MOV	W0, W1
0x0B0C	0x200980  	MOV	#lo_addr(IPC2bits), W0
0x0B0E	0x688090  	XOR	W1, [W0], W1
0x0B10	0x270000  	MOV	#28672, W0
0x0B12	0x608080  	AND	W1, W0, W1
0x0B14	0x200980  	MOV	#lo_addr(IPC2bits), W0
0x0B16	0x688090  	XOR	W1, [W0], W1
0x0B18	0x8804C1  	MOV	W1, IPC2bits
;User_Function.c,55 :: 		IFS0bits.ADIF     = 0b0;               //clear interrupt flag
0x0B1A	0xA96085  	BCLR	IFS0bits, #11
;User_Function.c,57 :: 		ADPCFG            = 0b000000000000000; //All Analog input pin in Analog mode, port read input disabled, A/D samples pin voltage
0x0B1C	0xEF22A8  	CLR	ADPCFG
;User_Function.c,58 :: 		ADCON3bits.ADCS   = 0b011000;          //set Tad of the ADC          x24Tcy
0x0B1E	0xB3C180  	MOV.B	#24, W0
0x0B20	0x784080  	MOV.B	W0, W1
0x0B22	0x202A40  	MOV	#lo_addr(ADCON3bits), W0
0x0B24	0x68C090  	XOR.B	W1, [W0], W1
0x0B26	0xB3C3F0  	MOV.B	#63, W0
0x0B28	0x60C080  	AND.B	W1, W0, W1
0x0B2A	0x202A40  	MOV	#lo_addr(ADCON3bits), W0
0x0B2C	0x68C090  	XOR.B	W1, [W0], W1
0x0B2E	0x202A40  	MOV	#lo_addr(ADCON3bits), W0
0x0B30	0x784801  	MOV.B	W1, [W0]
;User_Function.c,59 :: 		ADCON3bits.ADRC   = 0b0;              // clock from system
0x0B32	0xA9E2A4  	BCLR	ADCON3bits, #7
;User_Function.c,60 :: 		ADCON3bits.SAMC   = 0b00010;          // 2Tad
0x0B34	0x202000  	MOV	#512, W0
0x0B36	0x780080  	MOV	W0, W1
0x0B38	0x202A40  	MOV	#lo_addr(ADCON3bits), W0
0x0B3A	0x688090  	XOR	W1, [W0], W1
0x0B3C	0x21F000  	MOV	#7936, W0
0x0B3E	0x608080  	AND	W1, W0, W1
0x0B40	0x202A40  	MOV	#lo_addr(ADCON3bits), W0
0x0B42	0x688090  	XOR	W1, [W0], W1
0x0B44	0x881521  	MOV	W1, ADCON3bits
;User_Function.c,62 :: 		ADCON2bits.ALTS   = 0b0;              //Always use MUX A input multiplexer settings
0x0B46	0xA902A2  	BCLR	ADCON2bits, #0
;User_Function.c,63 :: 		ADCON2bits.BUFM   = 0b0;              //Buffer configured as one 16-word buffer ADCBUF(15...0)
0x0B48	0xA922A2  	BCLR	ADCON2bits, #1
;User_Function.c,64 :: 		ADCON2bits.SMPI   = 0b1111;            //Interrupts at the completion of conversion for each 16th sample/convert sequence
0x0B4A	0x202A20  	MOV	#lo_addr(ADCON2bits), W0
0x0B4C	0x784090  	MOV.B	[W0], W1
0x0B4E	0xB3C3C0  	MOV.B	#60, W0
0x0B50	0x70C080  	IOR.B	W1, W0, W1
0x0B52	0x202A20  	MOV	#lo_addr(ADCON2bits), W0
0x0B54	0x784801  	MOV.B	W1, [W0]
;User_Function.c,65 :: 		ADCON2bits.CSCNA  = 0b1;              //Scan inputs
0x0B56	0xA842A3  	BSET	ADCON2bits, #10
;User_Function.c,66 :: 		ADCON2bits.VCFG   = 0b000;            //internal voltage reference VDD
0x0B58	0x801511  	MOV	ADCON2bits, W1
0x0B5A	0x21FFF0  	MOV	#8191, W0
0x0B5C	0x608000  	AND	W1, W0, W0
0x0B5E	0xB7A2A2  	MOV	WREG, ADCON2bits
;User_Function.c,68 :: 		ADCON1bits.ASAM   = 0b1;              // Sampling begins immediately after last conversion completes. SAMP bit is auto set
0x0B60	0xA842A0  	BSET	ADCON1bits, #2
;User_Function.c,69 :: 		ADCON1bits.SSRC   = 0b111;            //Internal counter ends sampling and starts conversion (auto convert)
0x0B62	0x202A00  	MOV	#lo_addr(ADCON1bits), W0
0x0B64	0x784090  	MOV.B	[W0], W1
0x0B66	0xB3CE00  	MOV.B	#224, W0
0x0B68	0x70C080  	IOR.B	W1, W0, W1
0x0B6A	0x202A00  	MOV	#lo_addr(ADCON1bits), W0
0x0B6C	0x784801  	MOV.B	W1, [W0]
;User_Function.c,70 :: 		ADCON1bits.FORM   = 0b00;             //data output integer
0x0B6E	0x801501  	MOV	ADCON1bits, W1
0x0B70	0x2FCFF0  	MOV	#64767, W0
0x0B72	0x608000  	AND	W1, W0, W0
0x0B74	0xB7A2A0  	MOV	WREG, ADCON1bits
;User_Function.c,71 :: 		ADCON1bits.ADSIDL = 0b0;              // Continue module operation in Idle mode
0x0B76	0xA9A2A1  	BCLR	ADCON1bits, #13
;User_Function.c,72 :: 		ADCON1bits.ADON   = 0b0;
0x0B78	0xA9E2A1  	BCLR	ADCON1bits, #15
;User_Function.c,74 :: 		ADCSSL = 0xFFFF;     //scan ALL inputs
0x0B7A	0x2FFFF0  	MOV	#65535, W0
0x0B7C	0xB7A2AA  	MOV	WREG, ADCSSL
;User_Function.c,75 :: 		ADCHSbits.CH0NA = 0; //negative input for sampling Vref-
0x0B7E	0xA982A6  	BCLR	ADCHSbits, #4
;User_Function.c,77 :: 		return ADC_OK;
0x0B80	0xEF2000  	CLR	W0
;User_Function.c,79 :: 		}
L_end_adc_init:
0x0B82	0x060000  	RETURN
; end of _adc_init
_tmr4_init:
;User_Function.c,83 :: 		void tmr4_init(void){
;User_Function.c,85 :: 		T4CONbits.TON   = 0b1;
0x0EAA	0xA8E11F  	BSET	T4CONbits, #15
;User_Function.c,86 :: 		T4CONbits.TSIDL = 0b0;     //Continue timer operation in Idle mode
0x0EAC	0xA9A11F  	BCLR	T4CONbits, #13
;User_Function.c,87 :: 		T4CONbits.TGATE = 0b0;     //no gated time
0x0EAE	0xA9C11E  	BCLR	T4CONbits, #6
;User_Function.c,88 :: 		T4CONbits.TCKPS = 0b00;    //prescaler
0x0EB0	0x2011E0  	MOV	#lo_addr(T4CONbits), W0
0x0EB2	0x784090  	MOV.B	[W0], W1
0x0EB4	0xB3CCF0  	MOV.B	#207, W0
0x0EB6	0x60C080  	AND.B	W1, W0, W1
0x0EB8	0x2011E0  	MOV	#lo_addr(T4CONbits), W0
0x0EBA	0x784801  	MOV.B	W1, [W0]
;User_Function.c,89 :: 		T4CONbits.TCS = 0b0;       //Internal clock (FOSC/4)
0x0EBC	0xA9211E  	BCLR	T4CONbits, #1
;User_Function.c,92 :: 		T4CONbits.T32 = 0b0;       //16 bit timer, separated from timer5
0x0EBE	0xA9611E  	BCLR	T4CONbits, #3
;User_Function.c,93 :: 		IPC5bits.T4IP = 0b001;     //interrupt priority 1 BASSA
0x0EC0	0xB3C100  	MOV.B	#16, W0
0x0EC2	0x784080  	MOV.B	W0, W1
0x0EC4	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x0EC6	0x68C090  	XOR.B	W1, [W0], W1
0x0EC8	0xB3C700  	MOV.B	#112, W0
0x0ECA	0x60C080  	AND.B	W1, W0, W1
0x0ECC	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x0ECE	0x68C090  	XOR.B	W1, [W0], W1
0x0ED0	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x0ED2	0x784801  	MOV.B	W1, [W0]
;User_Function.c,95 :: 		IFS1bits.T4IF = 0b0;       //clear interrupt
0x0ED4	0xA9A086  	BCLR	IFS1bits, #5
;User_Function.c,96 :: 		IEC1bits.T4IE = 0b1;       //enable interrupt
0x0ED6	0xA8A08E  	BSET	IEC1bits, #5
;User_Function.c,98 :: 		TMR4 = 0b0;
0x0ED8	0xEF2114  	CLR	TMR4
;User_Function.c,99 :: 		PR4  = 0b0000110100000101;       // 3333 * 50ns = 167 us --> 6 KHz
0x0EDA	0x20D050  	MOV	#3333, W0
0x0EDC	0xB7A11A  	MOV	WREG, PR4
;User_Function.c,101 :: 		}
L_end_tmr4_init:
0x0EDE	0x060000  	RETURN
; end of _tmr4_init
_tmr5_init:
;User_Function.c,24 :: 		void tmr5_init(void){
;User_Function.c,26 :: 		T5CONbits.TON   = 0b1;
0x0EE0	0xA8E121  	BSET	T5CONbits, #15
;User_Function.c,27 :: 		T5CONbits.TSIDL = 0b0;     //Continue timer operation in Idle mode
0x0EE2	0xA9A121  	BCLR	T5CONbits, #13
;User_Function.c,28 :: 		T5CONbits.TGATE = 0b0;     //no gated time
0x0EE4	0xA9C120  	BCLR	T5CONbits, #6
;User_Function.c,29 :: 		T5CONbits.TCKPS = 0b01;    //prescaler 8
0x0EE6	0xB3C100  	MOV.B	#16, W0
0x0EE8	0x784080  	MOV.B	W0, W1
0x0EEA	0x201200  	MOV	#lo_addr(T5CONbits), W0
0x0EEC	0x68C090  	XOR.B	W1, [W0], W1
0x0EEE	0xB3C300  	MOV.B	#48, W0
0x0EF0	0x60C080  	AND.B	W1, W0, W1
0x0EF2	0x201200  	MOV	#lo_addr(T5CONbits), W0
0x0EF4	0x68C090  	XOR.B	W1, [W0], W1
0x0EF6	0x201200  	MOV	#lo_addr(T5CONbits), W0
0x0EF8	0x784801  	MOV.B	W1, [W0]
;User_Function.c,30 :: 		T5CONbits.TCS   = 0b0;     //Internal clock (FOSC/4)
0x0EFA	0xA92120  	BCLR	T5CONbits, #1
;User_Function.c,32 :: 		IPC5bits.T5IP = 0b011;     //interrupt priority 3  ALTA
0x0EFC	0x203000  	MOV	#768, W0
0x0EFE	0x780080  	MOV	W0, W1
0x0F00	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x0F02	0x688090  	XOR	W1, [W0], W1
0x0F04	0x207000  	MOV	#1792, W0
0x0F06	0x608080  	AND	W1, W0, W1
0x0F08	0x2009E0  	MOV	#lo_addr(IPC5bits), W0
0x0F0A	0x688090  	XOR	W1, [W0], W1
0x0F0C	0x8804F1  	MOV	W1, IPC5bits
;User_Function.c,34 :: 		IFS1bits.T5IF = 0b0;       //clear interrupt
0x0F0E	0xA9C086  	BCLR	IFS1bits, #6
;User_Function.c,35 :: 		IEC1bits.T5IE = 0b1;       //enable interrupt
0x0F10	0xA8C08E  	BSET	IEC1bits, #6
;User_Function.c,37 :: 		TMR5 = 0b0;
0x0F12	0xEF2118  	CLR	TMR5
;User_Function.c,38 :: 		PR5  = 24500;       //25000 * 8 * 50ns -> 0.01 s     //24500 per compensare la durata della routine
0x0F14	0x25FB40  	MOV	#24500, W0
0x0F16	0xB7A11C  	MOV	WREG, PR5
;User_Function.c,40 :: 		}
L_end_tmr5_init:
0x0F18	0x060000  	RETURN
; end of _tmr5_init
_tmr1_init:
;User_Function.c,103 :: 		void tmr1_init(void){
;User_Function.c,105 :: 		T1CONbits.TON   = 0b1;
0x0F1A	0xA8E105  	BSET	T1CONbits, #15
;User_Function.c,106 :: 		T1CONbits.TSIDL = 0b0;     //Continue timer operation in Idle mode
0x0F1C	0xA9A105  	BCLR	T1CONbits, #13
;User_Function.c,107 :: 		T1CONbits.TGATE = 0b0;     //no gated time
0x0F1E	0xA9C104  	BCLR	T1CONbits, #6
;User_Function.c,108 :: 		T1CONbits.TCKPS = 0b11;    //prescaler : 256
0x0F20	0x201040  	MOV	#lo_addr(T1CONbits), W0
0x0F22	0x784090  	MOV.B	[W0], W1
0x0F24	0xB3C300  	MOV.B	#48, W0
0x0F26	0x70C080  	IOR.B	W1, W0, W1
0x0F28	0x201040  	MOV	#lo_addr(T1CONbits), W0
0x0F2A	0x784801  	MOV.B	W1, [W0]
;User_Function.c,109 :: 		T1CONbits.TCS = 0b0;       //Internal clock (FOSC/4)
0x0F2C	0xA92104  	BCLR	T1CONbits, #1
;User_Function.c,112 :: 		IPC0bits.T1IP = 0b011;     //interrupt priority 3 ALTA
0x0F2E	0x230000  	MOV	#12288, W0
0x0F30	0x780080  	MOV	W0, W1
0x0F32	0x200940  	MOV	#lo_addr(IPC0bits), W0
0x0F34	0x688090  	XOR	W1, [W0], W1
0x0F36	0x270000  	MOV	#28672, W0
0x0F38	0x608080  	AND	W1, W0, W1
0x0F3A	0x200940  	MOV	#lo_addr(IPC0bits), W0
0x0F3C	0x688090  	XOR	W1, [W0], W1
0x0F3E	0x8804A1  	MOV	W1, IPC0bits
;User_Function.c,114 :: 		IFS0bits.T1IF = 0b0;       //clear interrupt
0x0F40	0xA96084  	BCLR	IFS0bits, #3
;User_Function.c,115 :: 		IEC0bits.T1IE = 0b1;       //enable interrupt
0x0F42	0xA8608C  	BSET	IEC0bits, #3
;User_Function.c,117 :: 		TMR1 = 0b0;
0x0F44	0xEF2100  	CLR	TMR1
;User_Function.c,118 :: 		PR1  = 0b0011110100001001;       // 15625 * 50ns * 256 = 0.2 s --> 5Hz
0x0F46	0x23D090  	MOV	#15625, W0
0x0F48	0xB7A102  	MOV	WREG, PR1
;User_Function.c,120 :: 		}
L_end_tmr1_init:
0x0F4A	0x060000  	RETURN
; end of _tmr1_init
0x121A	0x208001  	MOV	#lo_addr(_coeff), W1
0x121C	0x280000  	MOV	#32768, W0
0x121E	0x09006C  	REPEAT	#108
0x1220	0x7818B0  	MOV	[W0++], [W1++]
0x1222	0x060000  	RETURN
_canInterrupt:
0x103A	0xF80034  	PUSH	PSVPAG
0x103C	0xF80036  	PUSH	RCOUNT
0x103E	0x781F80  	PUSH	W0
0x1040	0x200020  	MOV	#2, W0
0x1042	0x09000C  	REPEAT	#12
0x1044	0x781FB0  	PUSH	[W0++]
;main.c,72 :: 		void canInterrupt() iv IVT_ADDR_C1INTERRUPT ics ICS_AUTO {
;main.c,74 :: 		Can_clearInterrupt();
0x1046	0x07FDDB  	RCALL	_Can_clearInterrupt
;main.c,75 :: 		}
L_end_canInterrupt:
0x1048	0x2001A0  	MOV	#26, W0
0x104A	0x09000C  	REPEAT	#12
0x104C	0x78104F  	POP	[W0--]
0x104E	0x78004F  	POP	W0
0x1050	0xF90036  	POP	RCOUNT
0x1052	0xF90034  	POP	PSVPAG
0x1054	0x064000  	RETFIE
; end of _canInterrupt
_Can_clearInterrupt:
;can.c,127 :: 		void Can_clearInterrupt(void) {
;can.c,128 :: 		CAN_INTERRUPT_OCCURRED = 0;
0x0BFE	0xA96087  	BCLR	IFS1bits, #11
;can.c,129 :: 		}
L_end_Can_clearInterrupt:
0x0C00	0x060000  	RETURN
; end of _Can_clearInterrupt
_TIMER5_INT:
0x1082	0xFA0002  	LNK	#2
0x1084	0xF80034  	PUSH	PSVPAG
0x1086	0xF80036  	PUSH	RCOUNT
0x1088	0x781F80  	PUSH	W0
0x108A	0x200020  	MOV	#2, W0
0x108C	0x09000C  	REPEAT	#12
0x108E	0x781FB0  	PUSH	[W0++]
;main.c,79 :: 		void TIMER5_INT() iv IVT_ADDR_T5INTERRUPT ics ICS_AUTO {
;main.c,81 :: 		int t_send = time_index;
0x1090	0x781F8A  	PUSH	W10
0x1092	0x781F8B  	PUSH	W11
; t_send start address is: 4 (W2)
0x1094	0x8046A2  	MOV	_time_index, W2
;main.c,82 :: 		int Channel_Index_send = 0;
;main.c,85 :: 		for (Channel_Index_send = 0; Channel_Index_send < N_CHANNEL; Channel_Index_send++){
; Channel_Index_send start address is: 6 (W3)
0x1096	0xEF2006  	CLR	W3
; Channel_Index_send end address is: 6 (W3)
L_TIMER5_INT5:
; Channel_Index_send start address is: 6 (W3)
; t_send start address is: 4 (W2)
; t_send end address is: 4 (W2)
0x1098	0xE11870  	CP	W3, #16
0x109A	0x3D000D  	BRA GE	L_TIMER5_INT6
L__TIMER5_INT37:
; t_send end address is: 4 (W2)
;main.c,86 :: 		data_out[Channel_Index_send] = FIR_filter(Channel_Index_send, t_send);            //CHIAMATA FUNZIONE FILTRO
; t_send start address is: 4 (W2)
0x109C	0xDD18C1  	SL	W3, #1, W1
0x109E	0x215A00  	MOV	#lo_addr(_data_out), W0
0x10A0	0x400001  	ADD	W0, W1, W0
0x10A2	0x980700  	MOV	W0, [W14+0]
0x10A4	0xBE9F82  	PUSH.D	W2
0x10A6	0x780582  	MOV	W2, W11
0x10A8	0x780503  	MOV	W3, W10
0x10AA	0x07FE38  	RCALL	_FIR_filter
0x10AC	0xBE014F  	POP.D	W2
0x10AE	0x90008E  	MOV	[W14+0], W1
0x10B0	0x780880  	MOV	W0, [W1]
;main.c,85 :: 		for (Channel_Index_send = 0; Channel_Index_send < N_CHANNEL; Channel_Index_send++){
0x10B2	0xEC2006  	INC	W3
;main.c,87 :: 		}
; t_send end address is: 4 (W2)
; Channel_Index_send end address is: 6 (W3)
0x10B4	0x37FFF1  	BRA	L_TIMER5_INT5
L_TIMER5_INT6:
;main.c,89 :: 		switch (DAU_ID){
0x10B6	0x370057  	BRA	L_TIMER5_INT8
;main.c,91 :: 		case DAU_REAR :
L_TIMER5_INT10:
;main.c,93 :: 		Can_resetWritePacket();
0x10B8	0x07FD15  	RCALL	_Can_resetWritePacket
;main.c,94 :: 		Can_addIntToWritePacket(data_out[IN_1]);			//lineare rear left
0x10BA	0x80AD2A  	MOV	_data_out+4, W10
0x10BC	0x07FCDE  	RCALL	_Can_addIntToWritePacket
;main.c,95 :: 		Can_addIntToWritePacket(data_out[LC_1]);			//load cell  rear left
0x10BE	0x80AD0A  	MOV	_data_out, W10
0x10C0	0x07FCDC  	RCALL	_Can_addIntToWritePacket
;main.c,96 :: 		Can_addIntToWritePacket(data_out[IN_5_J3]);		//lineare rear right
0x10C2	0x80AD4A  	MOV	_data_out+8, W10
0x10C4	0x07FCDA  	RCALL	_Can_addIntToWritePacket
;main.c,97 :: 		Can_addIntToWritePacket(data_out[LC_2]);			//load cell rear rigth
0x10C6	0x80AD1A  	MOV	_data_out+2, W10
0x10C8	0x07FCD8  	RCALL	_Can_addIntToWritePacket
;main.c,98 :: 		Can_write(DAU_REAR_ID);                         	//0x652
0x10CA	0x20652A  	MOV	#1618, W10
0x10CC	0x20000B  	MOV	#0, W11
0x10CE	0x07FCE7  	RCALL	_Can_write
;main.c,100 :: 		Can_resetWritePacket();
0x10D0	0x07FD09  	RCALL	_Can_resetWritePacket
;main.c,101 :: 		Can_addIntToWritePacket(data_out[IR1]);
0x10D2	0x80AD8A  	MOV	_data_out+16, W10
0x10D4	0x07FCD2  	RCALL	_Can_addIntToWritePacket
;main.c,102 :: 		Can_addIntToWritePacket(data_out[IR2]);
0x10D6	0x80AD9A  	MOV	_data_out+18, W10
0x10D8	0x07FCD0  	RCALL	_Can_addIntToWritePacket
;main.c,103 :: 		Can_addIntToWritePacket(data_out[IR3]);
0x10DA	0x80ADAA  	MOV	_data_out+20, W10
0x10DC	0x07FCCE  	RCALL	_Can_addIntToWritePacket
;main.c,104 :: 		Can_addIntToWritePacket(data_out[IN_2]);			//BREAKE IR RL
0x10DE	0x80AD3A  	MOV	_data_out+6, W10
0x10E0	0x07FCCC  	RCALL	_Can_addIntToWritePacket
;main.c,105 :: 		Can_write(DAU_REAR_IR_RL_ID);                   	//0x656
0x10E2	0x20656A  	MOV	#1622, W10
0x10E4	0x20000B  	MOV	#0, W11
0x10E6	0x07FCDB  	RCALL	_Can_write
;main.c,107 :: 		Can_resetWritePacket();
0x10E8	0x07FCFD  	RCALL	_Can_resetWritePacket
;main.c,108 :: 		Can_addIntToWritePacket(data_out[IR4]);
0x10EA	0x80ADBA  	MOV	_data_out+22, W10
0x10EC	0x07FCC6  	RCALL	_Can_addIntToWritePacket
;main.c,109 :: 		Can_addIntToWritePacket(data_out[IR5]);
0x10EE	0x80ADCA  	MOV	_data_out+24, W10
0x10F0	0x07FCC4  	RCALL	_Can_addIntToWritePacket
;main.c,110 :: 		Can_addIntToWritePacket(data_out[IR6]);
0x10F2	0x80ADDA  	MOV	_data_out+26, W10
0x10F4	0x07FCC2  	RCALL	_Can_addIntToWritePacket
;main.c,111 :: 		Can_addIntToWritePacket(data_out[IN_6_J4]);		//BREAKE IR RR
0x10F6	0x80AD5A  	MOV	_data_out+10, W10
0x10F8	0x07FCC0  	RCALL	_Can_addIntToWritePacket
;main.c,112 :: 		Can_write(DAU_REAR_IR_RR_ID);                   	//0x657
0x10FA	0x20657A  	MOV	#1623, W10
0x10FC	0x20000B  	MOV	#0, W11
0x10FE	0x07FCCF  	RCALL	_Can_write
;main.c,115 :: 		break;
0x1100	0x37003E  	BRA	L_TIMER5_INT9
;main.c,117 :: 		case DAU_FR :
L_TIMER5_INT11:
;main.c,119 :: 		Can_resetWritePacket();
0x1102	0x07FCF0  	RCALL	_Can_resetWritePacket
;main.c,120 :: 		Can_addIntToWritePacket(data_out[IN_1]);
0x1104	0x80AD2A  	MOV	_data_out+4, W10
0x1106	0x07FCB9  	RCALL	_Can_addIntToWritePacket
;main.c,121 :: 		Can_addIntToWritePacket(data_out[LC_1]);
0x1108	0x80AD0A  	MOV	_data_out, W10
0x110A	0x07FCB7  	RCALL	_Can_addIntToWritePacket
;main.c,122 :: 		Can_addIntToWritePacket(data_out[IN_5_J3]);
0x110C	0x80AD4A  	MOV	_data_out+8, W10
0x110E	0x07FCB5  	RCALL	_Can_addIntToWritePacket
;main.c,123 :: 		Can_addIntToWritePacket(data_out[IN_6_J4]);
0x1110	0x80AD5A  	MOV	_data_out+10, W10
0x1112	0x07FCB3  	RCALL	_Can_addIntToWritePacket
;main.c,124 :: 		Can_write(DAU_FR_ID);                             //0x650
0x1114	0x20650A  	MOV	#1616, W10
0x1116	0x20000B  	MOV	#0, W11
0x1118	0x07FCC2  	RCALL	_Can_write
;main.c,126 :: 		Can_resetWritePacket();
0x111A	0x07FCE4  	RCALL	_Can_resetWritePacket
;main.c,127 :: 		Can_addIntToWritePacket(data_out[IR1]);
0x111C	0x80AD8A  	MOV	_data_out+16, W10
0x111E	0x07FCAD  	RCALL	_Can_addIntToWritePacket
;main.c,128 :: 		Can_addIntToWritePacket(data_out[IR2]);
0x1120	0x80AD9A  	MOV	_data_out+18, W10
0x1122	0x07FCAB  	RCALL	_Can_addIntToWritePacket
;main.c,129 :: 		Can_addIntToWritePacket(data_out[IR3]);
0x1124	0x80ADAA  	MOV	_data_out+20, W10
0x1126	0x07FCA9  	RCALL	_Can_addIntToWritePacket
;main.c,130 :: 		Can_addIntToWritePacket(data_out[IN_2]);
0x1128	0x80AD3A  	MOV	_data_out+6, W10
0x112A	0x07FCA7  	RCALL	_Can_addIntToWritePacket
;main.c,131 :: 		Can_write(DAU_FR_IR_ID);                          //0x655
0x112C	0x20655A  	MOV	#1621, W10
0x112E	0x20000B  	MOV	#0, W11
0x1130	0x07FCB6  	RCALL	_Can_write
;main.c,133 :: 		break;
0x1132	0x370025  	BRA	L_TIMER5_INT9
;main.c,135 :: 		case DAU_FL :
L_TIMER5_INT12:
;main.c,137 :: 		Can_resetWritePacket();
0x1134	0x07FCD7  	RCALL	_Can_resetWritePacket
;main.c,138 :: 		Can_addIntToWritePacket(data_out[IN_1]);
0x1136	0x80AD2A  	MOV	_data_out+4, W10
0x1138	0x07FCA0  	RCALL	_Can_addIntToWritePacket
;main.c,139 :: 		Can_addIntToWritePacket(data_out[LC_1]);
0x113A	0x80AD0A  	MOV	_data_out, W10
0x113C	0x07FC9E  	RCALL	_Can_addIntToWritePacket
;main.c,140 :: 		Can_addIntToWritePacket(data_out[IN_5_J3]);
0x113E	0x80AD4A  	MOV	_data_out+8, W10
0x1140	0x07FC9C  	RCALL	_Can_addIntToWritePacket
;main.c,141 :: 		Can_addIntToWritePacket(data_out[IN_6_J4]);    //SE SENSORE STEER MONTATO STORTO VANNO CORRETTI I VALORI
0x1142	0x80AD5A  	MOV	_data_out+10, W10
0x1144	0x07FC9A  	RCALL	_Can_addIntToWritePacket
;main.c,142 :: 		Can_write(DAU_FL_ID);                    //0x651
0x1146	0x20651A  	MOV	#1617, W10
0x1148	0x20000B  	MOV	#0, W11
0x114A	0x07FCA9  	RCALL	_Can_write
;main.c,144 :: 		Can_resetWritePacket();
0x114C	0x07FCCB  	RCALL	_Can_resetWritePacket
;main.c,145 :: 		Can_addIntToWritePacket(data_out[IR1]);
0x114E	0x80AD8A  	MOV	_data_out+16, W10
0x1150	0x07FC94  	RCALL	_Can_addIntToWritePacket
;main.c,146 :: 		Can_addIntToWritePacket(data_out[IR2]);
0x1152	0x80AD9A  	MOV	_data_out+18, W10
0x1154	0x07FC92  	RCALL	_Can_addIntToWritePacket
;main.c,147 :: 		Can_addIntToWritePacket(data_out[IR3]);
0x1156	0x80ADAA  	MOV	_data_out+20, W10
0x1158	0x07FC90  	RCALL	_Can_addIntToWritePacket
;main.c,148 :: 		Can_addIntToWritePacket(data_out[IN_2]);   //SAREBBE LA TEMPERATURA FRENO. E OK QUI?
0x115A	0x80AD3A  	MOV	_data_out+6, W10
0x115C	0x07FC8E  	RCALL	_Can_addIntToWritePacket
;main.c,149 :: 		Can_write(DAU_FL_IR_ID);                 //0x654
0x115E	0x20654A  	MOV	#1620, W10
0x1160	0x20000B  	MOV	#0, W11
0x1162	0x07FC9D  	RCALL	_Can_write
;main.c,151 :: 		break;
0x1164	0x37000C  	BRA	L_TIMER5_INT9
;main.c,153 :: 		}
L_TIMER5_INT8:
0x1166	0x215C80  	MOV	#lo_addr(_DAU_ID), W0
0x1168	0x784010  	MOV.B	[W0], W0
0x116A	0xE10462  	CP.B	W0, #2
0x116C	0x32FFA5  	BRA Z	L_TIMER5_INT10
L__TIMER5_INT38:
0x116E	0x215C80  	MOV	#lo_addr(_DAU_ID), W0
0x1170	0x784010  	MOV.B	[W0], W0
0x1172	0xE10461  	CP.B	W0, #1
0x1174	0x32FFC6  	BRA Z	L_TIMER5_INT11
L__TIMER5_INT39:
0x1176	0x215C80  	MOV	#lo_addr(_DAU_ID), W0
0x1178	0x784010  	MOV.B	[W0], W0
0x117A	0xE10460  	CP.B	W0, #0
0x117C	0x32FFDB  	BRA Z	L_TIMER5_INT12
L__TIMER5_INT40:
L_TIMER5_INT9:
;main.c,157 :: 		TMR5_CONT++;
0x117E	0x200011  	MOV	#1, W1
0x1180	0x208DA0  	MOV	#lo_addr(_TMR5_CONT), W0
0x1182	0x408810  	ADD	W1, [W0], [W0]
;main.c,159 :: 		ADC_CONT = 0;                                // RESETTA IL CONTEGGIO DI SAMPLE ADC
0x1184	0xEF2000  	CLR	W0
0x1186	0x8846F0  	MOV	W0, _ADC_CONT
;main.c,160 :: 		IFS1bits.T5IF = 0;
0x1188	0xA9C086  	BCLR	IFS1bits, #6
;main.c,162 :: 		}
L_end_TIMER5_INT:
0x118A	0x7805CF  	POP	W11
0x118C	0x78054F  	POP	W10
0x118E	0x2001A0  	MOV	#26, W0
0x1190	0x09000C  	REPEAT	#12
0x1192	0x78104F  	POP	[W0--]
0x1194	0x78004F  	POP	W0
0x1196	0xF90036  	POP	RCOUNT
0x1198	0xF90034  	POP	PSVPAG
0x119A	0xFA8000  	ULNK
0x119C	0x064000  	RETFIE
; end of _TIMER5_INT
_FIR_filter:
;main.c,56 :: 		int FIR_filter(int Channel_Index_Filter, int time_index_filter){
;main.c,57 :: 		int sample = 0;                                 // Posizione nell array di data_buffer, incrementa fino a scorrere tutto l'array. La scelta del giusto coefficiente e' gestita da coeff_index
;main.c,58 :: 		int result = 0;
;main.c,59 :: 		unsigned long int sum_temp = 0;
; sum_temp start address is: 14 (W7)
0x0D1C	0xEF200E  	CLR	W7
0x0D1E	0xEF2010  	CLR	W8
;main.c,60 :: 		for (sample=0; sample<FILTER_ORDER+1; sample++){
; sample start address is: 12 (W6)
0x0D20	0xEF200C  	CLR	W6
; sum_temp end address is: 14 (W7)
; sample end address is: 12 (W6)
L_FIR_filter0:
; sample start address is: 12 (W6)
; sum_temp start address is: 14 (W7)
0x0D22	0x200330  	MOV	#51, W0
0x0D24	0xE13000  	CP	W6, W0
0x0D26	0x3D0019  	BRA GE	L_FIR_filter1
L__FIR_filter33:
;main.c,61 :: 		sum_temp += (data_buffer[Channel_Index_Filter][sample])*(coeff[time_index_filter]);   // sommatoria del prodotto di tutti i sample per il relativo coefficiente
0x0D28	0x200CC0  	MOV	#204, W0
0x0D2A	0xB8010A  	MUL.UU	W0, W10, W2
0x0D2C	0x208E00  	MOV	#lo_addr(_data_buffer), W0
0x0D2E	0x400082  	ADD	W0, W2, W1
0x0D30	0xDD3042  	SL	W6, #2, W0
0x0D32	0x408000  	ADD	W1, W0, W0
0x0D34	0x7801B0  	MOV	[W0++], W3
0x0D36	0x780220  	MOV	[W0--], W4
0x0D38	0xDD58C2  	SL	W11, #2, W1
0x0D3A	0x208000  	MOV	#lo_addr(_coeff), W0
0x0D3C	0x400101  	ADD	W0, W1, W2
0x0D3E	0xBE0012  	MOV.D	[W2], W0
0x0D40	0x780103  	MOV	W3, W2
0x0D42	0x780184  	MOV	W4, W3
0x0D44	0x07FC7E  	RCALL	__Multiply_32x32
0x0D46	0x438380  	ADD	W7, W0, W7
0x0D48	0x4C0401  	ADDC	W8, W1, W8
;main.c,62 :: 		if (time_index_filter == 0) time_index_filter = FILTER_ORDER;
0x0D4A	0xE15860  	CP	W11, #0
0x0D4C	0x3A0002  	BRA NZ	L_FIR_filter3
L__FIR_filter34:
0x0D4E	0x20032B  	MOV	#50, W11
0x0D50	0x370002  	BRA	L_FIR_filter4
L_FIR_filter3:
;main.c,63 :: 		else time_index_filter--;
0x0D52	0x558061  	SUB	W11, #1, W0
0x0D54	0x780580  	MOV	W0, W11
L_FIR_filter4:
;main.c,60 :: 		for (sample=0; sample<FILTER_ORDER+1; sample++){
0x0D56	0xEC200C  	INC	W6
;main.c,64 :: 		}
; sample end address is: 12 (W6)
0x0D58	0x37FFE4  	BRA	L_FIR_filter0
L_FIR_filter1:
;main.c,66 :: 		result = ceil(sum_temp/filter_factor);
0x0D5A	0xBE9F8A  	PUSH.D	W10
; sum_temp end address is: 14 (W7)
0x0D5C	0x780007  	MOV	W7, W0
0x0D5E	0x780088  	MOV	W8, W1
0x0D60	0x804682  	MOV	_filter_factor, W2
0x0D62	0x804693  	MOV	_filter_factor+2, W3
0x0D64	0xEB0200  	CLR	W4
0x0D66	0x07FC44  	RCALL	__Divide_32x32
0x0D68	0x07FDF1  	RCALL	__Long2Float
0x0D6A	0xBE0500  	MOV.D	W0, W10
0x0D6C	0x07FC73  	RCALL	_ceil
0x0D6E	0x07FE49  	RCALL	__Float2Longint
0x0D70	0xBE054F  	POP.D	W10
;main.c,67 :: 		return result;
;main.c,68 :: 		}
L_end_FIR_filter:
0x0D72	0x060000  	RETURN
; end of _FIR_filter
_ceil:
0x0654	0xFA0000  	LNK	#0
;__Lib_CMath.c,60 :: 		
;__Lib_CMath.c,64 :: 		
0x0656	0xDE58C7  	LSR	W11, #7, W1
0x0658	0xEB0100  	CLR	W2
0x065A	0x200FF0  	MOV	#255, W0
0x065C	0x608080  	AND	W1, W0, W1
0x065E	0x2007F0  	MOV	#127, W0
0x0660	0x508000  	SUB	W1, W0, W0
; expon start address is: 2 (W1)
0x0662	0x780080  	MOV	W0, W1
;__Lib_CMath.c,65 :: 		
0x0664	0xE10060  	CP	W0, #0
0x0666	0x3D0010  	BRA GE	L_ceil6
L__ceil82:
; expon end address is: 2 (W1)
;__Lib_CMath.c,66 :: 		
0x0668	0xEF2004  	CLR	W2
0x066A	0xEF2006  	CLR	W3
0x066C	0xBE000A  	MOV.D	W10, W0
0x066E	0x07FF49  	RCALL	__Compare_Le_Fp
0x0670	0xE00000  	CP0	W0
0x0672	0xEF6000  	CLR.B	W0
0x0674	0x3C0001  	BRA GT	L__ceil83
0x0676	0xEC6000  	INC.B	W0
L__ceil83:
0x0678	0xE24000  	CP0.B	W0
0x067A	0x320003  	BRA Z	L_ceil7
L__ceil84:
;__Lib_CMath.c,67 :: 		
0x067C	0xEF2000  	CLR	W0
0x067E	0xEF2002  	CLR	W1
0x0680	0x37001D  	BRA	L_end_ceil
L_ceil7:
;__Lib_CMath.c,69 :: 		
0x0682	0x200000  	MOV	#0, W0
0x0684	0x23F801  	MOV	#16256, W1
0x0686	0x37001A  	BRA	L_end_ceil
L_ceil6:
;__Lib_CMath.c,70 :: 		
; expon start address is: 2 (W1)
0x0688	0xE10878  	CP	W1, #24
0x068A	0x360002  	BRA LEU	L_ceil9
L__ceil85:
; expon end address is: 2 (W1)
;__Lib_CMath.c,71 :: 		
0x068C	0xBE000A  	MOV.D	W10, W0
0x068E	0x370016  	BRA	L_end_ceil
L_ceil9:
;__Lib_CMath.c,72 :: 		
0x0690	0xBE9F8A  	PUSH.D	W10
0x0692	0xBE000A  	MOV.D	W10, W0
0x0694	0x0701B6  	RCALL	__Float2Longint
0x0696	0xEB8100  	SETM	W2
0x0698	0x070159  	RCALL	__Long2Float
0x069A	0xBE054F  	POP.D	W10
; i start address is: 4 (W2)
0x069C	0xBE0100  	MOV.D	W0, W2
;__Lib_CMath.c,73 :: 		
0x069E	0xBE9F82  	PUSH.D	W2
0x06A0	0xBE010A  	MOV.D	W10, W2
0x06A2	0x07FF2F  	RCALL	__Compare_Le_Fp
0x06A4	0xE00000  	CP0	W0
0x06A6	0xEF6000  	CLR.B	W0
0x06A8	0x3D0001  	BRA GE	L__ceil86
0x06AA	0xEC6000  	INC.B	W0
L__ceil86:
0x06AC	0xBE014F  	POP.D	W2
0x06AE	0xE24000  	CP0.B	W0
0x06B0	0x320004  	BRA Z	L_ceil10
L__ceil87:
;__Lib_CMath.c,74 :: 		
0x06B2	0x200000  	MOV	#0, W0
0x06B4	0x23F801  	MOV	#16256, W1
0x06B6	0x070039  	RCALL	__AddSub_FP
; i end address is: 4 (W2)
0x06B8	0x370001  	BRA	L_end_ceil
L_ceil10:
;__Lib_CMath.c,76 :: 		
; i start address is: 4 (W2)
0x06BA	0xBE0002  	MOV.D	W2, W0
; i end address is: 4 (W2)
;__Lib_CMath.c,77 :: 		
L_end_ceil:
0x06BC	0xFA8000  	ULNK
0x06BE	0x060000  	RETURN
; end of _ceil
__Float2Longint:
0x0A02	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,479 :: 		
;__Lib_MathDouble.c,481 :: 		
0x0A04	0x070002  	RCALL	Float2Longint__fixsfsi
;__Lib_MathDouble.c,482 :: 		
0x0A06	0x000000040A76  	GOTO	the_end__Float2Longint
;__Lib_MathDouble.c,486 :: 		
Float2Longint__fixsfsi:
;__Lib_MathDouble.c,487 :: 		
0x0A0A	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,488 :: 		
0x0A0C	0x07001F  	RCALL	Float2Longint__funpack
;__Lib_MathDouble.c,489 :: 		
0x0A0E	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,490 :: 		
0x0A10	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,491 :: 		
0x0A12	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,492 :: 		
0x0A14	0x320016  	BRA Z	Float2Longint_setsign
;__Lib_MathDouble.c,493 :: 		
0x0A16	0x35000D  	BRA LT	Float2Longint_shiftright
;__Lib_MathDouble.c,494 :: 		
0x0A18	0xE12868  	CP	W5, #8
;__Lib_MathDouble.c,495 :: 		
0x0A1A	0x350006  	BRA LT	Float2Longint_shiftleft
;__Lib_MathDouble.c,496 :: 		
0x0A1C	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,497 :: 		
0x0A1E	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,498 :: 		
0x0A20	0xE20006  	CP0	W3
;__Lib_MathDouble.c,499 :: 		
0x0A22	0x3B0013  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,500 :: 		
0x0A24	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,501 :: 		
0x0A26	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,502 :: 		
Float2Longint_shiftleft:
;__Lib_MathDouble.c,503 :: 		
0x0A28	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,504 :: 		
0x0A2A	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,505 :: 		
0x0A2C	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,506 :: 		
0x0A2E	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
;__Lib_MathDouble.c,507 :: 		
0x0A30	0x370008  	BRA	Float2Longint_setsign
;__Lib_MathDouble.c,508 :: 		
Float2Longint_shiftright:
;__Lib_MathDouble.c,509 :: 		
0x0A32	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,510 :: 		
0x0A34	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,511 :: 		
0x0A36	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,512 :: 		
0x0A38	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,513 :: 		
Float2Longint_shiftrightloop:
;__Lib_MathDouble.c,514 :: 		
0x0A3A	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,515 :: 		
0x0A3C	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,516 :: 		
0x0A3E	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,517 :: 		
0x0A40	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,518 :: 		
Float2Longint_setsign:
;__Lib_MathDouble.c,519 :: 		
0x0A42	0xE20006  	CP0	W3
;__Lib_MathDouble.c,520 :: 		
0x0A44	0x3B0002  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,521 :: 		
0x0A46	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,522 :: 		
0x0A48	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,523 :: 		
Float2Longint_exit:
;__Lib_MathDouble.c,524 :: 		
0x0A4A	0x060000  	RETURN
;__Lib_MathDouble.c,525 :: 		
Float2Longint__funpack:
;__Lib_MathDouble.c,526 :: 		
0x0A4C	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,527 :: 		
0x0A4E	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,528 :: 		
0x0A50	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,529 :: 		
0x0A52	0x320008  	BRA Z	Float2Longint_zeroorsub
;__Lib_MathDouble.c,530 :: 		
0x0A54	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,531 :: 		
0x0A56	0x320002  	BRA Z	Float2Longint_nanorinf
;__Lib_MathDouble.c,532 :: 		
Float2Longint_finitereturn:
;__Lib_MathDouble.c,533 :: 		
0x0A58	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,534 :: 		
0x0A5A	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,535 :: 		
Float2Longint_nanorinf:
;__Lib_MathDouble.c,536 :: 		
0x0A5C	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,537 :: 		
0x0A5E	0x320001  	BRA Z	Float2Longint_infinite
;__Lib_MathDouble.c,538 :: 		
0x0A60	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,539 :: 		
Float2Longint_infinite:
;__Lib_MathDouble.c,540 :: 		
0x0A62	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,541 :: 		
Float2Longint_zeroorsub:
;__Lib_MathDouble.c,542 :: 		
0x0A64	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,543 :: 		
0x0A66	0x3A0002  	BRA NZ	Float2Longint_subnormal
;__Lib_MathDouble.c,544 :: 		
0x0A68	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,545 :: 		
Float2Longint_normalize:
;__Lib_MathDouble.c,546 :: 		
0x0A6A	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,547 :: 		
Float2Longint_subnormal:
;__Lib_MathDouble.c,548 :: 		
0x0A6C	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,549 :: 		
0x0A6E	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,550 :: 		
0x0A70	0x3BFFFC  	BRA NN	Float2Longint_normalize
;__Lib_MathDouble.c,551 :: 		
0x0A72	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,552 :: 		
0x0A74	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,555 :: 		
the_end__Float2Longint:
;__Lib_MathDouble.c,557 :: 		
L_end__Float2Longint:
0x0A76	0xFA8000  	ULNK
0x0A78	0x060000  	RETURN
; end of __Float2Longint
__Long2Float:
0x094C	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,104 :: 		
;__Lib_MathDouble.c,106 :: 		
0x094E	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.c,107 :: 		
0x0950	0x0000000409FE  	GOTO	the_end__Long2Float
;__Lib_MathDouble.c,109 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.c,110 :: 		
0x0954	0xE20004  	CP0	W2
;__Lib_MathDouble.c,111 :: 		
0x0956	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.c,113 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.c,114 :: 		
0x0958	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,115 :: 		
0x095A	0xE20002  	CP0	W1
;__Lib_MathDouble.c,116 :: 		
0x095C	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.c,117 :: 		
0x095E	0xE20000  	CP0	W0
;__Lib_MathDouble.c,118 :: 		
0x0960	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,119 :: 		
0x0962	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,121 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.c,122 :: 		
0x0964	0x8800A1  	MOV	W1, W10
;__Lib_MathDouble.c,123 :: 		
0x0966	0xE20002  	CP0	W1
;__Lib_MathDouble.c,124 :: 		
0x0968	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.c,125 :: 		
0x096A	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.c,126 :: 		
0x096C	0xE20000  	CP0	W0
;__Lib_MathDouble.c,127 :: 		
0x096E	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,128 :: 		
0x0970	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,129 :: 		
Longint2Float_negative:
;__Lib_MathDouble.c,130 :: 		
0x0972	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,131 :: 		
0x0974	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,132 :: 		
0x0976	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.c,133 :: 		
0x0978	0x2CF001  	MOV	#52992, W1
;__Lib_MathDouble.c,134 :: 		
0x097A	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.c,136 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.c,137 :: 		
0x097C	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,138 :: 		
0x097E	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,139 :: 		
0x0980	0x20096B  	MOV	#150, W11
;__Lib_MathDouble.c,140 :: 		
0x0982	0xCF8209  	FF1L	W9, W4
;__Lib_MathDouble.c,141 :: 		
0x0984	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.c,142 :: 		
0x0986	0xCF8208  	FF1L	W8, W4
;__Lib_MathDouble.c,143 :: 		
0x0988	0xB04104  	ADD.B	#16, W4
;__Lib_MathDouble.c,144 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.c,145 :: 		
0x098A	0x524269  	SUB.B	W4, #9, W4
;__Lib_MathDouble.c,146 :: 		
0x098C	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.c,147 :: 		
0x098E	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.c,148 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.c,149 :: 		
0x0990	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,150 :: 		
0x0992	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,151 :: 		
0x0994	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,152 :: 		
0x0996	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,153 :: 		
0x0998	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,154 :: 		
0x099A	0xE84204  	INC.B	W4, W4
;__Lib_MathDouble.c,155 :: 		
0x099C	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.c,156 :: 		
0x099E	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.c,157 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.c,158 :: 		
0x09A0	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,159 :: 		
0x09A2	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,160 :: 		
0x09A4	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,161 :: 		
0x09A6	0xE94204  	DEC.B	W4, W4
;__Lib_MathDouble.c,162 :: 		
0x09A8	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.c,163 :: 		
Long2Float_round:
;__Lib_MathDouble.c,164 :: 		
0x09AA	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.c,165 :: 		
0x09AC	0xA7F00A  	BTSC	W10, #15
;__Lib_MathDouble.c,166 :: 		
0x09AE	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,167 :: 		
Long2Float_return0:
;__Lib_MathDouble.c,168 :: 		
0x09B0	0x060000  	RETURN
;__Lib_MathDouble.c,169 :: 		
Long2Float__fpack:
;__Lib_MathDouble.c,170 :: 		
0x09B2	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,171 :: 		
0x09B4	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,172 :: 		
0x09B6	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.c,173 :: 		
0x09B8	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,174 :: 		
0x09BA	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,175 :: 		
0x09BC	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,176 :: 		
0x09BE	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.c,177 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.c,178 :: 		
0x09C0	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,179 :: 		
0x09C2	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,180 :: 		
0x09C4	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,181 :: 		
0x09C6	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,182 :: 		
0x09C8	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,183 :: 		
0x09CA	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.c,184 :: 		
0x09CC	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,185 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.c,186 :: 		
0x09CE	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,187 :: 		
0x09D0	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,188 :: 		
0x09D2	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,189 :: 		
0x09D4	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,190 :: 		
0x09D6	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,191 :: 		
0x09D8	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,192 :: 		
0x09DA	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,193 :: 		
0x09DC	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,194 :: 		
0x09DE	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,195 :: 		
0x09E0	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,196 :: 		
0x09E2	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.c,197 :: 		
0x09E4	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,198 :: 		
0x09E6	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,199 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.c,200 :: 		
0x09E8	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,201 :: 		
0x09EA	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,202 :: 		
0x09EC	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.c,203 :: 		
0x09EE	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,204 :: 		
0x09F0	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,205 :: 		
0x09F2	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,206 :: 		
0x09F4	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,207 :: 		
0x09F6	0x060000  	RETURN
;__Lib_MathDouble.c,208 :: 		
Long2Float_overflow:
;__Lib_MathDouble.c,209 :: 		
0x09F8	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,210 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.c,211 :: 		
0x09FA	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,212 :: 		
0x09FC	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,215 :: 		
the_end__Long2Float:
;__Lib_MathDouble.c,218 :: 		
L_end__Long2Float:
0x09FE	0xFA8000  	ULNK
0x0A00	0x060000  	RETURN
; end of __Long2Float
__Compare_Le_Fp:
0x0502	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1348 :: 		
;__Lib_MathDouble.c,1349 :: 		
0x0504	0x200014  	MOV	#1, W4
;__Lib_MathDouble.c,1350 :: 		
0x0506	0x07FE84  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1351 :: 		
L_end__Compare_Le_Fp:
0x0508	0xFA8000  	ULNK
0x050A	0x060000  	RETURN
; end of __Compare_Le_Fp
__Compare_Fp:
0x0210	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1272 :: 		
;__Lib_MathDouble.c,1274 :: 		
0x0212	0x070002  	RCALL	CompareFp__fcompare
;__Lib_MathDouble.c,1275 :: 		
0x0214	0x00000004027E  	GOTO	the_end__Compare_Fp
;__Lib_MathDouble.c,1277 :: 		
CompareFp__fcompare:
;__Lib_MathDouble.c,1278 :: 		
0x0218	0x781F84  	MOV	W4, [W15++]
;__Lib_MathDouble.c,1279 :: 		
0x021A	0x070014  	RCALL	CompareFp__funpack2
;__Lib_MathDouble.c,1280 :: 		
0x021C	0x78004F  	MOV	[--W15], W0
;__Lib_MathDouble.c,1281 :: 		
0x021E	0x330011  	BRA N	CompareFp_exit
;__Lib_MathDouble.c,1282 :: 		
0x0220	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1283 :: 		
0x0222	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,1284 :: 		
0x0224	0x3B0006  	BRA NN	CompareFp_comparemag
;__Lib_MathDouble.c,1285 :: 		
0x0226	0x650504  	AND	W10, W4, W10
;__Lib_MathDouble.c,1286 :: 		
0x0228	0xA7000A  	BTSC	W10, #0
;__Lib_MathDouble.c,1287 :: 		
0x022A	0x370008  	BRA	CompareFp_returnEqual
;__Lib_MathDouble.c,1288 :: 		
0x022C	0xA6F009  	BTSS	W9, #15
;__Lib_MathDouble.c,1289 :: 		
0x022E	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1290 :: 		
0x0230	0x370008  	BRA	CompareFp_exit
;__Lib_MathDouble.c,1291 :: 		
CompareFp_comparemag:
;__Lib_MathDouble.c,1292 :: 		
0x0232	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,1293 :: 		
0x0234	0x5C8F83  	SUBB	W9, W3, [W15]
;__Lib_MathDouble.c,1294 :: 		
0x0236	0x390003  	BRA LTU	CompareFp_adjust
;__Lib_MathDouble.c,1295 :: 		
0x0238	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1296 :: 		
0x023A	0x3E0001  	BRA GTU	CompareFp_adjust
;__Lib_MathDouble.c,1297 :: 		
CompareFp_returnEqual:
;__Lib_MathDouble.c,1298 :: 		
0x023C	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1299 :: 		
CompareFp_adjust:
;__Lib_MathDouble.c,1300 :: 		
0x023E	0xA7F009  	BTSC	W9, #15
;__Lib_MathDouble.c,1301 :: 		
0x0240	0xEA0000  	NEG	W0, W0
;__Lib_MathDouble.c,1302 :: 		
CompareFp_exit:
;__Lib_MathDouble.c,1303 :: 		
0x0242	0x060000  	RETURN
;__Lib_MathDouble.c,1304 :: 		
CompareFp__funpack2:
;__Lib_MathDouble.c,1305 :: 		
0x0244	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1306 :: 		
0x0246	0x070006  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1307 :: 		
0x0248	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1308 :: 		
0x024A	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1309 :: 		
0x024C	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1310 :: 		
0x024E	0x070002  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1311 :: 		
0x0250	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1312 :: 		
0x0252	0x060000  	RETURN
;__Lib_MathDouble.c,1313 :: 		
CompareFp__funpack:
;__Lib_MathDouble.c,1314 :: 		
0x0254	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1315 :: 		
0x0256	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1316 :: 		
0x0258	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1317 :: 		
0x025A	0x320008  	BRA Z	CompareFp_zeroorsub
;__Lib_MathDouble.c,1318 :: 		
0x025C	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1319 :: 		
0x025E	0x320002  	BRA Z	CompareFp_nanorinf
;__Lib_MathDouble.c,1320 :: 		
CompareFp_finitereturn:
;__Lib_MathDouble.c,1321 :: 		
0x0260	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1322 :: 		
0x0262	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1323 :: 		
CompareFp_nanorinf:
;__Lib_MathDouble.c,1324 :: 		
0x0264	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1325 :: 		
0x0266	0x320001  	BRA Z	CompareFp_infinite
;__Lib_MathDouble.c,1326 :: 		
0x0268	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1327 :: 		
CompareFp_infinite:
;__Lib_MathDouble.c,1328 :: 		
0x026A	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1329 :: 		
CompareFp_zeroorsub:
;__Lib_MathDouble.c,1330 :: 		
0x026C	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1331 :: 		
0x026E	0x3A0002  	BRA NZ	CompareFp_subnormal
;__Lib_MathDouble.c,1332 :: 		
0x0270	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1333 :: 		
CompareFp_normalize:
;__Lib_MathDouble.c,1334 :: 		
0x0272	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1335 :: 		
CompareFp_subnormal:
;__Lib_MathDouble.c,1336 :: 		
0x0274	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1337 :: 		
0x0276	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1338 :: 		
0x0278	0x3BFFFC  	BRA NN	CompareFp_normalize
;__Lib_MathDouble.c,1339 :: 		
0x027A	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1340 :: 		
0x027C	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1343 :: 		
the_end__Compare_Fp:
;__Lib_MathDouble.c,1345 :: 		
L_end__Compare_Fp:
0x027E	0xFA8000  	ULNK
0x0280	0x060000  	RETURN
; end of __Compare_Fp
__AddSub_FP:
0x072A	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,582 :: 		
;__Lib_MathDouble.c,584 :: 		
0x072C	0x070002  	RCALL	AddSubFP__addsf3
;__Lib_MathDouble.c,585 :: 		
0x072E	0x000000040892  	GOTO	the_end__AddSub_FP
;__Lib_MathDouble.c,588 :: 		
AddSubFP__addsf3:
;__Lib_MathDouble.c,589 :: 		
0x0732	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,590 :: 		
0x0734	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,591 :: 		
0x0736	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,592 :: 		
0x0738	0x070059  	RCALL	AddSubFP__funpack2
;__Lib_MathDouble.c,593 :: 		
0x073A	0x330060  	BRA N	AddSubFP__fPropagateNaN
;__Lib_MathDouble.c,594 :: 		
0x073C	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,595 :: 		
0x073E	0x32004F  	BRA Z	AddSubFP_aisinfinite
;__Lib_MathDouble.c,596 :: 		
AddSubFP_checkspecialb:
;__Lib_MathDouble.c,597 :: 		
0x0740	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,598 :: 		
0x0742	0x320052  	BRA Z	AddSubFP_return2_3
;__Lib_MathDouble.c,599 :: 		
0x0744	0x6C8203  	XOR	W9, W3, W4
;__Lib_MathDouble.c,600 :: 		
0x0746	0x3B0007  	BRA NN	AddSubFP_getsign
;__Lib_MathDouble.c,601 :: 		
0x0748	0xD00509  	SL	W9, W10
;__Lib_MathDouble.c,602 :: 		
0x074A	0xD00603  	SL	W3, W12
;__Lib_MathDouble.c,603 :: 		
0x074C	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,604 :: 		
0x074E	0x5D060C  	SUBB	W10, W12, W12
;__Lib_MathDouble.c,605 :: 		
0x0750	0x390002  	BRA NC	AddSubFP_getsign
;__Lib_MathDouble.c,606 :: 		
0x0752	0x320002  	BRA Z	AddSubFP_gotsign
;__Lib_MathDouble.c,607 :: 		
0x0754	0x880039  	MOV	W9, W3
;__Lib_MathDouble.c,608 :: 		
AddSubFP_getsign:
;__Lib_MathDouble.c,609 :: 		
0x0756	0x8800C3  	MOV	W3, W12
;__Lib_MathDouble.c,610 :: 		
AddSubFP_gotsign:
;__Lib_MathDouble.c,611 :: 		
0x0758	0x558285  	SUB	W11, W5, W5
;__Lib_MathDouble.c,612 :: 		
0x075A	0x3D0004  	BRA GE	AddSubFP_expcanonical
;__Lib_MathDouble.c,613 :: 		
0x075C	0xFD0300  	EXCH	W0, W6
;__Lib_MathDouble.c,614 :: 		
0x075E	0xFD0381  	EXCH	W1, W7
;__Lib_MathDouble.c,615 :: 		
0x0760	0xEA0285  	NEG	W5, W5
;__Lib_MathDouble.c,616 :: 		
0x0762	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,617 :: 		
AddSubFP_expcanonical:
;__Lib_MathDouble.c,618 :: 		
0x0764	0x720F84  	IOR	W4, W4, [W15]
;__Lib_MathDouble.c,619 :: 		
0x0766	0x3B0002  	BRA NN	AddSubFP_nonegate
;__Lib_MathDouble.c,620 :: 		
0x0768	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,621 :: 		
0x076A	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,622 :: 		
AddSubFP_nonegate:
;__Lib_MathDouble.c,623 :: 		
0x076C	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,624 :: 		
0x076E	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,625 :: 		
0x0770	0xE1287A  	CP	W5, #26
;__Lib_MathDouble.c,626 :: 		
0x0772	0x39000A  	BRA NC	AddSubFP_aligniter
;__Lib_MathDouble.c,627 :: 		
0x0774	0x880006  	MOV	W6, W0
;__Lib_MathDouble.c,628 :: 		
0x0776	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,629 :: 		
0x0778	0xB207F7  	AND	#127, W7
;__Lib_MathDouble.c,630 :: 		
0x077A	0x758087  	IOR	W11, W7, W1
;__Lib_MathDouble.c,631 :: 		
0x077C	0x37002D  	BRA	AddSubFP_signoff
;__Lib_MathDouble.c,632 :: 		
AddSubFP_align:
;__Lib_MathDouble.c,633 :: 		
0x077E	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,634 :: 		
0x0780	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,635 :: 		
0x0782	0x600561  	AND	W0, #1, W10
;__Lib_MathDouble.c,636 :: 		
0x0784	0xD18081  	ASR	W1, W1
;__Lib_MathDouble.c,637 :: 		
0x0786	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,638 :: 		
AddSubFP_aligniter:
;__Lib_MathDouble.c,639 :: 		
0x0788	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,640 :: 		
0x078A	0x3BFFF9  	BRA NN	AddSubFP_align
;__Lib_MathDouble.c,641 :: 		
AddSubFP_aligned:
;__Lib_MathDouble.c,642 :: 		
0x078C	0x400406  	ADD	W0, W6, W8
;__Lib_MathDouble.c,643 :: 		
0x078E	0x488487  	ADDC	W1, W7, W9
;__Lib_MathDouble.c,644 :: 		
0x0790	0x3B0002  	BRA NN	AddSubFP_normalizesum
;__Lib_MathDouble.c,645 :: 		
0x0792	0x140460  	SUBR	W8, #0, W8
;__Lib_MathDouble.c,646 :: 		
0x0794	0x1C84E0  	SUBBR	W9, #0, W9
;__Lib_MathDouble.c,647 :: 		
AddSubFP_normalizesum:
;__Lib_MathDouble.c,648 :: 		
0x0796	0xA38809  	BTST.Z	W9, #8
;__Lib_MathDouble.c,649 :: 		
0x0798	0x320007  	BRA Z	AddSubFP_checknormal
;__Lib_MathDouble.c,650 :: 		
0x079A	0x71818A  	IOR	W3, W10, W3
;__Lib_MathDouble.c,651 :: 		
0x079C	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,652 :: 		
0x079E	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,653 :: 		
0x07A0	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,654 :: 		
0x07A2	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,655 :: 		
0x07A4	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,656 :: 		
0x07A6	0x370017  	BRA	AddSubFP_round
;__Lib_MathDouble.c,657 :: 		
AddSubFP_checknormal:
;__Lib_MathDouble.c,658 :: 		
0x07A8	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,659 :: 		
0x07AA	0x3A0013  	BRA NZ	AddSubFP_discardguard
;__Lib_MathDouble.c,660 :: 		
AddSubFP_underflow:
;__Lib_MathDouble.c,661 :: 		
0x07AC	0xE20016  	CP0	W11
;__Lib_MathDouble.c,662 :: 		
0x07AE	0x340013  	BRA LE	AddSubFP_round
;__Lib_MathDouble.c,663 :: 		
0x07B0	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,664 :: 		
0x07B2	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,665 :: 		
0x07B4	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,666 :: 		
0x07B6	0x74440A  	IOR.B	W8, W10, W8
;__Lib_MathDouble.c,667 :: 		
0x07B8	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,668 :: 		
0x07BA	0x3A000D  	BRA NZ	AddSubFP_round
;__Lib_MathDouble.c,669 :: 		
AddSubFP_normalizeloop:
;__Lib_MathDouble.c,670 :: 		
0x07BC	0xE20016  	CP0	W11
;__Lib_MathDouble.c,671 :: 		
0x07BE	0x340007  	BRA LE	AddSubFP_normalizeexit
;__Lib_MathDouble.c,672 :: 		
0x07C0	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,673 :: 		
0x07C2	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,674 :: 		
0x07C4	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,675 :: 		
0x07C6	0x3A0001  	BRA NZ	AddSubFP_normalizetest
;__Lib_MathDouble.c,676 :: 		
0x07C8	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,677 :: 		
AddSubFP_normalizetest:
;__Lib_MathDouble.c,678 :: 		
0x07CA	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,679 :: 		
0x07CC	0x32FFF7  	BRA Z	AddSubFP_normalizeloop
;__Lib_MathDouble.c,680 :: 		
AddSubFP_normalizeexit:
;__Lib_MathDouble.c,681 :: 		
0x07CE	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,682 :: 		
0x07D0	0x370002  	BRA	AddSubFP_round
;__Lib_MathDouble.c,683 :: 		
AddSubFP_discardguard:
;__Lib_MathDouble.c,684 :: 		
0x07D2	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,685 :: 		
0x07D4	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,686 :: 		
AddSubFP_round:
;__Lib_MathDouble.c,687 :: 		
0x07D6	0x070022  	RCALL	AddSubFP__fpack
;__Lib_MathDouble.c,688 :: 		
AddSubFP_signoff:
;__Lib_MathDouble.c,689 :: 		
0x07D8	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,690 :: 		
0x07DA	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,691 :: 		
0x07DC	0x370018  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,692 :: 		
AddSubFP_aisinfinite:
;__Lib_MathDouble.c,693 :: 		
0x07DE	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,694 :: 		
0x07E0	0x3A0002  	BRA NZ	AddSubFP_return8_3
;__Lib_MathDouble.c,695 :: 		
0x07E2	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,696 :: 		
0x07E4	0x330018  	BRA N	AddSubFP__fbopReturnNaN
;__Lib_MathDouble.c,697 :: 		
AddSubFP_return8_3:
;__Lib_MathDouble.c,698 :: 		
0x07E6	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,699 :: 		
AddSubFP_return2_3:
;__Lib_MathDouble.c,700 :: 		
0x07E8	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,701 :: 		
0x07EA	0x370011  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,702 :: 		
AddSubFP__funpack2:
;__Lib_MathDouble.c,703 :: 		
0x07EC	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,704 :: 		
0x07EE	0x07003C  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,705 :: 		
0x07F0	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,706 :: 		
0x07F2	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,707 :: 		
0x07F4	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,708 :: 		
0x07F6	0x070038  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,709 :: 		
0x07F8	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,710 :: 		
0x07FA	0x060000  	RETURN
;__Lib_MathDouble.c,711 :: 		
AddSubFP__fPropagateNaN:
;__Lib_MathDouble.c,712 :: 		
0x07FC	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,713 :: 		
0x07FE	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,714 :: 		
0x0800	0x360005  	BRA LEU	AddSubFP_return0_1
;__Lib_MathDouble.c,715 :: 		
0x0802	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,716 :: 		
0x0804	0x360002  	BRA LEU	AddSubFP_return8_1
;__Lib_MathDouble.c,717 :: 		
0x0806	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,718 :: 		
0x0808	0x3A0001  	BRA NZ	AddSubFP_return0_1
;__Lib_MathDouble.c,719 :: 		
AddSubFP_return8_1:
;__Lib_MathDouble.c,720 :: 		
0x080A	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,721 :: 		
AddSubFP_return0_1:
;__Lib_MathDouble.c,722 :: 		
0x080C	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,723 :: 		
AddSubFP__fbopExit:
;__Lib_MathDouble.c,724 :: 		
0x080E	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,725 :: 		
0x0810	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,726 :: 		
0x0812	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,727 :: 		
0x0814	0x060000  	RETURN
;__Lib_MathDouble.c,728 :: 		
AddSubFP__fbopReturnNaN:
;__Lib_MathDouble.c,729 :: 		
0x0816	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,730 :: 		
0x0818	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,731 :: 		
0x081A	0x37FFF9  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,732 :: 		
AddSubFP__fpack:
;__Lib_MathDouble.c,733 :: 		
0x081C	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,734 :: 		
0x081E	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,735 :: 		
0x0820	0x3D000B  	BRA GE	AddSubFP_notsubnormal_1
;__Lib_MathDouble.c,736 :: 		
0x0822	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,737 :: 		
0x0824	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,738 :: 		
0x0826	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,739 :: 		
0x0828	0x34001D  	BRA LE	AddSubFP_zerosig
;__Lib_MathDouble.c,740 :: 		
AddSubFP_subnormal_1:
;__Lib_MathDouble.c,741 :: 		
0x082A	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,742 :: 		
0x082C	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,743 :: 		
0x082E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,744 :: 		
0x0830	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,745 :: 		
0x0832	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,746 :: 		
0x0834	0x3AFFFA  	BRA NZ	AddSubFP_subnormal_1
;__Lib_MathDouble.c,747 :: 		
0x0836	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,748 :: 		
AddSubFP_notsubnormal_1:
;__Lib_MathDouble.c,749 :: 		
0x0838	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,750 :: 		
0x083A	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,751 :: 		
0x083C	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,752 :: 		
0x083E	0x320009  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,753 :: 		
0x0840	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,754 :: 		
0x0842	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,755 :: 		
0x0844	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,756 :: 		
0x0846	0x320005  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,757 :: 		
0x0848	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,758 :: 		
0x084A	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,759 :: 		
0x084C	0x3A0002  	BRA NZ	AddSubFP_packupandgo
;__Lib_MathDouble.c,760 :: 		
0x084E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,761 :: 		
0x0850	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,762 :: 		
AddSubFP_packupandgo:
;__Lib_MathDouble.c,763 :: 		
0x0852	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,764 :: 		
0x0854	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,765 :: 		
0x0856	0x3D0005  	BRA GE	AddSubFP_overflow
;__Lib_MathDouble.c,766 :: 		
0x0858	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,767 :: 		
0x085A	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,768 :: 		
0x085C	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,769 :: 		
0x085E	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,770 :: 		
0x0860	0x060000  	RETURN
;__Lib_MathDouble.c,771 :: 		
AddSubFP_overflow:
;__Lib_MathDouble.c,772 :: 		
0x0862	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,773 :: 		
AddSubFP_zerosig:
;__Lib_MathDouble.c,774 :: 		
0x0864	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,775 :: 		
0x0866	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,776 :: 		
AddSubFP__funpack:
;__Lib_MathDouble.c,777 :: 		
0x0868	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,778 :: 		
0x086A	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,779 :: 		
0x086C	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,780 :: 		
0x086E	0x320008  	BRA Z	AddSubFP_zeroorsub
;__Lib_MathDouble.c,781 :: 		
0x0870	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,782 :: 		
0x0872	0x320002  	BRA Z	AddSubFP_nanorinf
;__Lib_MathDouble.c,783 :: 		
AddSubFP_finitereturn:
;__Lib_MathDouble.c,784 :: 		
0x0874	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,785 :: 		
0x0876	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,786 :: 		
AddSubFP_nanorinf:
;__Lib_MathDouble.c,787 :: 		
0x0878	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,788 :: 		
0x087A	0x320001  	BRA Z	AddSubFP_infinite
;__Lib_MathDouble.c,789 :: 		
0x087C	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,790 :: 		
AddSubFP_infinite:
;__Lib_MathDouble.c,791 :: 		
0x087E	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,792 :: 		
AddSubFP_zeroorsub:
;__Lib_MathDouble.c,793 :: 		
0x0880	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,794 :: 		
0x0882	0x3A0002  	BRA NZ	AddSubFP_subnormal_2
;__Lib_MathDouble.c,795 :: 		
0x0884	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,796 :: 		
AddSubFP_normalize:
;__Lib_MathDouble.c,797 :: 		
0x0886	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,798 :: 		
AddSubFP_subnormal_2:
;__Lib_MathDouble.c,799 :: 		
0x0888	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,800 :: 		
0x088A	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,801 :: 		
0x088C	0x3BFFFC  	BRA NN	AddSubFP_normalize
;__Lib_MathDouble.c,802 :: 		
0x088E	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,803 :: 		
0x0890	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,806 :: 		
the_end__AddSub_FP:
;__Lib_MathDouble.c,809 :: 		
L_end__AddSub_FP:
0x0892	0xFA8000  	ULNK
0x0894	0x060000  	RETURN
; end of __AddSub_FP
__Divide_32x32:
0x05F0	0xFA0000  	LNK	#0
;__Lib_Math.c,78 :: 		
;__Lib_Math.c,81 :: 		
0x05F2	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.c,83 :: 		
0x05F4	0x00000004063E  	GOTO	the_end_Divide_32x32
;__Lib_Math.c,88 :: 		
Divide_32x32___testsus:
;__Lib_Math.c,89 :: 		
0x05F8	0xE20008  	CP0	W4
;__Lib_Math.c,90 :: 		
0x05FA	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.c,92 :: 		
0x05FC	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,93 :: 		
0x05FE	0x060000  	RETURN
;__Lib_Math.c,95 :: 		
Divide_32x32___divsi3:
;__Lib_Math.c,96 :: 		
0x0600	0x689F83  	XOR	W1, W3, [W15++]
;__Lib_Math.c,97 :: 		
0x0602	0xE20002  	CP0	W1
;__Lib_Math.c,98 :: 		
0x0604	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.c,99 :: 		
0x0606	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,100 :: 		
0x0608	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,101 :: 		
Divide_32x32_divtestb:
;__Lib_Math.c,102 :: 		
0x060A	0xE20006  	CP0	W3
;__Lib_Math.c,103 :: 		
0x060C	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.c,104 :: 		
0x060E	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,105 :: 		
0x0610	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,106 :: 		
Divide_32x32_calcquot:
;__Lib_Math.c,107 :: 		
0x0612	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,108 :: 		
0x0614	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,109 :: 		
0x0616	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.c,110 :: 		
0x0618	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,111 :: 		
0x061A	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,112 :: 		
Divide_32x32_returnq:
;__Lib_Math.c,113 :: 		
0x061C	0x060000  	RETURN
;__Lib_Math.c,114 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.c,115 :: 		
0x061E	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,116 :: 		
0x0620	0x200206  	MOV	#32, W6
;__Lib_Math.c,117 :: 		
Divide_32x32_nextbit:
;__Lib_Math.c,118 :: 		
0x0622	0xD00000  	SL	W0, W0
;__Lib_Math.c,119 :: 		
0x0624	0xD28081  	RLC	W1, W1
;__Lib_Math.c,120 :: 		
0x0626	0xD28204  	RLC	W4, W4
;__Lib_Math.c,121 :: 		
0x0628	0xD28285  	RLC	W5, W5
;__Lib_Math.c,122 :: 		
0x062A	0xA80000  	BSET	W0, #0
;__Lib_Math.c,123 :: 		
0x062C	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,124 :: 		
0x062E	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,125 :: 		
0x0630	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.c,126 :: 		
0x0632	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,127 :: 		
0x0634	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,128 :: 		
0x0636	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,129 :: 		
Divide_32x32_iterate:
;__Lib_Math.c,130 :: 		
0x0638	0xE90306  	DEC	W6, W6
;__Lib_Math.c,131 :: 		
0x063A	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.c,132 :: 		
0x063C	0x060000  	RETURN
;__Lib_Math.c,135 :: 		
the_end_Divide_32x32:
;__Lib_Math.c,138 :: 		
L_end__Divide_32x32:
0x063E	0xFA8000  	ULNK
0x0640	0x060000  	RETURN
; end of __Divide_32x32
__Multiply_32x32:
0x0642	0xFA0000  	LNK	#0
;__Lib_Math.c,43 :: 		
;__Lib_Math.c,46 :: 		
0x0644	0xB80A02  	MUL.UU	W1, W2, W4
;__Lib_Math.c,47 :: 		
0x0646	0x880050  	MOV	W0, W5
;__Lib_Math.c,48 :: 		
0x0648	0xB80002  	MUL.UU	W0, W2, W0
;__Lib_Math.c,49 :: 		
0x064A	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,50 :: 		
0x064C	0xB82A03  	MUL.UU	W5, W3, W4
;__Lib_Math.c,51 :: 		
0x064E	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,54 :: 		
L_end__Multiply_32x32:
0x0650	0xFA8000  	ULNK
0x0652	0x060000  	RETURN
; end of __Multiply_32x32
_Can_addIntToWritePacket:
;can.c,75 :: 		void Can_addIntToWritePacket(int dataOut) {                                      /*questa funzione aggiunge il dato dataOut sul buffer out del can*/
;can.c,76 :: 		Can_addByteToWritePacket((unsigned char) (dataOut >> 8));                    /*in un primo momento faccio le conversioni giuste per evitare errori di tipo*/
0x0A7A	0x781F8A  	PUSH	W10
0x0A7C	0xDED048  	ASR	W10, #8, W0
0x0A7E	0x781F8A  	PUSH	W10
0x0A80	0x784500  	MOV.B	W0, W10
0x0A82	0x07FF0D  	RCALL	_Can_addByteToWritePacket
0x0A84	0x78054F  	POP	W10
;can.c,77 :: 		Can_addByteToWritePacket((unsigned char) (dataOut & 0xFF));                  /**/
0x0A86	0x200FF0  	MOV	#255, W0
0x0A88	0x650000  	AND	W10, W0, W0
0x0A8A	0x784500  	MOV.B	W0, W10
0x0A8C	0x07FF08  	RCALL	_Can_addByteToWritePacket
;can.c,78 :: 		}                                                                                 /**/
L_end_Can_addIntToWritePacket:
0x0A8E	0x78054F  	POP	W10
0x0A90	0x060000  	RETURN
; end of _Can_addIntToWritePacket
_Can_addByteToWritePacket:
;can.c,80 :: 		void Can_addByteToWritePacket(unsigned char dataOut) {                            /*<----- appoggiandosi a questa funzione che fa la scrittura effettiva*/
;can.c,81 :: 		can_dataOutBuffer[can_dataOutLength] = dataOut;                               /**/
0x089E	0x215C01  	MOV	#lo_addr(_can_dataOutBuffer), W1
0x08A0	0x208CE0  	MOV	#lo_addr(_can_dataOutLength), W0
0x08A2	0x408010  	ADD	W1, [W0], W0
0x08A4	0x78480A  	MOV.B	W10, [W0]
;can.c,82 :: 		can_dataOutLength += 1;
0x08A6	0x200011  	MOV	#1, W1
0x08A8	0x208CE0  	MOV	#lo_addr(_can_dataOutLength), W0
0x08AA	0x408810  	ADD	W1, [W0], [W0]
;can.c,83 :: 		}
L_end_Can_addByteToWritePacket:
0x08AC	0x060000  	RETURN
; end of _Can_addByteToWritePacket
_Can_write:
0x0A9E	0xFA0002  	LNK	#2
;can.c,85 :: 		void Can_write(unsigned long int id) {
;can.c,87 :: 		do {
0x0AA0	0x781F8C  	PUSH	W12
0x0AA2	0x781F8D  	PUSH	W13
L_Can_write3:
;can.c,88 :: 		sent = CAN1Write(id, can_dataOutBuffer, can_dataOutLength, Can_getWriteFlags());        /*dove cazzo + questa CAN1write??*/
0x0AA4	0x07FEF8  	RCALL	_Can_getWriteFlags
0x0AA6	0xBE9F8A  	PUSH.D	W10
0x0AA8	0x80467D  	MOV	_can_dataOutLength, W13
0x0AAA	0x215C0C  	MOV	#lo_addr(_can_dataOutBuffer), W12
0x0AAC	0x781F80  	PUSH	W0
0x0AAE	0x07FEFF  	RCALL	_CAN1Write
0x0AB0	0xB1002F  	SUB	#2, W15
0x0AB2	0xBE054F  	POP.D	W10
;can.c,89 :: 		i += 1;
0x0AB4	0x200012  	MOV	#1, W2
0x0AB6	0x4700E0  	ADD	W14, #0, W1
0x0AB8	0x410891  	ADD	W2, [W1], [W1]
;can.c,90 :: 		} while ((sent == 0) && (i < CAN_RETRY_LIMIT));
0x0ABA	0xE10060  	CP	W0, #0
0x0ABC	0x3A0005  	BRA NZ	L__Can_write14
L__Can_write24:
0x0ABE	0x200321  	MOV	#50, W1
0x0AC0	0x470060  	ADD	W14, #0, W0
0x0AC2	0xE10810  	CP	W1, [W0]
0x0AC4	0x360001  	BRA LEU	L__Can_write13
L__Can_write25:
0x0AC6	0x37FFEE  	BRA	L_Can_write3
L__Can_write14:
L__Can_write13:
;can.c,91 :: 		if (i == CAN_RETRY_LIMIT) {
0x0AC8	0x200321  	MOV	#50, W1
0x0ACA	0x470060  	ADD	W14, #0, W0
0x0ACC	0xE10810  	CP	W1, [W0]
0x0ACE	0x3A0003  	BRA NZ	L_Can_write8
L__Can_write26:
;can.c,92 :: 		can_err++;
0x0AD0	0x200011  	MOV	#1, W1
0x0AD2	0x208D60  	MOV	#lo_addr(_can_err), W0
0x0AD4	0x408810  	ADD	W1, [W0], [W0]
;can.c,93 :: 		}
L_Can_write8:
;can.c,94 :: 		}
L_end_Can_write:
0x0AD6	0x7806CF  	POP	W13
0x0AD8	0x78064F  	POP	W12
0x0ADA	0xFA8000  	ULNK
0x0ADC	0x060000  	RETURN
; end of _Can_write
_CAN1Write:
0x08AE	0xFA0000  	LNK	#0
;__Lib_CAN_12.c,596 :: 		
0x08B0	0x781F8A  	PUSH	W10
0x08B2	0x781F8B  	PUSH	W11
; CAN_TX_MSG_FLAGS start address is: 8 (W4)
0x08B4	0x97BA4E  	MOV	[W14-8], W4
;__Lib_CAN_12.c,602 :: 		
0x08B6	0xAF636E  	BTSC.B	C1TX0CONbits, #3
0x08B8	0x370003  	BRA	L_CAN1Write32
;__Lib_CAN_12.c,603 :: 		
; ptr start address is: 12 (W6)
0x08BA	0x203606  	MOV	#lo_addr(C1TX0SID), W6
;__Lib_CAN_12.c,604 :: 		
; TxCtrlReg start address is: 10 (W5)
0x08BC	0x2036E5  	MOV	#lo_addr(C1TX0CON), W5
;__Lib_CAN_12.c,605 :: 		
; ptr end address is: 12 (W6)
; TxCtrlReg end address is: 10 (W5)
0x08BE	0x37000E  	BRA	L_CAN1Write33
L_CAN1Write32:
;__Lib_CAN_12.c,607 :: 		
0x08C0	0xAF635E  	BTSC.B	C1TX1CONbits, #3
0x08C2	0x370004  	BRA	L_CAN1Write34
;__Lib_CAN_12.c,608 :: 		
; ptr start address is: 12 (W6)
0x08C4	0x203506  	MOV	#lo_addr(C1TX1SID), W6
;__Lib_CAN_12.c,609 :: 		
; TxCtrlReg start address is: 0 (W0)
0x08C6	0x2035E0  	MOV	#lo_addr(C1TX1CON), W0
;__Lib_CAN_12.c,610 :: 		
; TxCtrlReg end address is: 0 (W0)
; ptr end address is: 12 (W6)
0x08C8	0x780280  	MOV	W0, W5
0x08CA	0x370008  	BRA	L_CAN1Write35
L_CAN1Write34:
;__Lib_CAN_12.c,612 :: 		
0x08CC	0xAF634E  	BTSC.B	C1TX2CONbits, #3
0x08CE	0x370003  	BRA	L_CAN1Write36
;__Lib_CAN_12.c,613 :: 		
; ptr start address is: 12 (W6)
0x08D0	0x203406  	MOV	#lo_addr(C1TX2SID), W6
;__Lib_CAN_12.c,614 :: 		
; TxCtrlReg start address is: 0 (W0)
0x08D2	0x2034E0  	MOV	#lo_addr(C1TX2CON), W0
;__Lib_CAN_12.c,615 :: 		
0x08D4	0x370002  	BRA	L_CAN1Write37
; TxCtrlReg end address is: 0 (W0)
; ptr end address is: 12 (W6)
; CAN_TX_MSG_FLAGS end address is: 8 (W4)
L_CAN1Write36:
;__Lib_CAN_12.c,617 :: 		
0x08D6	0xEF2000  	CLR	W0
0x08D8	0x370035  	BRA	L_end_CAN1Write
;__Lib_CAN_12.c,618 :: 		
L_CAN1Write37:
;__Lib_CAN_12.c,619 :: 		
; CAN_TX_MSG_FLAGS start address is: 8 (W4)
; ptr start address is: 12 (W6)
; TxCtrlReg start address is: 0 (W0)
; ptr end address is: 12 (W6)
0x08DA	0x780280  	MOV	W0, W5
L_CAN1Write35:
; TxCtrlReg end address is: 0 (W0)
;__Lib_CAN_12.c,620 :: 		
; TxCtrlReg start address is: 10 (W5)
; ptr start address is: 12 (W6)
; ptr end address is: 12 (W6)
; TxCtrlReg end address is: 10 (W5)
L_CAN1Write33:
;__Lib_CAN_12.c,628 :: 		
; ptr start address is: 12 (W6)
; TxCtrlReg start address is: 10 (W5)
0x08DC	0xAF6008  	BTSC	W4, #3
0x08DE	0x37000B  	BRA	L_CAN1Write38
;__Lib_CAN_12.c,629 :: 		
0x08E0	0xBE9F8C  	PUSH.D	W12
0x08E2	0x20002D  	MOV	#2, W13
0x08E4	0x78060B  	MOV	W11, W12
0x08E6	0x78058A  	MOV	W10, W11
0x08E8	0x780506  	MOV	W6, W10
0x08EA	0x200F70  	MOV	#247, W0
0x08EC	0x781F80  	PUSH	W0
0x08EE	0x07FD73  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x08F0	0xB1002F  	SUB	#2, W15
0x08F2	0xBE064F  	POP.D	W12
0x08F4	0x37000A  	BRA	L_CAN1Write39
L_CAN1Write38:
;__Lib_CAN_12.c,631 :: 		
0x08F6	0xBE9F8C  	PUSH.D	W12
0x08F8	0x20002D  	MOV	#2, W13
0x08FA	0x78060B  	MOV	W11, W12
0x08FC	0x78058A  	MOV	W10, W11
0x08FE	0x780506  	MOV	W6, W10
0x0900	0x200FF0  	MOV	#255, W0
0x0902	0x781F80  	PUSH	W0
0x0904	0x07FD68  	RCALL	__Lib_CAN_12_CAN1IDToRegs
0x0906	0xB1002F  	SUB	#2, W15
0x0908	0xBE064F  	POP.D	W12
L_CAN1Write39:
;__Lib_CAN_12.c,633 :: 		
0x090A	0x430164  	ADD	W6, #4, W2
; ptr end address is: 12 (W6)
; ptr start address is: 6 (W3)
0x090C	0x780182  	MOV	W2, W3
;__Lib_CAN_12.c,635 :: 		
0x090E	0x780092  	MOV	[W2], W1
0x0910	0x2FD800  	MOV	#64896, W0
0x0912	0x608900  	AND	W1, W0, [W2]
;__Lib_CAN_12.c,636 :: 		
0x0914	0x66806F  	AND	W13, #15, W0
0x0916	0xDD0043  	SL	W0, #3, W0
0x0918	0x700993  	IOR	W0, [W3], [W3]
;__Lib_CAN_12.c,638 :: 		
0x091A	0xAFC008  	BTSC	W4, #6
0x091C	0x370003  	BRA	L_CAN1Write40
;__Lib_CAN_12.c,639 :: 		
0x091E	0x780093  	MOV	[W3], W1
0x0920	0x202000  	MOV	#512, W0
0x0922	0x708980  	IOR	W1, W0, [W3]
L_CAN1Write40:
;__Lib_CAN_12.c,642 :: 		
; chptr start address is: 4 (W2)
0x0924	0x418162  	ADD	W3, #2, W2
; ptr end address is: 6 (W3)
;__Lib_CAN_12.c,643 :: 		
; i start address is: 0 (W0)
0x0926	0xEF2000  	CLR	W0
;__Lib_CAN_12.c,644 :: 		
; TxCtrlReg end address is: 10 (W5)
; i end address is: 0 (W0)
; CAN_TX_MSG_FLAGS end address is: 8 (W4)
0x0928	0x780185  	MOV	W5, W3
0x092A	0x780280  	MOV	W0, W5
;__Lib_CAN_12.c,645 :: 		
L_CAN1Write41:
; chptr start address is: 4 (W2)
; chptr end address is: 4 (W2)
; i start address is: 10 (W5)
; TxCtrlReg start address is: 6 (W3)
; CAN_TX_MSG_FLAGS start address is: 8 (W4)
0x092C	0xE1280D  	CP	W5, W13
0x092E	0x310005  	BRA GEU	L_CAN1Write42
L__CAN1Write147:
; chptr end address is: 4 (W2)
;__Lib_CAN_12.c,646 :: 		
; chptr start address is: 4 (W2)
0x0930	0x410085  	ADD	W2, W5, W1
0x0932	0x460005  	ADD	W12, W5, W0
0x0934	0x784890  	MOV.B	[W0], [W1]
;__Lib_CAN_12.c,647 :: 		
0x0936	0xEC200A  	INC	W5
;__Lib_CAN_12.c,648 :: 		
; chptr end address is: 4 (W2)
; i end address is: 10 (W5)
0x0938	0x37FFF9  	BRA	L_CAN1Write41
L_CAN1Write42:
;__Lib_CAN_12.c,650 :: 		
0x093A	0x6209E3  	AND	W4, #3, [W3]
; CAN_TX_MSG_FLAGS end address is: 8 (W4)
;__Lib_CAN_12.c,661 :: 		
0x093C	0x780013  	MOV	[W3], W0
0x093E	0x700068  	IOR	W0, #8, W0
0x0940	0x780980  	MOV	W0, [W3]
; TxCtrlReg end address is: 6 (W3)
;__Lib_CAN_12.c,668 :: 		
0x0942	0x2FFFF0  	MOV	#65535, W0
;__Lib_CAN_12.c,669 :: 		
;__Lib_CAN_12.c,668 :: 		
;__Lib_CAN_12.c,669 :: 		
L_end_CAN1Write:
0x0944	0x7805CF  	POP	W11
0x0946	0x78054F  	POP	W10
0x0948	0xFA8000  	ULNK
0x094A	0x060000  	RETURN
; end of _CAN1Write
_Can_getWriteFlags:
;can.c,107 :: 		unsigned int Can_getWriteFlags(void) {
;can.c,108 :: 		return CAN_DEFAULT_FLAGS & can_txPriority;
0x0896	0x200FF1  	MOV	#255, W1
0x0898	0x208CC0  	MOV	#lo_addr(_can_txPriority), W0
0x089A	0x608010  	AND	W1, [W0], W0
;can.c,109 :: 		}
L_end_Can_getWriteFlags:
0x089C	0x060000  	RETURN
; end of _Can_getWriteFlags
_TIMER4_INT:
0x11FC	0xF80034  	PUSH	PSVPAG
0x11FE	0xF80036  	PUSH	RCOUNT
0x1200	0x781F80  	PUSH	W0
0x1202	0x200020  	MOV	#2, W0
0x1204	0x09000C  	REPEAT	#12
0x1206	0x781FB0  	PUSH	[W0++]
;main.c,231 :: 		void TIMER4_INT() iv IVT_ADDR_T4INTERRUPT ics ICS_AUTO {
;main.c,233 :: 		ADCON1bits.ADON = 1;
0x1208	0xA8E2A1  	BSET	ADCON1bits, #15
;main.c,234 :: 		IFS1bits.T4IF = 0;
0x120A	0xA9A086  	BCLR	IFS1bits, #5
;main.c,236 :: 		}
L_end_TIMER4_INT:
0x120C	0x2001A0  	MOV	#26, W0
0x120E	0x09000C  	REPEAT	#12
0x1210	0x78104F  	POP	[W0--]
0x1212	0x78004F  	POP	W0
0x1214	0xF90036  	POP	RCOUNT
0x1216	0xF90034  	POP	PSVPAG
0x1218	0x064000  	RETFIE
; end of _TIMER4_INT
_ADC_INT:
0x119E	0xF80034  	PUSH	PSVPAG
0x11A0	0xF80036  	PUSH	RCOUNT
0x11A2	0x781F80  	PUSH	W0
0x11A4	0x200020  	MOV	#2, W0
0x11A6	0x09000C  	REPEAT	#12
0x11A8	0x781FB0  	PUSH	[W0++]
;main.c,214 :: 		void ADC_INT() iv IVT_ADDR_ADCINTERRUPT ics ICS_AUTO {  //non vorrei che le operazioni svolte qui dentro fosero troppe per una interrupt, forse andrebbero delegate a un'altra funzione
;main.c,215 :: 		int Channel_Index = 0;
;main.c,218 :: 		for (Channel_Index = 0; Channel_Index < N_CHANNEL; Channel_Index ++){     //SALVA TUTTE LE LETTURE DEI CANALI AL NUOVO TIME_INDEX
; Channel_Index start address is: 8 (W4)
0x11AA	0xEF2008  	CLR	W4
; Channel_Index end address is: 8 (W4)
L_ADC_INT19:
; Channel_Index start address is: 8 (W4)
0x11AC	0xE12070  	CP	W4, #16
0x11AE	0x3D0011  	BRA GE	L_ADC_INT20
L__ADC_INT47:
;main.c,219 :: 		buffer_adc = (&ADCBUF0 + Channel_Index);
0x11B0	0xDD2141  	SL	W4, #1, W2
0x11B2	0x202801  	MOV	#lo_addr(ADCBUF0), W1
0x11B4	0x208DC0  	MOV	#lo_addr(_buffer_adc), W0
0x11B6	0x408802  	ADD	W1, W2, [W0]
;main.c,220 :: 		data_buffer[Channel_Index][time_index] = *buffer_adc;
0x11B8	0x200CC0  	MOV	#204, W0
0x11BA	0xB80104  	MUL.UU	W0, W4, W2
0x11BC	0x208E00  	MOV	#lo_addr(_data_buffer), W0
0x11BE	0x400082  	ADD	W0, W2, W1
0x11C0	0x8046A0  	MOV	_time_index, W0
0x11C2	0xDD0042  	SL	W0, #2, W0
0x11C4	0x408100  	ADD	W1, W0, W2
0x11C6	0x8046E0  	MOV	_buffer_adc, W0
0x11C8	0x780010  	MOV	[W0], W0
0x11CA	0xDE80CF  	ASR	W0, #15, W1
0x11CC	0xBE8900  	MOV.D	W0, [W2]
;main.c,218 :: 		for (Channel_Index = 0; Channel_Index < N_CHANNEL; Channel_Index ++){     //SALVA TUTTE LE LETTURE DEI CANALI AL NUOVO TIME_INDEX
0x11CE	0xEC2008  	INC	W4
;main.c,221 :: 		}
; Channel_Index end address is: 8 (W4)
0x11D0	0x37FFED  	BRA	L_ADC_INT19
L_ADC_INT20:
;main.c,223 :: 		if (time_index == FILTER_ORDER) time_index = 0;
0x11D2	0x200321  	MOV	#50, W1
0x11D4	0x208D40  	MOV	#lo_addr(_time_index), W0
0x11D6	0xE10810  	CP	W1, [W0]
0x11D8	0x3A0003  	BRA NZ	L_ADC_INT22
L__ADC_INT48:
0x11DA	0xEF2000  	CLR	W0
0x11DC	0x8846A0  	MOV	W0, _time_index
0x11DE	0x370003  	BRA	L_ADC_INT23
L_ADC_INT22:
;main.c,224 :: 		else time_index++;
0x11E0	0x200011  	MOV	#1, W1
0x11E2	0x208D40  	MOV	#lo_addr(_time_index), W0
0x11E4	0x408810  	ADD	W1, [W0], [W0]
L_ADC_INT23:
;main.c,226 :: 		ADC_CONT++;
0x11E6	0x200011  	MOV	#1, W1
0x11E8	0x208DE0  	MOV	#lo_addr(_ADC_CONT), W0
0x11EA	0x408810  	ADD	W1, [W0], [W0]
;main.c,228 :: 		IFS0bits.ADIF     = 0b0;        //clear interrupt flag
0x11EC	0xA96085  	BCLR	IFS0bits, #11
;main.c,229 :: 		}
L_end_ADC_INT:
0x11EE	0x2001A0  	MOV	#26, W0
0x11F0	0x09000C  	REPEAT	#12
0x11F2	0x78104F  	POP	[W0--]
0x11F4	0x78004F  	POP	W0
0x11F6	0xF90036  	POP	RCOUNT
0x11F8	0xF90034  	POP	PSVPAG
0x11FA	0x064000  	RETFIE
; end of _ADC_INT
_TIMER1_INT:
0x0F4C	0xFA0008  	LNK	#8
0x0F4E	0xF80034  	PUSH	PSVPAG
0x0F50	0xF80036  	PUSH	RCOUNT
0x0F52	0x781F80  	PUSH	W0
0x0F54	0x200020  	MOV	#2, W0
0x0F56	0x09000C  	REPEAT	#12
0x0F58	0x781FB0  	PUSH	[W0++]
;main.c,164 :: 		void TIMER1_INT() iv IVT_ADDR_T1INTERRUPT ics ICS_AUTO {			//interrupt responsabile dell'invio dei dati di debug sul can
;main.c,166 :: 		float currentConverted, tempConverted = 0;
0x0F5A	0x781F8A  	PUSH	W10
0x0F5C	0x781F8B  	PUSH	W11
;main.c,167 :: 		if (TMR1_CONT > 5){
0x0F5E	0x8046C0  	MOV	_TMR1_CONT, W0
0x0F60	0xE10065  	CP	W0, #5
0x0F62	0x34005D  	BRA LE	L_TIMER1_INT13
L__TIMER1_INT42:
;main.c,169 :: 		TMR1_CONT = 0;
0x0F64	0xEF2000  	CLR	W0
0x0F66	0x8846C0  	MOV	W0, _TMR1_CONT
;main.c,172 :: 		currentConverted = (float)data_out[CURRENT_SENSE] * LSB_1000;			//vout in mV
0x0F68	0x80ADE0  	MOV	_data_out+28, W0
0x0F6A	0xDE80CF  	ASR	W0, #15, W1
0x0F6C	0xEB8100  	SETM	W2
0x0F6E	0x07FCEE  	RCALL	__Long2Float
0x0F70	0x249C52  	MOV	#18885, W2
0x0F72	0x23F9C3  	MOV	#16284, W3
0x0F74	0x07FE46  	RCALL	__Mul_FP
;main.c,173 :: 		currentConverted = (currentConverted/INA_GAIN)/SHUNT_RESISTOR; 			//risultato in mA
0x0F76	0x200002  	MOV	#0, W2
0x0F78	0x242C83  	MOV	#17096, W3
0x0F7A	0x07FEFC  	RCALL	__Div_FP
0x0F7C	0x2C28F2  	MOV	#49807, W2
0x0F7E	0x23CF53  	MOV	#15605, W3
0x0F80	0x07FEF9  	RCALL	__Div_FP
0x0F82	0x980700  	MOV	W0, [W14+0]
0x0F84	0x980711  	MOV	W1, [W14+2]
;main.c,175 :: 		tempConverted = (float)data_out[TEMP_SENSE] * LSB_1000;					//Vout in mV
0x0F86	0x80ADF0  	MOV	_data_out+30, W0
0x0F88	0xDE80CF  	ASR	W0, #15, W1
0x0F8A	0xEB8100  	SETM	W2
0x0F8C	0x07FCDF  	RCALL	__Long2Float
0x0F8E	0x249C52  	MOV	#18885, W2
0x0F90	0x23F9C3  	MOV	#16284, W3
0x0F92	0x07FE37  	RCALL	__Mul_FP
;main.c,176 :: 		tempConverted = (tempConverted - TEMP_OFFSET)/TEMP_RATE;				//risultato in gradi
0x0F94	0x200002  	MOV	#0, W2
0x0F96	0x243FA3  	MOV	#17402, W3
0x0F98	0x07FE0F  	RCALL	__Sub_FP
0x0F9A	0x200002  	MOV	#0, W2
0x0F9C	0x241203  	MOV	#16672, W3
0x0F9E	0x07FEEA  	RCALL	__Div_FP
0x0FA0	0x980720  	MOV	W0, [W14+4]
0x0FA2	0x980731  	MOV	W1, [W14+6]
;main.c,178 :: 		switch (DAU_ID){
0x0FA4	0x370030  	BRA	L_TIMER1_INT14
;main.c,181 :: 		case DAU_REAR :
L_TIMER1_INT16:
;main.c,182 :: 		Toggle_LEDRED();
0x0FA6	0x07FD75  	RCALL	_Toggle_LEDRED
;main.c,184 :: 		Can_resetWritePacket();
0x0FA8	0x07FD9D  	RCALL	_Can_resetWritePacket
;main.c,185 :: 		Can_addIntToWritePacket((int)tempConverted);
0x0FAA	0x90002E  	MOV	[W14+4], W0
0x0FAC	0x9000BE  	MOV	[W14+6], W1
0x0FAE	0x07FD29  	RCALL	__Float2Longint
0x0FB0	0x780500  	MOV	W0, W10
0x0FB2	0x07FD63  	RCALL	_Can_addIntToWritePacket
;main.c,186 :: 		Can_addIntToWritePacket((int)currentConverted);
0x0FB4	0x90000E  	MOV	[W14+0], W0
0x0FB6	0x90009E  	MOV	[W14+2], W1
0x0FB8	0x07FD24  	RCALL	__Float2Longint
0x0FBA	0x780500  	MOV	W0, W10
0x0FBC	0x07FD5E  	RCALL	_Can_addIntToWritePacket
;main.c,187 :: 		Can_write(DAU_REAR_DEBUG_ID);
0x0FBE	0x20314A  	MOV	#788, W10
0x0FC0	0x20000B  	MOV	#0, W11
0x0FC2	0x07FD6D  	RCALL	_Can_write
;main.c,188 :: 		break;
0x0FC4	0x37002C  	BRA	L_TIMER1_INT15
;main.c,190 :: 		case DAU_FL :
L_TIMER1_INT17:
;main.c,191 :: 		Toggle_LEDRED();
0x0FC6	0x07FD65  	RCALL	_Toggle_LEDRED
;main.c,193 :: 		Can_resetWritePacket();
0x0FC8	0x07FD8D  	RCALL	_Can_resetWritePacket
;main.c,194 :: 		Can_addIntToWritePacket((int)tempConverted);
0x0FCA	0x90002E  	MOV	[W14+4], W0
0x0FCC	0x9000BE  	MOV	[W14+6], W1
0x0FCE	0x07FD19  	RCALL	__Float2Longint
0x0FD0	0x780500  	MOV	W0, W10
0x0FD2	0x07FD53  	RCALL	_Can_addIntToWritePacket
;main.c,195 :: 		Can_addIntToWritePacket((int)currentConverted);
0x0FD4	0x90000E  	MOV	[W14+0], W0
0x0FD6	0x90009E  	MOV	[W14+2], W1
0x0FD8	0x07FD14  	RCALL	__Float2Longint
0x0FDA	0x780500  	MOV	W0, W10
0x0FDC	0x07FD4E  	RCALL	_Can_addIntToWritePacket
;main.c,196 :: 		Can_write(DAU_FL_DEBUG_ID);           //0x313
0x0FDE	0x20313A  	MOV	#787, W10
0x0FE0	0x20000B  	MOV	#0, W11
0x0FE2	0x07FD5D  	RCALL	_Can_write
;main.c,197 :: 		break;
0x0FE4	0x37001C  	BRA	L_TIMER1_INT15
;main.c,199 :: 		case DAU_FR :
L_TIMER1_INT18:
;main.c,200 :: 		Toggle_LEDRED();
0x0FE6	0x07FD55  	RCALL	_Toggle_LEDRED
;main.c,202 :: 		Can_resetWritePacket();
0x0FE8	0x07FD7D  	RCALL	_Can_resetWritePacket
;main.c,203 :: 		Can_addIntToWritePacket((int)tempConverted);
0x0FEA	0x90002E  	MOV	[W14+4], W0
0x0FEC	0x9000BE  	MOV	[W14+6], W1
0x0FEE	0x07FD09  	RCALL	__Float2Longint
0x0FF0	0x780500  	MOV	W0, W10
0x0FF2	0x07FD43  	RCALL	_Can_addIntToWritePacket
;main.c,204 :: 		Can_addIntToWritePacket((int)currentConverted);
0x0FF4	0x90000E  	MOV	[W14+0], W0
0x0FF6	0x90009E  	MOV	[W14+2], W1
0x0FF8	0x07FD04  	RCALL	__Float2Longint
0x0FFA	0x780500  	MOV	W0, W10
0x0FFC	0x07FD3E  	RCALL	_Can_addIntToWritePacket
;main.c,205 :: 		Can_write(DAU_FR_DEBUG_ID);
0x0FFE	0x20312A  	MOV	#786, W10
0x1000	0x20000B  	MOV	#0, W11
0x1002	0x07FD4D  	RCALL	_Can_write
;main.c,206 :: 		break;
0x1004	0x37000C  	BRA	L_TIMER1_INT15
;main.c,207 :: 		}
L_TIMER1_INT14:
0x1006	0x215C80  	MOV	#lo_addr(_DAU_ID), W0
0x1008	0x784010  	MOV.B	[W0], W0
0x100A	0xE10462  	CP.B	W0, #2
0x100C	0x32FFCC  	BRA Z	L_TIMER1_INT16
L__TIMER1_INT43:
0x100E	0x215C80  	MOV	#lo_addr(_DAU_ID), W0
0x1010	0x784010  	MOV.B	[W0], W0
0x1012	0xE10460  	CP.B	W0, #0
0x1014	0x32FFD8  	BRA Z	L_TIMER1_INT17
L__TIMER1_INT44:
0x1016	0x215C80  	MOV	#lo_addr(_DAU_ID), W0
0x1018	0x784010  	MOV.B	[W0], W0
0x101A	0xE10461  	CP.B	W0, #1
0x101C	0x32FFE4  	BRA Z	L_TIMER1_INT18
L__TIMER1_INT45:
L_TIMER1_INT15:
;main.c,209 :: 		}
L_TIMER1_INT13:
;main.c,210 :: 		TMR1_CONT++;
0x101E	0x200011  	MOV	#1, W1
0x1020	0x208D80  	MOV	#lo_addr(_TMR1_CONT), W0
0x1022	0x408810  	ADD	W1, [W0], [W0]
;main.c,211 :: 		IFS0bits.T1IF = 0;
0x1024	0xA96084  	BCLR	IFS0bits, #3
;main.c,212 :: 		}
L_end_TIMER1_INT:
0x1026	0x7805CF  	POP	W11
0x1028	0x78054F  	POP	W10
0x102A	0x2001A0  	MOV	#26, W0
0x102C	0x09000C  	REPEAT	#12
0x102E	0x78104F  	POP	[W0--]
0x1030	0x78004F  	POP	W0
0x1032	0xF90036  	POP	RCOUNT
0x1034	0xF90034  	POP	PSVPAG
0x1036	0xFA8000  	ULNK
0x1038	0x064000  	RETFIE
; end of _TIMER1_INT
_Toggle_LEDRED:
;User_Function.c,156 :: 		void Toggle_LEDRED(void){
;User_Function.c,158 :: 		if(LEDRED == 0) LEDRED = 1;
0x0A92	0xAF82E9  	BTSC	LATGbits, #12
0x0A94	0x370002  	BRA	L_Toggle_LEDRED12
0x0A96	0xA882E9  	BSET	LATGbits, #12
0x0A98	0x370001  	BRA	L_Toggle_LEDRED13
L_Toggle_LEDRED12:
;User_Function.c,159 :: 		else                         LEDRED = 0;
0x0A9A	0xA982E9  	BCLR	LATGbits, #12
L_Toggle_LEDRED13:
;User_Function.c,161 :: 		}
L_end_Toggle_LEDRED:
0x0A9C	0x060000  	RETURN
; end of _Toggle_LEDRED
__Mul_FP:
0x0C02	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,855 :: 		
;__Lib_MathDouble.c,857 :: 		
0x0C04	0x070002  	RCALL	MulFP___mulsf3
;__Lib_MathDouble.c,858 :: 		
0x0C06	0x000000040D18  	GOTO	the_end__Mul_FP
;__Lib_MathDouble.c,861 :: 		
MulFP___mulsf3:
;__Lib_MathDouble.c,862 :: 		
0x0C0A	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,863 :: 		
0x0C0C	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,864 :: 		
0x0C0E	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,865 :: 		
0x0C10	0x070030  	RCALL	MulFP__funpack2
;__Lib_MathDouble.c,866 :: 		
0x0C12	0x330037  	BRA N	MulFP__fPropagateNaN
;__Lib_MathDouble.c,867 :: 		
0x0C14	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,868 :: 		
0x0C16	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,869 :: 		
0x0C18	0x320024  	BRA Z	MulFP_aisinfinite
;__Lib_MathDouble.c,870 :: 		
0x0C1A	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,871 :: 		
0x0C1C	0x320027  	BRA Z	MulFP_bisinfinite
;__Lib_MathDouble.c,872 :: 		
0x0C1E	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,873 :: 		
0x0C20	0x320022  	BRA Z	MulFP_return8_1
;__Lib_MathDouble.c,874 :: 		
0x0C22	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,875 :: 		
0x0C24	0x320021  	BRA Z	MulFP_return2_1
;__Lib_MathDouble.c,876 :: 		
0x0C26	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,877 :: 		
0x0C28	0xB107EB  	SUB	#126, W11
;__Lib_MathDouble.c,878 :: 		
0x0C2A	0xB83401  	MUL.UU	W6, W1, W8
;__Lib_MathDouble.c,879 :: 		
0x0C2C	0xB83A00  	MUL.UU	W7, W0, W4
;__Lib_MathDouble.c,880 :: 		
0x0C2E	0x420408  	ADD	W4, W8, W8
;__Lib_MathDouble.c,881 :: 		
0x0C30	0x4A8489  	ADDC	W5, W9, W9
;__Lib_MathDouble.c,882 :: 		
0x0C32	0xB83A01  	MUL.UU	W7, W1, W4
;__Lib_MathDouble.c,883 :: 		
0x0C34	0xB83000  	MUL.UU	W6, W0, W0
;__Lib_MathDouble.c,884 :: 		
0x0C36	0x408088  	ADD	W1, W8, W1
;__Lib_MathDouble.c,885 :: 		
0x0C38	0x4A0109  	ADDC	W4, W9, W2
;__Lib_MathDouble.c,886 :: 		
0x0C3A	0x330004  	BRA N	MulFP_formsticky
;__Lib_MathDouble.c,887 :: 		
0x0C3C	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,888 :: 		
0x0C3E	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,889 :: 		
0x0C40	0x490102  	ADDC	W2, W2, W2
;__Lib_MathDouble.c,890 :: 		
0x0C42	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,891 :: 		
MulFP_formsticky:
;__Lib_MathDouble.c,892 :: 		
0x0C44	0xDD09C9  	SL	W1, #9, W3
;__Lib_MathDouble.c,893 :: 		
0x0C46	0x700183  	IOR	W0, W3, W3
;__Lib_MathDouble.c,894 :: 		
0x0C48	0x320001  	BRA Z	MulFP_formRandSig
;__Lib_MathDouble.c,895 :: 		
0x0C4A	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,896 :: 		
MulFP_formRandSig:
;__Lib_MathDouble.c,897 :: 		
0x0C4C	0xDE14C8  	LSR	W2, #8, W9
;__Lib_MathDouble.c,898 :: 		
0x0C4E	0xDD1448  	SL	W2, #8, W8
;__Lib_MathDouble.c,899 :: 		
0x0C50	0xDE0947  	LSR	W1, #7, W2
;__Lib_MathDouble.c,900 :: 		
0x0C52	0xB20012  	AND	#1, W2
;__Lib_MathDouble.c,901 :: 		
0x0C54	0xDE08C8  	LSR	W1, #8, W1
;__Lib_MathDouble.c,902 :: 		
0x0C56	0x708408  	IOR	W1, W8, W8
;__Lib_MathDouble.c,903 :: 		
0x0C58	0x070024  	RCALL	MulFP__fpack
;__Lib_MathDouble.c,904 :: 		
MulFP_return0_1:
;__Lib_MathDouble.c,905 :: 		
0x0C5A	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,906 :: 		
0x0C5C	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,907 :: 		
0x0C5E	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,908 :: 		
0x0C60	0x370019  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,909 :: 		
MulFP_aisinfinite:
;__Lib_MathDouble.c,910 :: 		
0x0C62	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,911 :: 		
0x0C64	0x32001B  	BRA Z	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,912 :: 		
MulFP_return8_1:
;__Lib_MathDouble.c,913 :: 		
0x0C66	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,914 :: 		
MulFP_return2_1:
;__Lib_MathDouble.c,915 :: 		
0x0C68	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,916 :: 		
0x0C6A	0x37FFF7  	BRA	MulFP_return0_1
;__Lib_MathDouble.c,917 :: 		
MulFP_bisinfinite:
;__Lib_MathDouble.c,918 :: 		
0x0C6C	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,919 :: 		
0x0C6E	0x3AFFFC  	BRA NZ	MulFP_return2_1
;__Lib_MathDouble.c,920 :: 		
0x0C70	0x370015  	BRA	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,921 :: 		
MulFP__funpack2:
;__Lib_MathDouble.c,922 :: 		
0x0C72	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,923 :: 		
0x0C74	0x07003C  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,924 :: 		
0x0C76	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,925 :: 		
0x0C78	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,926 :: 		
0x0C7A	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,927 :: 		
0x0C7C	0x070038  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,928 :: 		
0x0C7E	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,929 :: 		
0x0C80	0x060000  	RETURN
;__Lib_MathDouble.c,930 :: 		
MulFP__fPropagateNaN:
;__Lib_MathDouble.c,931 :: 		
0x0C82	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,932 :: 		
0x0C84	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,933 :: 		
0x0C86	0x360005  	BRA LEU	MulFP_return0_2
;__Lib_MathDouble.c,934 :: 		
0x0C88	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,935 :: 		
0x0C8A	0x360002  	BRA LEU	MulFP_return8_2
;__Lib_MathDouble.c,936 :: 		
0x0C8C	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,937 :: 		
0x0C8E	0x3A0001  	BRA NZ	MulFP_return0_2
;__Lib_MathDouble.c,938 :: 		
MulFP_return8_2:
;__Lib_MathDouble.c,939 :: 		
0x0C90	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,940 :: 		
MulFP_return0_2:
;__Lib_MathDouble.c,941 :: 		
0x0C92	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,942 :: 		
MulFP__fbopExit:
;__Lib_MathDouble.c,943 :: 		
0x0C94	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,944 :: 		
0x0C96	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,945 :: 		
0x0C98	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,946 :: 		
0x0C9A	0x060000  	RETURN
;__Lib_MathDouble.c,947 :: 		
MulFP__fbopReturnNaN:
;__Lib_MathDouble.c,948 :: 		
0x0C9C	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,949 :: 		
0x0C9E	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,950 :: 		
0x0CA0	0x37FFF9  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,951 :: 		
MulFP__fpack:
;__Lib_MathDouble.c,952 :: 		
0x0CA2	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,953 :: 		
0x0CA4	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,954 :: 		
0x0CA6	0x3D000B  	BRA GE	MulFP_notsubnormal
;__Lib_MathDouble.c,955 :: 		
0x0CA8	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,956 :: 		
0x0CAA	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,957 :: 		
0x0CAC	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,958 :: 		
0x0CAE	0x34001D  	BRA LE	MulFP_zerosig
;__Lib_MathDouble.c,959 :: 		
MulFP_subnormal1:
;__Lib_MathDouble.c,960 :: 		
0x0CB0	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,961 :: 		
0x0CB2	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,962 :: 		
0x0CB4	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,963 :: 		
0x0CB6	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,964 :: 		
0x0CB8	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,965 :: 		
0x0CBA	0x3AFFFA  	BRA NZ	MulFP_subnormal1
;__Lib_MathDouble.c,966 :: 		
0x0CBC	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,967 :: 		
MulFP_notsubnormal:
;__Lib_MathDouble.c,968 :: 		
0x0CBE	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,969 :: 		
0x0CC0	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,970 :: 		
0x0CC2	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,971 :: 		
0x0CC4	0x320009  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,972 :: 		
0x0CC6	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,973 :: 		
0x0CC8	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,974 :: 		
0x0CCA	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,975 :: 		
0x0CCC	0x320005  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,976 :: 		
0x0CCE	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,977 :: 		
0x0CD0	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,978 :: 		
0x0CD2	0x3A0002  	BRA NZ	MulFP_packupandgo
;__Lib_MathDouble.c,979 :: 		
0x0CD4	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,980 :: 		
0x0CD6	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,981 :: 		
MulFP_packupandgo:
;__Lib_MathDouble.c,982 :: 		
0x0CD8	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,983 :: 		
0x0CDA	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,984 :: 		
0x0CDC	0x3D0005  	BRA GE	MulFP_overflow
;__Lib_MathDouble.c,985 :: 		
0x0CDE	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,986 :: 		
0x0CE0	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,987 :: 		
0x0CE2	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,988 :: 		
0x0CE4	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,989 :: 		
0x0CE6	0x060000  	RETURN
;__Lib_MathDouble.c,990 :: 		
MulFP_overflow:
;__Lib_MathDouble.c,991 :: 		
0x0CE8	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,992 :: 		
MulFP_zerosig:
;__Lib_MathDouble.c,993 :: 		
0x0CEA	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,994 :: 		
0x0CEC	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,995 :: 		
MulFP__funpack:
;__Lib_MathDouble.c,996 :: 		
0x0CEE	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,997 :: 		
0x0CF0	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,998 :: 		
0x0CF2	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,999 :: 		
0x0CF4	0x320008  	BRA Z	MulFP_zeroorsub
;__Lib_MathDouble.c,1000 :: 		
0x0CF6	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1001 :: 		
0x0CF8	0x320002  	BRA Z	MulFP_nanorinf
;__Lib_MathDouble.c,1002 :: 		
MulFP_finitereturn:
;__Lib_MathDouble.c,1003 :: 		
0x0CFA	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1004 :: 		
0x0CFC	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1005 :: 		
MulFP_nanorinf:
;__Lib_MathDouble.c,1006 :: 		
0x0CFE	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1007 :: 		
0x0D00	0x320001  	BRA Z	MulFP_infinite
;__Lib_MathDouble.c,1008 :: 		
0x0D02	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1009 :: 		
MulFP_infinite:
;__Lib_MathDouble.c,1010 :: 		
0x0D04	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1011 :: 		
MulFP_zeroorsub:
;__Lib_MathDouble.c,1012 :: 		
0x0D06	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1013 :: 		
0x0D08	0x3A0002  	BRA NZ	MulFP_subnormal2
;__Lib_MathDouble.c,1014 :: 		
0x0D0A	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1015 :: 		
MulFP_normalize:
;__Lib_MathDouble.c,1016 :: 		
0x0D0C	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1017 :: 		
MulFP_subnormal2:
;__Lib_MathDouble.c,1018 :: 		
0x0D0E	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1019 :: 		
0x0D10	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1020 :: 		
0x0D12	0x3BFFFC  	BRA NN	MulFP_normalize
;__Lib_MathDouble.c,1021 :: 		
0x0D14	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1022 :: 		
0x0D16	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1025 :: 		
the_end__Mul_FP:
;__Lib_MathDouble.c,1028 :: 		
L_end__Mul_FP:
0x0D18	0xFA8000  	ULNK
0x0D1A	0x060000  	RETURN
; end of __Mul_FP
__Div_FP:
0x0D74	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1050 :: 		
;__Lib_MathDouble.c,1052 :: 		
0x0D76	0x070002  	RCALL	DivFP___divsf3
;__Lib_MathDouble.c,1053 :: 		
0x0D78	0x000000040EA6  	GOTO	the_end__Div_FP
;__Lib_MathDouble.c,1056 :: 		
DivFP___divsf3:
;__Lib_MathDouble.c,1057 :: 		
0x0D7C	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,1058 :: 		
0x0D7E	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,1059 :: 		
0x0D80	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,1060 :: 		
0x0D82	0x07003E  	RCALL	DivFP__funpack2
;__Lib_MathDouble.c,1061 :: 		
0x0D84	0x330045  	BRA N	DivFP__fPropagateNaN
;__Lib_MathDouble.c,1062 :: 		
0x0D86	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,1063 :: 		
0x0D88	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,1064 :: 		
0x0D8A	0x32002E  	BRA Z	DivFP_aisinfinite
;__Lib_MathDouble.c,1065 :: 		
0x0D8C	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1066 :: 		
0x0D8E	0x320033  	BRA Z	DivFP_returnZero
;__Lib_MathDouble.c,1067 :: 		
0x0D90	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,1068 :: 		
0x0D92	0x32002F  	BRA Z	DivFP_aiszero
;__Lib_MathDouble.c,1069 :: 		
0x0D94	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,1070 :: 		
0x0D96	0x320031  	BRA Z	DivFP_returnInf
;__Lib_MathDouble.c,1071 :: 		
DivFP_finitenonzero:
;__Lib_MathDouble.c,1072 :: 		
0x0D98	0x558585  	SUB	W11, W5, W11
;__Lib_MathDouble.c,1073 :: 		
0x0D9A	0xB007EB  	ADD	#126, W11
;__Lib_MathDouble.c,1074 :: 		
0x0D9C	0x200009  	MOV	#0, W9
;__Lib_MathDouble.c,1075 :: 		
0x0D9E	0x200408  	MOV	#64, W8
;__Lib_MathDouble.c,1076 :: 		
0x0DA0	0x370005  	BRA	DivFP_diventry
;__Lib_MathDouble.c,1077 :: 		
DivFP_divnext:
;__Lib_MathDouble.c,1078 :: 		
0x0DA2	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,1079 :: 		
0x0DA4	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,1080 :: 		
0x0DA6	0x31000A  	BRA C	DivFP_divdone
;__Lib_MathDouble.c,1081 :: 		
DivFP_divloop:
;__Lib_MathDouble.c,1082 :: 		
0x0DA8	0x430306  	ADD	W6, W6, W6
;__Lib_MathDouble.c,1083 :: 		
0x0DAA	0x4B8387  	ADDC	W7, W7, W7
;__Lib_MathDouble.c,1084 :: 		
DivFP_diventry:
;__Lib_MathDouble.c,1085 :: 		
0x0DAC	0x530100  	SUB	W6, W0, W2
;__Lib_MathDouble.c,1086 :: 		
0x0DAE	0x5B8181  	SUBB	W7, W1, W3
;__Lib_MathDouble.c,1087 :: 		
0x0DB0	0x33FFF8  	BRA N	DivFP_divnext
;__Lib_MathDouble.c,1088 :: 		
0x0DB2	0xBE8302  	MOV.D	W2, W6
;__Lib_MathDouble.c,1089 :: 		
0x0DB4	0xA80010  	BSET	W8, #0
;__Lib_MathDouble.c,1090 :: 		
0x0DB6	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,1091 :: 		
0x0DB8	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,1092 :: 		
0x0DBA	0x39FFF6  	BRA NC	DivFP_divloop
;__Lib_MathDouble.c,1093 :: 		
DivFP_divdone:
;__Lib_MathDouble.c,1094 :: 		
0x0DBC	0xDD39C6  	SL	W7, #6, W3
;__Lib_MathDouble.c,1095 :: 		
0x0DBE	0x730183  	IOR	W6, W3, W3
;__Lib_MathDouble.c,1096 :: 		
0x0DC0	0x320001  	BRA Z	DivFP_stickyok
;__Lib_MathDouble.c,1097 :: 		
0x0DC2	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,1098 :: 		
DivFP_stickyok:
;__Lib_MathDouble.c,1099 :: 		
0x0DC4	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1100 :: 		
0x0DC6	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1101 :: 		
0x0DC8	0xA39809  	BTST.Z	W9, #9
;__Lib_MathDouble.c,1102 :: 		
0x0DCA	0x320005  	BRA Z	DivFP_guardused
;__Lib_MathDouble.c,1103 :: 		
0x0DCC	0xA70008  	BTSC	W8, #0
;__Lib_MathDouble.c,1104 :: 		
0x0DCE	0xA80006  	BSET	W3, #0
;__Lib_MathDouble.c,1105 :: 		
0x0DD0	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1106 :: 		
0x0DD2	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1107 :: 		
0x0DD4	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,1108 :: 		
DivFP_guardused:
;__Lib_MathDouble.c,1109 :: 		
0x0DD6	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1110 :: 		
0x0DD8	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1111 :: 		
0x0DDA	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,1112 :: 		
0x0DDC	0xD28102  	RLC	W2, W2
;__Lib_MathDouble.c,1113 :: 		
0x0DDE	0x070028  	RCALL	DivFP__fpack
;__Lib_MathDouble.c,1114 :: 		
DivFP_return0_1:
;__Lib_MathDouble.c,1115 :: 		
0x0DE0	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,1116 :: 		
0x0DE2	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,1117 :: 		
0x0DE4	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,1118 :: 		
0x0DE6	0x37001D  	BRA	DivFP__fbopExit
;__Lib_MathDouble.c,1119 :: 		
DivFP_aisinfinite:
;__Lib_MathDouble.c,1120 :: 		
0x0DE8	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1121 :: 		
0x0DEA	0x32001F  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.c,1122 :: 		
DivFP_return8_1:
;__Lib_MathDouble.c,1123 :: 		
0x0DEC	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,1124 :: 		
DivFP_return2_1:
;__Lib_MathDouble.c,1125 :: 		
0x0DEE	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1126 :: 		
0x0DF0	0x37FFF7  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1127 :: 		
DivFP_aiszero:
;__Lib_MathDouble.c,1128 :: 		
0x0DF2	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,1129 :: 		
0x0DF4	0x32001A  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.c,1130 :: 		
DivFP_returnZero:
;__Lib_MathDouble.c,1131 :: 		
0x0DF6	0xB80060  	MUL.UU	W0, #0, W0
;__Lib_MathDouble.c,1132 :: 		
0x0DF8	0x37FFF3  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1133 :: 		
DivFP_returnInf:
;__Lib_MathDouble.c,1134 :: 		
0x0DFA	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1135 :: 		
0x0DFC	0x27F801  	MOV	#32640, W1
;__Lib_MathDouble.c,1136 :: 		
0x0DFE	0x37FFF0  	BRA	DivFP_return0_1
;__Lib_MathDouble.c,1137 :: 		
DivFP__funpack2:
;__Lib_MathDouble.c,1138 :: 		
0x0E00	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1139 :: 		
0x0E02	0x07003C  	RCALL	DivFP__funpack
;__Lib_MathDouble.c,1140 :: 		
0x0E04	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1141 :: 		
0x0E06	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1142 :: 		
0x0E08	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1143 :: 		
0x0E0A	0x070038  	RCALL	DivFP__funpack
;__Lib_MathDouble.c,1144 :: 		
0x0E0C	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1145 :: 		
0x0E0E	0x060000  	RETURN
;__Lib_MathDouble.c,1146 :: 		
DivFP__fPropagateNaN:
;__Lib_MathDouble.c,1147 :: 		
0x0E10	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1148 :: 		
0x0E12	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,1149 :: 		
0x0E14	0x360005  	BRA LEU	DivFP_return0
;__Lib_MathDouble.c,1150 :: 		
0x0E16	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,1151 :: 		
0x0E18	0x360002  	BRA LEU	DivFP_return8
;__Lib_MathDouble.c,1152 :: 		
0x0E1A	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,1153 :: 		
0x0E1C	0x3A0001  	BRA NZ	DivFP_return0
;__Lib_MathDouble.c,1154 :: 		
DivFP_return8:
;__Lib_MathDouble.c,1155 :: 		
0x0E1E	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,1156 :: 		
DivFP_return0:
;__Lib_MathDouble.c,1157 :: 		
0x0E20	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,1158 :: 		
DivFP__fbopExit:
;__Lib_MathDouble.c,1159 :: 		
0x0E22	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,1160 :: 		
0x0E24	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,1161 :: 		
0x0E26	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,1162 :: 		
0x0E28	0x060000  	RETURN
;__Lib_MathDouble.c,1163 :: 		
DivFP__fbopReturnNaN:
;__Lib_MathDouble.c,1164 :: 		
0x0E2A	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1165 :: 		
0x0E2C	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,1166 :: 		
0x0E2E	0x37FFF9  	BRA	DivFP__fbopExit
;__Lib_MathDouble.c,1167 :: 		
DivFP__fpack:
;__Lib_MathDouble.c,1168 :: 		
0x0E30	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,1169 :: 		
0x0E32	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,1170 :: 		
0x0E34	0x3D000B  	BRA GE	DivFP_notsubnormal
;__Lib_MathDouble.c,1171 :: 		
0x0E36	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,1172 :: 		
0x0E38	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,1173 :: 		
0x0E3A	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,1174 :: 		
0x0E3C	0x34001D  	BRA LE	DivFP_zerosig
;__Lib_MathDouble.c,1175 :: 		
DivFP_subnormal:
;__Lib_MathDouble.c,1176 :: 		
0x0E3E	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,1177 :: 		
0x0E40	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,1178 :: 		
0x0E42	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1179 :: 		
0x0E44	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1180 :: 		
0x0E46	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,1181 :: 		
0x0E48	0x3AFFFA  	BRA NZ	DivFP_subnormal
;__Lib_MathDouble.c,1182 :: 		
0x0E4A	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,1183 :: 		
DivFP_notsubnormal:
;__Lib_MathDouble.c,1184 :: 		
0x0E4C	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,1185 :: 		
0x0E4E	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,1186 :: 		
0x0E50	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,1187 :: 		
0x0E52	0x320009  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.c,1188 :: 		
0x0E54	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,1189 :: 		
0x0E56	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,1190 :: 		
0x0E58	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,1191 :: 		
0x0E5A	0x320005  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.c,1192 :: 		
0x0E5C	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,1193 :: 		
0x0E5E	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,1194 :: 		
0x0E60	0x3A0002  	BRA NZ	DivFP_packupandgo
;__Lib_MathDouble.c,1195 :: 		
0x0E62	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,1196 :: 		
0x0E64	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,1197 :: 		
DivFP_packupandgo:
;__Lib_MathDouble.c,1198 :: 		
0x0E66	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,1199 :: 		
0x0E68	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,1200 :: 		
0x0E6A	0x3D0005  	BRA GE	DivFP_overfloW
;__Lib_MathDouble.c,1201 :: 		
0x0E6C	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,1202 :: 		
0x0E6E	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,1203 :: 		
0x0E70	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,1204 :: 		
0x0E72	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,1205 :: 		
0x0E74	0x060000  	RETURN
;__Lib_MathDouble.c,1206 :: 		
DivFP_overfloW:
;__Lib_MathDouble.c,1207 :: 		
0x0E76	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,1208 :: 		
DivFP_zerosig:
;__Lib_MathDouble.c,1209 :: 		
0x0E78	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,1210 :: 		
0x0E7A	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,1211 :: 		
DivFP__funpack:
;__Lib_MathDouble.c,1212 :: 		
0x0E7C	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1213 :: 		
0x0E7E	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1214 :: 		
0x0E80	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1215 :: 		
0x0E82	0x320008  	BRA Z	DivFP_zeroorsub
;__Lib_MathDouble.c,1216 :: 		
0x0E84	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1217 :: 		
0x0E86	0x320002  	BRA Z	DivFP_nanorinf
;__Lib_MathDouble.c,1218 :: 		
DivFP_finitereturn:
;__Lib_MathDouble.c,1219 :: 		
0x0E88	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1220 :: 		
0x0E8A	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1221 :: 		
DivFP_nanorinf:
;__Lib_MathDouble.c,1222 :: 		
0x0E8C	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1223 :: 		
0x0E8E	0x320001  	BRA Z	DivFP_infinite
;__Lib_MathDouble.c,1224 :: 		
0x0E90	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1225 :: 		
DivFP_infinite:
;__Lib_MathDouble.c,1226 :: 		
0x0E92	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1227 :: 		
DivFP_zeroorsub:
;__Lib_MathDouble.c,1228 :: 		
0x0E94	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1229 :: 		
0x0E96	0x3A0002  	BRA NZ	DivFP_subnormal2
;__Lib_MathDouble.c,1230 :: 		
0x0E98	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1231 :: 		
DivFP_normalize:
;__Lib_MathDouble.c,1232 :: 		
0x0E9A	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1233 :: 		
DivFP_subnormal2:
;__Lib_MathDouble.c,1234 :: 		
0x0E9C	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1235 :: 		
0x0E9E	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1236 :: 		
0x0EA0	0x3BFFFC  	BRA NN	DivFP_normalize
;__Lib_MathDouble.c,1237 :: 		
0x0EA2	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1238 :: 		
0x0EA4	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1241 :: 		
the_end__Div_FP:
;__Lib_MathDouble.c,1243 :: 		
L_end__Div_FP:
0x0EA6	0xFA8000  	ULNK
0x0EA8	0x060000  	RETURN
; end of __Div_FP
__Sub_FP:
0x0BB8	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,830 :: 		
;__Lib_MathDouble.c,831 :: 		
0x0BBA	0xAAE007  	BTG	W3, #15
;__Lib_MathDouble.c,832 :: 		
0x0BBC	0x07FDB6  	RCALL	__AddSub_FP
;__Lib_MathDouble.c,833 :: 		
L_end__Sub_FP:
0x0BBE	0xFA8000  	ULNK
0x0BC0	0x060000  	RETURN
; end of __Sub_FP
;main.c,0 :: ?ICS_coeff [204]
0x8000	0x0000 ;?ICS_coeff+0
0x8002	0x0000 ;?ICS_coeff+2
0x8004	0x0000 ;?ICS_coeff+4
0x8006	0x0000 ;?ICS_coeff+6
0x8008	0x0002 ;?ICS_coeff+8
0x800A	0x0000 ;?ICS_coeff+10
0x800C	0x0007 ;?ICS_coeff+12
0x800E	0x0000 ;?ICS_coeff+14
0x8010	0x0014 ;?ICS_coeff+16
0x8012	0x0000 ;?ICS_coeff+18
0x8014	0x0030 ;?ICS_coeff+20
0x8016	0x0000 ;?ICS_coeff+22
0x8018	0x0067 ;?ICS_coeff+24
0x801A	0x0000 ;?ICS_coeff+26
0x801C	0x00C9 ;?ICS_coeff+28
0x801E	0x0000 ;?ICS_coeff+30
0x8020	0x016A ;?ICS_coeff+32
0x8022	0x0000 ;?ICS_coeff+34
0x8024	0x0265 ;?ICS_coeff+36
0x8026	0x0000 ;?ICS_coeff+38
0x8028	0x03D5 ;?ICS_coeff+40
0x802A	0x0000 ;?ICS_coeff+42
0x802C	0x05DA ;?ICS_coeff+44
0x802E	0x0000 ;?ICS_coeff+46
0x8030	0x0890 ;?ICS_coeff+48
0x8032	0x0000 ;?ICS_coeff+50
0x8034	0x0C0F ;?ICS_coeff+52
0x8036	0x0000 ;?ICS_coeff+54
0x8038	0x1062 ;?ICS_coeff+56
0x803A	0x0000 ;?ICS_coeff+58
0x803C	0x1589 ;?ICS_coeff+60
0x803E	0x0000 ;?ICS_coeff+62
0x8040	0x1B73 ;?ICS_coeff+64
0x8042	0x0000 ;?ICS_coeff+66
0x8044	0x21FA ;?ICS_coeff+68
0x8046	0x0000 ;?ICS_coeff+70
0x8048	0x28E8 ;?ICS_coeff+72
0x804A	0x0000 ;?ICS_coeff+74
0x804C	0x2FF2 ;?ICS_coeff+76
0x804E	0x0000 ;?ICS_coeff+78
0x8050	0x36C3 ;?ICS_coeff+80
0x8052	0x0000 ;?ICS_coeff+82
0x8054	0x3CFF ;?ICS_coeff+84
0x8056	0x0000 ;?ICS_coeff+86
0x8058	0x424C ;?ICS_coeff+88
0x805A	0x0000 ;?ICS_coeff+90
0x805C	0x4657 ;?ICS_coeff+92
0x805E	0x0000 ;?ICS_coeff+94
0x8060	0x48E0 ;?ICS_coeff+96
0x8062	0x0000 ;?ICS_coeff+98
0x8064	0x49BD ;?ICS_coeff+100
0x8066	0x0000 ;?ICS_coeff+102
0x8068	0x48E0 ;?ICS_coeff+104
0x806A	0x0000 ;?ICS_coeff+106
0x806C	0x4657 ;?ICS_coeff+108
0x806E	0x0000 ;?ICS_coeff+110
0x8070	0x424C ;?ICS_coeff+112
0x8072	0x0000 ;?ICS_coeff+114
0x8074	0x3CFF ;?ICS_coeff+116
0x8076	0x0000 ;?ICS_coeff+118
0x8078	0x36C3 ;?ICS_coeff+120
0x807A	0x0000 ;?ICS_coeff+122
0x807C	0x2FF2 ;?ICS_coeff+124
0x807E	0x0000 ;?ICS_coeff+126
0x8080	0x28E8 ;?ICS_coeff+128
0x8082	0x0000 ;?ICS_coeff+130
0x8084	0x21FA ;?ICS_coeff+132
0x8086	0x0000 ;?ICS_coeff+134
0x8088	0x1B73 ;?ICS_coeff+136
0x808A	0x0000 ;?ICS_coeff+138
0x808C	0x1589 ;?ICS_coeff+140
0x808E	0x0000 ;?ICS_coeff+142
0x8090	0x1062 ;?ICS_coeff+144
0x8092	0x0000 ;?ICS_coeff+146
0x8094	0x0C0F ;?ICS_coeff+148
0x8096	0x0000 ;?ICS_coeff+150
0x8098	0x0890 ;?ICS_coeff+152
0x809A	0x0000 ;?ICS_coeff+154
0x809C	0x05DA ;?ICS_coeff+156
0x809E	0x0000 ;?ICS_coeff+158
0x80A0	0x03D5 ;?ICS_coeff+160
0x80A2	0x0000 ;?ICS_coeff+162
0x80A4	0x0265 ;?ICS_coeff+164
0x80A6	0x0000 ;?ICS_coeff+166
0x80A8	0x016A ;?ICS_coeff+168
0x80AA	0x0000 ;?ICS_coeff+170
0x80AC	0x00C9 ;?ICS_coeff+172
0x80AE	0x0000 ;?ICS_coeff+174
0x80B0	0x0067 ;?ICS_coeff+176
0x80B2	0x0000 ;?ICS_coeff+178
0x80B4	0x0030 ;?ICS_coeff+180
0x80B6	0x0000 ;?ICS_coeff+182
0x80B8	0x0014 ;?ICS_coeff+184
0x80BA	0x0000 ;?ICS_coeff+186
0x80BC	0x0007 ;?ICS_coeff+188
0x80BE	0x0000 ;?ICS_coeff+190
0x80C0	0x0002 ;?ICS_coeff+192
0x80C2	0x0000 ;?ICS_coeff+194
0x80C4	0x0000 ;?ICS_coeff+196
0x80C6	0x0000 ;?ICS_coeff+198
0x80C8	0x0000 ;?ICS_coeff+200
0x80CA	0x0000 ;?ICS_coeff+202
; end of ?ICS_coeff
;can.c,0 :: ?ICS_can_txPriority [2]
0x80CC	0x00FD ;?ICS_can_txPriority+0
; end of ?ICS_can_txPriority
;can.c,0 :: ?ICS_can_dataOutLength [2]
0x80CE	0x0000 ;?ICS_can_dataOutLength+0
; end of ?ICS_can_dataOutLength
;main.c,0 :: ?ICS_filter_factor [4]
0x80D0	0x93DF ;?ICS_filter_factor+0
0x80D2	0x0004 ;?ICS_filter_factor+2
; end of ?ICS_filter_factor
;main.c,0 :: ?ICS_time_index [2]
0x80D4	0x0000 ;?ICS_time_index+0
; end of ?ICS_time_index
;can.c,0 :: ?ICS_can_err [2]
0x80D6	0x0000 ;?ICS_can_err+0
; end of ?ICS_can_err
;main.c,0 :: ?ICS_TMR1_CONT [2]
0x80D8	0x0000 ;?ICS_TMR1_CONT+0
; end of ?ICS_TMR1_CONT
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100     [154]    _CAN1SetBaudRate
0x019A      [78]    _CAN1SetOperationMode
0x01E8      [40]    _CAN1SetMask
0x0210     [114]    __Compare_Fp
0x0282     [110]    _CAN1SetFilter
0x02F0     [230]    _Can_initInterrupt
0x03D6     [300]    __Lib_CAN_12_CAN1IDToRegs
0x0502      [10]    __Compare_Le_Fp
0x050C       [4]    _Can_setWritePriority
0x0510     [224]    _CAN1Initialize
0x05F0      [82]    __Divide_32x32
0x0642      [18]    __Multiply_32x32
0x0654     [108]    _ceil
0x06C0     [106]    _Can_init
0x072A     [364]    __AddSub_FP
0x0896       [8]    _Can_getWriteFlags
0x089E      [16]    _Can_addByteToWritePacket
0x08AE     [158]    _CAN1Write
0x094C     [182]    __Long2Float
0x0A02     [120]    __Float2Longint
0x0A7A      [24]    _Can_addIntToWritePacket
0x0A92      [12]    _Toggle_LEDRED
0x0A9E      [64]    _Can_write
0x0ADE       [6]    _can_bus_init
0x0AE4      [34]    _Can_resetWritePacket
0x0B06     [126]    _adc_init
0x0B84      [52]    _dau_set_ID
0x0BB8      [10]    __Sub_FP
0x0BC2       [8]    _io_init
0x0BCA      [52]    _Clear_buffer
0x0BFE       [4]    _Can_clearInterrupt
0x0C02     [282]    __Mul_FP
0x0D1C      [88]    _FIR_filter
0x0D74     [310]    __Div_FP
0x0EAA      [54]    _tmr4_init
0x0EE0      [58]    _tmr5_init
0x0F1A      [50]    _tmr1_init
0x0F4C     [238]    _TIMER1_INT
0x103A      [28]    _canInterrupt
0x1056      [44]    _main
0x1082     [284]    _TIMER5_INT
0x119E      [94]    _ADC_INT
0x11FC      [30]    _TIMER4_INT
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0328       [2]    C1RXF5SID
0x0330       [2]    C1RXM0SID
0x0318       [2]    C1RXF3SID
0x0320       [2]    C1RXF4SID
0x08DA       [2]    _TMR5_CONT
0x0338       [2]    C1RXM1SID
0x0394       [2]    C1CFG2bits
0x0390       [2]    C1CTRLbits
0x0102       [2]    PR1
0x0392       [1]    C1CFG1bits
0x0308       [2]    C1RXF1SID
0x0310       [2]    C1RXF2SID
0x038E       [1]    C1RX0CONbits
0x0300       [2]    C1RXF0SID
0x0340       [2]    C1TX2SID
0x034E       [2]    C1TX2CON
0x035E       [2]    C1TX1CON
0x034E       [1]    C1TX2CONbits
0x02E8       [2]    LATGbits
0x08DC       [2]    _buffer_adc
0x0280       [2]    ADCBUF0
0x036E       [1]    C1TX0CONbits
0x08DE       [2]    _ADC_CONT
0x035E       [1]    C1TX1CONbits
0x0350       [2]    C1TX1SID
0x0360       [2]    C1TX0SID
0x036E       [2]    C1TX0CON
0x011E       [2]    T4CONbits
0x009E       [2]    IPC5bits
0x08E0    [3264]    _data_buffer
0x15A0      [32]    _data_out
0x011A       [2]    PR4
0x008C       [2]    IEC0bits
0x0086       [2]    IFS1bits
0x0114       [2]    TMR4
0x15C0       [8]    _can_dataOutBuffer
0x0042       [2]    SRbits
0x0398       [1]    C1INTEbits
0x15C8       [1]    _DAU_ID
0x0052       [2]    DISICNT
0x008E       [2]    IEC1bits
0x0120       [2]    T5CONbits
0x0118       [2]    TMR5
0x02E0       [1]    PORTFbits
0x02E4       [2]    TRISGbits
0x0094       [2]    IPC0bits
0x0100       [2]    TMR1
0x011C       [2]    PR5
0x0104       [2]    T1CONbits
0x02A8       [2]    ADPCFG
0x02A4       [2]    ADCON3bits
0x0098       [2]    IPC2bits
0x0084       [2]    IFS0bits
0x02AA       [2]    ADCSSL
0x02A6       [2]    ADCHSbits
0x02A2       [2]    ADCON2bits
0x02A0       [2]    ADCON1bits
0x0800     [204]    _coeff
0x08CC       [2]    _can_txPriority
0x08CE       [2]    _can_dataOutLength
0x08D0       [4]    _filter_factor
0x08D4       [2]    _time_index
0x08D6       [2]    _can_err
0x08D8       [2]    _TMR1_CONT
0x0052       [2]    DISICNT
0x0014       [2]    FARG_CAN1SetBaudRate_SJW
0x0016       [2]    FARG_CAN1SetBaudRate_BRP
0x0018       [2]    FARG_CAN1SetBaudRate_PHSEG1
0x001A       [2]    FARG_CAN1SetBaudRate_PHSEG2
0x0100       [2]    TMR1
0x0102       [2]    PR1
0x0114       [2]    TMR4
0x0118       [2]    TMR5
0x011A       [2]    PR4
0x011C       [2]    PR5
0x0014       [2]    FARG_CAN1SetOperationMode_mode
0x0016       [2]    FARG_CAN1SetOperationMode_WAIT
0x0014       [2]    FARG_CAN1SetMask_CAN_MASK
0x0016       [4]    FARG_CAN1SetMask_val
0x001A       [2]    FARG_CAN1SetMask_CAN_CONFIG_FLAGS
0x0280       [2]    ADCBUF0
0x0014       [2]    FARG_CAN1SetFilter_CAN_FILTER
0x0016       [4]    FARG_CAN1SetFilter_val
0x001A       [2]    FARG_CAN1SetFilter_CAN_CONFIG_FLAGS
0x02A8       [2]    ADPCFG
0x02AA       [2]    ADCSSL
0x0300       [2]    C1RXF0SID
0x0308       [2]    C1RXF1SID
0x0310       [2]    C1RXF2SID
0x0318       [2]    C1RXF3SID
0x0320       [2]    C1RXF4SID
0x0328       [2]    C1RXF5SID
0x0330       [2]    C1RXM0SID
0x0338       [2]    C1RXM1SID
0x0340       [2]    C1TX2SID
0x034E       [2]    C1TX2CON
0x0350       [2]    C1TX1SID
0x035E       [2]    C1TX1CON
0x0360       [2]    C1TX0SID
0x036E       [2]    C1TX0CON
0x0014       [2]    FARG___Lib_CAN_12_CAN1IDToRegs_ptr
0x0016       [4]    FARG___Lib_CAN_12_CAN1IDToRegs_val
0x001A       [2]    FARG___Lib_CAN_12_CAN1IDToRegs_RegType
0x0014       [2]    FARG_Can_setWritePriority_txPriority
0x0014       [2]    FARG_CAN1Initialize_SJW
0x0016       [2]    FARG_CAN1Initialize_BRP
0x0018       [2]    FARG_CAN1Initialize_PHSEG1
0x001A       [2]    FARG_CAN1Initialize_PHSEG2
0x0014       [4]    FARG_ceil_x
0x0014       [1]    FARG_Can_addByteToWritePacket_dataOut
0x0014       [4]    FARG_CAN1Write_id
0x0018       [2]    FARG_CAN1Write_Data_
0x001A       [2]    FARG_CAN1Write_DataLen
0x0014       [2]    FARG_Can_addIntToWritePacket_dataOut
0x0014       [4]    FARG_Can_write_id
0x0014       [2]    FARG_dau_set_ID_DAU_ID
0x0014       [2]    FARG_FIR_filter_Channel_Index_Filter
0x0016       [2]    FARG_FIR_filter_time_index_filter
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x8000     [204]    ?ICS_coeff
0x80CC       [2]    ?ICS_can_txPriority
0x80CE       [2]    ?ICS_can_dataOutLength
0x80D0       [4]    ?ICS_filter_factor
0x80D4       [2]    ?ICS_time_index
0x80D6       [2]    ?ICS_can_err
0x80D8       [2]    ?ICS_TMR1_CONT
//** Label List: ** 
//----------------------------------------------
  L_Can_read0
  L_Can_read1
  L_Can_read2
  L_Can_write3
  L_Can_write4
  L_Can_write5
  L_Can_write6
  L_Can_write7
  L_Can_write8
  L_Can_resetWritePacket9
  L_Can_resetWritePacket10
  L_Can_resetWritePacket11
  L__Can_write12
  L__Can_write13
  L__Can_write14
  L_end_Can_init
  _Can_init
  L_end_Can_read
  _Can_read
  L__Can_read17
  L__Can_read18
  L_end_Can_writeByte
  _Can_writeByte
  L_end_Can_writeInt
  _Can_writeInt
  L_end_Can_addIntToWritePacket
  _Can_addIntToWritePacket
  L_end_Can_addByteToWritePacket
  _Can_addByteToWritePacket
  L_end_Can_write
  _Can_write
  L__Can_write24
  L__Can_write25
  L__Can_write26
  L_end_Can_setWritePriority
  _Can_setWritePriority
  L_end_Can_resetWritePacket
  _Can_resetWritePacket
  L__Can_resetWritePacket29
  L_end_Can_getWriteFlags
  _Can_getWriteFlags
  L_end_Can_B0hasBeenReceived
  _Can_B0hasBeenReceived
  L__Can_B0hasBeenReceived32
  L_end_Can_B1hasBeenReceived
  _Can_B1hasBeenReceived
  L__Can_B1hasBeenReceived34
  L_end_Can_clearB0Flag
  _Can_clearB0Flag
  L_end_Can_clearB1Flag
  _Can_clearB1Flag
  L_end_Can_clearInterrupt
  _Can_clearInterrupt
  L_end_Can_initInterrupt
  _Can_initInterrupt
  L_FIR_filter0
  L_FIR_filter1
  L_FIR_filter2
  L_FIR_filter3
  L_FIR_filter4
  L_TIMER5_INT5
  L_TIMER5_INT6
  L_TIMER5_INT7
  L_TIMER5_INT8
  L_TIMER5_INT9
  L_TIMER5_INT10
  L_TIMER5_INT11
  L_TIMER5_INT12
  L_TIMER1_INT13
  L_TIMER1_INT14
  L_TIMER1_INT15
  L_TIMER1_INT16
  L_TIMER1_INT17
  L_TIMER1_INT18
  L_ADC_INT19
  L_ADC_INT20
  L_ADC_INT21
  L_ADC_INT22
  L_ADC_INT23
  L_Clear_buffer24
  L_Clear_buffer25
  L_Clear_buffer26
  L_Clear_buffer27
  L_Clear_buffer28
  L_Clear_buffer29
  L_main30
  L_main31
  L_end_FIR_filter
  _FIR_filter
  L__FIR_filter33
  L__FIR_filter34
  L_end_canInterrupt
  _canInterrupt
  L_end_TIMER5_INT
  _TIMER5_INT
  L__TIMER5_INT37
  L__TIMER5_INT38
  L__TIMER5_INT39
  L__TIMER5_INT40
  L_end_TIMER1_INT
  _TIMER1_INT
  L__TIMER1_INT42
  L__TIMER1_INT43
  L__TIMER1_INT44
  L__TIMER1_INT45
  L_end_ADC_INT
  _ADC_INT
  L__ADC_INT47
  L__ADC_INT48
  L_end_TIMER4_INT
  _TIMER4_INT
  L_end_Clear_buffer
  _Clear_buffer
  L__Clear_buffer51
  L__Clear_buffer52
  L_end_main
  _main
  L__main_end_loop
  L_dau_set_ID0
  L_dau_set_ID1
  L_dau_set_ID2
  L_dau_set_ID3
  L_dau_set_ID4
  L_dau_set_ID5
  L_dau_set_ID6
  L_dau_set_ID7
  L_dau_set_ID8
  L_dau_set_ID9
  L_dau_set_ID10
  L_dau_set_ID11
  L_Toggle_LEDRED12
  L_Toggle_LEDRED13
  L_Toggle_LEDBLUE14
  L_Toggle_LEDBLUE15
  L__dau_set_ID16
  L__dau_set_ID17
  L__dau_set_ID18
  L__dau_set_ID19
  L__dau_set_ID20
  L__dau_set_ID21
  L__dau_set_ID22
  L__dau_set_ID23
  L__dau_set_ID24
  L_end_tmr5_init
  _tmr5_init
  L_end_can_bus_init
  _can_bus_init
  L_end_adc_init
  _adc_init
  L_end_tmr4_init
  _tmr4_init
  L_end_tmr1_init
  _tmr1_init
  L_end_io_init
  _io_init
  L_end_dau_set_ID
  _dau_set_ID
  L_end_Toggle_LEDRED
  _Toggle_LEDRED
  L_end_Toggle_LEDBLUE
  _Toggle_LEDBLUE
  L_end_Set_LEDRED
  _Set_LEDRED
  L_end_set_LEDBLUE
  _set_LEDBLUE
  L_end_set_LEDGREEN
  _set_LEDGREEN
  L___Lib_CAN_12_CAN1IDToRegs0
  L___Lib_CAN_12_CAN1IDToRegs1
  L___Lib_CAN_12_CAN1IDToRegs2
  L___Lib_CAN_12_CAN1IDToRegs3
  L___Lib_CAN_12_CAN1IDToRegs4
  L___Lib_CAN_12_CAN1IDToRegs5
  L___Lib_CAN_12_CAN1IDToRegs6
  L___Lib_CAN_12_CAN1IDToRegs7
  L___Lib_CAN_12_CAN1IDToRegs8
  L___Lib_CAN_12_CAN1IDToRegs9
  L___Lib_CAN_12_CAN1IDToRegs10
  L___Lib_CAN_12_CAN1IDToRegs11
  L___Lib_CAN_12_CAN1IDToRegs12
  L_CAN1SetOperationMode13
  L_CAN1SetOperationMode14
  L_CAN1SetOperationMode15
  L_CAN1SetOperationMode16
  L_CAN1SetBaudRate17
  L_CAN1SetBaudRate18
  L_CAN1SetBaudRate19
  L_CAN1SetMask20
  L_CAN1SetMask21
  L_CAN1SetFilter22
  L_CAN1SetFilter23
  L_CAN1SetFilter24
  L_CAN1SetFilter25
  L_CAN1SetFilter26
  L_CAN1SetFilter27
  L_CAN1SetFilter28
  L_CAN1SetFilter29
  L___Lib_CAN_12_RegsToCAN1ID30
  L___Lib_CAN_12_RegsToCAN1ID31
  L_CAN1Write32
  L_CAN1Write33
  L_CAN1Write34
  L_CAN1Write35
  L_CAN1Write36
  L_CAN1Write37
  L_CAN1Write38
  L_CAN1Write39
  L_CAN1Write40
  L_CAN1Write41
  L_CAN1Write42
  L_CAN1Read43
  L_CAN1Read44
  L_CAN1Read45
  L_CAN1Read46
  L_CAN1Read47
  L_CAN1Read48
  L_CAN1Read49
  L_CAN1Read50
  L_CAN1Read51
  L_CAN1Read52
  L_CAN1Read53
  L_CAN1Read54
  L_CAN1Read55
  L_CAN1Read56
  L_CAN1Read57
  L_CAN1Read58
  L_CAN1Initialize59
  L_CAN1Initialize60
  L_CAN1Initialize61
  L_CAN1Initialize62
  L_CAN1Initialize63
  L___Lib_CAN_12_CAN2IDToRegs64
  L___Lib_CAN_12_CAN2IDToRegs65
  L___Lib_CAN_12_CAN2IDToRegs66
  L___Lib_CAN_12_CAN2IDToRegs67
  L___Lib_CAN_12_CAN2IDToRegs68
  L___Lib_CAN_12_CAN2IDToRegs69
  L___Lib_CAN_12_CAN2IDToRegs70
  L___Lib_CAN_12_CAN2IDToRegs71
  L___Lib_CAN_12_CAN2IDToRegs72
  L___Lib_CAN_12_CAN2IDToRegs73
  L___Lib_CAN_12_CAN2IDToRegs74
  L___Lib_CAN_12_CAN2IDToRegs75
  L___Lib_CAN_12_CAN2IDToRegs76
  L_CAN2SetOperationMode77
  L_CAN2SetOperationMode78
  L_CAN2SetOperationMode79
  L_CAN2SetOperationMode80
  L_CAN2SetBaudRate81
  L_CAN2SetBaudRate82
  L_CAN2SetBaudRate83
  L_CAN2SetMask84
  L_CAN2SetMask85
  L_CAN2SetFilter86
  L_CAN2SetFilter87
  L_CAN2SetFilter88
  L_CAN2SetFilter89
  L_CAN2SetFilter90
  L_CAN2SetFilter91
  L_CAN2SetFilter92
  L_CAN2SetFilter93
  L___Lib_CAN_12_RegsToCAN2ID94
  L___Lib_CAN_12_RegsToCAN2ID95
  L_CAN2Write96
  L_CAN2Write97
  L_CAN2Write98
  L_CAN2Write99
  L_CAN2Write100
  L_CAN2Write101
  L_CAN2Write102
  L_CAN2Write103
  L_CAN2Write104
  L_CAN2Write105
  L_CAN2Write106
  L_CAN2Read107
  L_CAN2Read108
  L_CAN2Read109
  L_CAN2Read110
  L_CAN2Read111
  L_CAN2Read112
  L_CAN2Read113
  L_CAN2Read114
  L_CAN2Read115
  L_CAN2Read116
  L_CAN2Read117
  L_CAN2Read118
  L_CAN2Read119
  L_CAN2Read120
  L_CAN2Read121
  L_CAN2Read122
  L_CAN2Initialize123
  L_CAN2Initialize124
  L_CAN2Initialize125
  L_CAN2Initialize126
  L_CAN2Initialize127
  L_end_CAN1IDToRegs
  __Lib_CAN_12_CAN1IDToRegs
  L___Lib_CAN_12_CAN1IDToRegs129
  L___Lib_CAN_12_CAN1IDToRegs130
  L___Lib_CAN_12_CAN1IDToRegs131
  L_end_CAN1SetOperationMode
  _CAN1SetOperationMode
  L__CAN1SetOperationMode133
  L__CAN1SetOperationMode134
  L_end_CAN1GetOperationMode
  _CAN1GetOperationMode
  L_end_CAN1SetBaudRate
  _CAN1SetBaudRate
  L_end_CAN1SetMask
  _CAN1SetMask
  L__CAN1SetMask138
  L_end_CAN1SetFilter
  _CAN1SetFilter
  L__CAN1SetFilter140
  L__CAN1SetFilter141
  L__CAN1SetFilter142
  L__CAN1SetFilter143
  L__CAN1SetFilter144
  L_end_RegsToCAN1ID
  __Lib_CAN_12_RegsToCAN1ID
  L_end_CAN1Write
  _CAN1Write
  L__CAN1Write147
  L_end_CAN1Read
  _CAN1Read
  L__CAN1Read149
  L__CAN1Read150
  L__CAN1Read151
  L_end_CAN1Initialize
  _CAN1Initialize
  L__CAN1Initialize153
  L_end_CAN2IDToRegs
  __Lib_CAN_12_CAN2IDToRegs
  L___Lib_CAN_12_CAN2IDToRegs155
  L___Lib_CAN_12_CAN2IDToRegs156
  L___Lib_CAN_12_CAN2IDToRegs157
  L_end_CAN2SetOperationMode
  _CAN2SetOperationMode
  L__CAN2SetOperationMode159
  L__CAN2SetOperationMode160
  L_end_CAN2GetOperationMode
  _CAN2GetOperationMode
  L_end_CAN2SetBaudRate
  _CAN2SetBaudRate
  L_end_CAN2SetMask
  _CAN2SetMask
  L__CAN2SetMask164
  L_end_CAN2SetFilter
  _CAN2SetFilter
  L__CAN2SetFilter166
  L__CAN2SetFilter167
  L__CAN2SetFilter168
  L__CAN2SetFilter169
  L__CAN2SetFilter170
  L_end_RegsToCAN2ID
  __Lib_CAN_12_RegsToCAN2ID
  L_end_CAN2Write
  _CAN2Write
  L__CAN2Write173
  L_end_CAN2Read
  _CAN2Read
  L__CAN2Read175
  L__CAN2Read176
  L__CAN2Read177
  L_end_CAN2Initialize
  _CAN2Initialize
  L__CAN2Initialize179
  L_Can_read0
  L_Can_read1
  L_Can_read2
  L_Can_write3
  L_Can_write4
  L_Can_write5
  L_Can_write6
  L_Can_write7
  L_Can_write8
  L_Can_resetWritePacket9
  L_Can_resetWritePacket10
  L_Can_resetWritePacket11
  L__Can_write12
  L__Can_write13
  L__Can_write14
  L_end_Can_init
  _Can_init
  L_end_Can_read
  _Can_read
  L__Can_read17
  L__Can_read18
  L_end_Can_writeByte
  _Can_writeByte
  L_end_Can_writeInt
  _Can_writeInt
  L_end_Can_addIntToWritePacket
  _Can_addIntToWritePacket
  L_end_Can_addByteToWritePacket
  _Can_addByteToWritePacket
  L_end_Can_write
  _Can_write
  L__Can_write24
  L__Can_write25
  L__Can_write26
  L_end_Can_setWritePriority
  _Can_setWritePriority
  L_end_Can_resetWritePacket
  _Can_resetWritePacket
  L__Can_resetWritePacket29
  L_end_Can_getWriteFlags
  _Can_getWriteFlags
  L_end_Can_B0hasBeenReceived
  _Can_B0hasBeenReceived
  L__Can_B0hasBeenReceived32
  L_end_Can_B1hasBeenReceived
  _Can_B1hasBeenReceived
  L__Can_B1hasBeenReceived34
  L_end_Can_clearB0Flag
  _Can_clearB0Flag
  L_end_Can_clearB1Flag
  _Can_clearB1Flag
  L_end_Can_clearInterrupt
  _Can_clearInterrupt
  L_end_Can_initInterrupt
  _Can_initInterrupt
  L_FIR_filter0
  L_FIR_filter1
  L_FIR_filter2
  L_FIR_filter3
  L_FIR_filter4
  L_TIMER5_INT5
  L_TIMER5_INT6
  L_TIMER5_INT7
  L_TIMER5_INT8
  L_TIMER5_INT9
  L_TIMER5_INT10
  L_TIMER5_INT11
  L_TIMER5_INT12
  L_TIMER1_INT13
  L_TIMER1_INT14
  L_TIMER1_INT15
  L_TIMER1_INT16
  L_TIMER1_INT17
  L_TIMER1_INT18
  L_ADC_INT19
  L_ADC_INT20
  L_ADC_INT21
  L_ADC_INT22
  L_ADC_INT23
  L_Clear_buffer24
  L_Clear_buffer25
  L_Clear_buffer26
  L_Clear_buffer27
  L_Clear_buffer28
  L_Clear_buffer29
  L_main30
  L_main31
  L_end_FIR_filter
  _FIR_filter
  L__FIR_filter33
  L__FIR_filter34
  L_end_canInterrupt
  _canInterrupt
  L_end_TIMER5_INT
  _TIMER5_INT
  L__TIMER5_INT37
  L__TIMER5_INT38
  L__TIMER5_INT39
  L__TIMER5_INT40
  L_end_TIMER1_INT
  _TIMER1_INT
  L__TIMER1_INT42
  L__TIMER1_INT43
  L__TIMER1_INT44
  L__TIMER1_INT45
  L_end_ADC_INT
  _ADC_INT
  L__ADC_INT47
  L__ADC_INT48
  L_end_TIMER4_INT
  _TIMER4_INT
  L_end_Clear_buffer
  _Clear_buffer
  L__Clear_buffer51
  L__Clear_buffer52
  L_end_main
  _main
  L__main_end_loop
  L_Can_read0
  L_Can_read1
  L_Can_read2
  L_Can_write3
  L_Can_write4
  L_Can_write5
  L_Can_write6
  L_Can_write7
  L_Can_write8
  L_Can_resetWritePacket9
  L_Can_resetWritePacket10
  L_Can_resetWritePacket11
  L__Can_write12
  L__Can_write13
  L__Can_write14
  L_end_Can_init
  _Can_init
  L_end_Can_read
  _Can_read
  L__Can_read17
  L__Can_read18
  L_end_Can_writeByte
  _Can_writeByte
  L_end_Can_writeInt
  _Can_writeInt
  L_end_Can_addIntToWritePacket
  _Can_addIntToWritePacket
  L_end_Can_addByteToWritePacket
  _Can_addByteToWritePacket
  L_end_Can_write
  _Can_write
  L__Can_write24
  L__Can_write25
  L__Can_write26
  L_end_Can_setWritePriority
  _Can_setWritePriority
  L_end_Can_resetWritePacket
  _Can_resetWritePacket
  L__Can_resetWritePacket29
  L_end_Can_getWriteFlags
  _Can_getWriteFlags
  L_end_Can_B0hasBeenReceived
  _Can_B0hasBeenReceived
  L__Can_B0hasBeenReceived32
  L_end_Can_B1hasBeenReceived
  _Can_B1hasBeenReceived
  L__Can_B1hasBeenReceived34
  L_end_Can_clearB0Flag
  _Can_clearB0Flag
  L_end_Can_clearB1Flag
  _Can_clearB1Flag
  L_end_Can_clearInterrupt
  _Can_clearInterrupt
  L_end_Can_initInterrupt
  _Can_initInterrupt
  L_FIR_filter0
  L_FIR_filter1
  L_FIR_filter2
  L_FIR_filter3
  L_FIR_filter4
  L_TIMER5_INT5
  L_TIMER5_INT6
  L_TIMER5_INT7
  L_TIMER5_INT8
  L_TIMER5_INT9
  L_TIMER5_INT10
  L_TIMER5_INT11
  L_TIMER5_INT12
  L_TIMER1_INT13
  L_TIMER1_INT14
  L_TIMER1_INT15
  L_TIMER1_INT16
  L_TIMER1_INT17
  L_TIMER1_INT18
  L_ADC_INT19
  L_ADC_INT20
  L_ADC_INT21
  L_ADC_INT22
  L_ADC_INT23
  L_Clear_buffer24
  L_Clear_buffer25
  L_Clear_buffer26
  L_Clear_buffer27
  L_Clear_buffer28
  L_Clear_buffer29
  L_main30
  L_main31
  L_end_FIR_filter
  _FIR_filter
  L__FIR_filter33
  L__FIR_filter34
  L_end_canInterrupt
  _canInterrupt
  L_end_TIMER5_INT
  _TIMER5_INT
  L__TIMER5_INT37
  L__TIMER5_INT38
  L__TIMER5_INT39
  L__TIMER5_INT40
  L_end_TIMER1_INT
  _TIMER1_INT
  L__TIMER1_INT42
  L__TIMER1_INT43
  L__TIMER1_INT44
  L__TIMER1_INT45
  L_end_ADC_INT
  _ADC_INT
  L__ADC_INT47
  L__ADC_INT48
  L_end_TIMER4_INT
  _TIMER4_INT
  L_end_Clear_buffer
  _Clear_buffer
  L__Clear_buffer51
  L__Clear_buffer52
  L_end_main
  _main
  L__main_end_loop
  L___Lib_CAN_12_CAN1IDToRegs0
  L___Lib_CAN_12_CAN1IDToRegs1
  L___Lib_CAN_12_CAN1IDToRegs2
  L___Lib_CAN_12_CAN1IDToRegs3
  L___Lib_CAN_12_CAN1IDToRegs4
  L___Lib_CAN_12_CAN1IDToRegs5
  L___Lib_CAN_12_CAN1IDToRegs6
  L___Lib_CAN_12_CAN1IDToRegs7
  L___Lib_CAN_12_CAN1IDToRegs8
  L___Lib_CAN_12_CAN1IDToRegs9
  L___Lib_CAN_12_CAN1IDToRegs10
  L___Lib_CAN_12_CAN1IDToRegs11
  L___Lib_CAN_12_CAN1IDToRegs12
  L_CAN1SetOperationMode13
  L_CAN1SetOperationMode14
  L_CAN1SetOperationMode15
  L_CAN1SetOperationMode16
  L_CAN1SetBaudRate17
  L_CAN1SetBaudRate18
  L_CAN1SetBaudRate19
  L_CAN1SetMask20
  L_CAN1SetMask21
  L_CAN1SetFilter22
  L_CAN1SetFilter23
  L_CAN1SetFilter24
  L_CAN1SetFilter25
  L_CAN1SetFilter26
  L_CAN1SetFilter27
  L_CAN1SetFilter28
  L_CAN1SetFilter29
  L___Lib_CAN_12_RegsToCAN1ID30
  L___Lib_CAN_12_RegsToCAN1ID31
  L_CAN1Write32
  L_CAN1Write33
  L_CAN1Write34
  L_CAN1Write35
  L_CAN1Write36
  L_CAN1Write37
  L_CAN1Write38
  L_CAN1Write39
  L_CAN1Write40
  L_CAN1Write41
  L_CAN1Write42
  L_CAN1Read43
  L_CAN1Read44
  L_CAN1Read45
  L_CAN1Read46
  L_CAN1Read47
  L_CAN1Read48
  L_CAN1Read49
  L_CAN1Read50
  L_CAN1Read51
  L_CAN1Read52
  L_CAN1Read53
  L_CAN1Read54
  L_CAN1Read55
  L_CAN1Read56
  L_CAN1Read57
  L_CAN1Read58
  L_CAN1Initialize59
  L_CAN1Initialize60
  L_CAN1Initialize61
  L_CAN1Initialize62
  L_CAN1Initialize63
  L___Lib_CAN_12_CAN2IDToRegs64
  L___Lib_CAN_12_CAN2IDToRegs65
  L___Lib_CAN_12_CAN2IDToRegs66
  L___Lib_CAN_12_CAN2IDToRegs67
  L___Lib_CAN_12_CAN2IDToRegs68
  L___Lib_CAN_12_CAN2IDToRegs69
  L___Lib_CAN_12_CAN2IDToRegs70
  L___Lib_CAN_12_CAN2IDToRegs71
  L___Lib_CAN_12_CAN2IDToRegs72
  L___Lib_CAN_12_CAN2IDToRegs73
  L___Lib_CAN_12_CAN2IDToRegs74
  L___Lib_CAN_12_CAN2IDToRegs75
  L___Lib_CAN_12_CAN2IDToRegs76
  L_CAN2SetOperationMode77
  L_CAN2SetOperationMode78
  L_CAN2SetOperationMode79
  L_CAN2SetOperationMode80
  L_CAN2SetBaudRate81
  L_CAN2SetBaudRate82
  L_CAN2SetBaudRate83
  L_CAN2SetMask84
  L_CAN2SetMask85
  L_CAN2SetFilter86
  L_CAN2SetFilter87
  L_CAN2SetFilter88
  L_CAN2SetFilter89
  L_CAN2SetFilter90
  L_CAN2SetFilter91
  L_CAN2SetFilter92
  L_CAN2SetFilter93
  L___Lib_CAN_12_RegsToCAN2ID94
  L___Lib_CAN_12_RegsToCAN2ID95
  L_CAN2Write96
  L_CAN2Write97
  L_CAN2Write98
  L_CAN2Write99
  L_CAN2Write100
  L_CAN2Write101
  L_CAN2Write102
  L_CAN2Write103
  L_CAN2Write104
  L_CAN2Write105
  L_CAN2Write106
  L_CAN2Read107
  L_CAN2Read108
  L_CAN2Read109
  L_CAN2Read110
  L_CAN2Read111
  L_CAN2Read112
  L_CAN2Read113
  L_CAN2Read114
  L_CAN2Read115
  L_CAN2Read116
  L_CAN2Read117
  L_CAN2Read118
  L_CAN2Read119
  L_CAN2Read120
  L_CAN2Read121
  L_CAN2Read122
  L_CAN2Initialize123
  L_CAN2Initialize124
  L_CAN2Initialize125
  L_CAN2Initialize126
  L_CAN2Initialize127
  L_end_CAN1IDToRegs
  __Lib_CAN_12_CAN1IDToRegs
  L___Lib_CAN_12_CAN1IDToRegs129
  L___Lib_CAN_12_CAN1IDToRegs130
  L___Lib_CAN_12_CAN1IDToRegs131
  L_end_CAN1SetOperationMode
  _CAN1SetOperationMode
  L__CAN1SetOperationMode133
  L__CAN1SetOperationMode134
  L_end_CAN1GetOperationMode
  _CAN1GetOperationMode
  L_end_CAN1SetBaudRate
  _CAN1SetBaudRate
  L_end_CAN1SetMask
  _CAN1SetMask
  L__CAN1SetMask138
  L_end_CAN1SetFilter
  _CAN1SetFilter
  L__CAN1SetFilter140
  L__CAN1SetFilter141
  L__CAN1SetFilter142
  L__CAN1SetFilter143
  L__CAN1SetFilter144
  L_end_RegsToCAN1ID
  __Lib_CAN_12_RegsToCAN1ID
  L_end_CAN1Write
  _CAN1Write
  L__CAN1Write147
  L_end_CAN1Read
  _CAN1Read
  L__CAN1Read149
  L__CAN1Read150
  L__CAN1Read151
  L_end_CAN1Initialize
  _CAN1Initialize
  L__CAN1Initialize153
  L_end_CAN2IDToRegs
  __Lib_CAN_12_CAN2IDToRegs
  L___Lib_CAN_12_CAN2IDToRegs155
  L___Lib_CAN_12_CAN2IDToRegs156
  L___Lib_CAN_12_CAN2IDToRegs157
  L_end_CAN2SetOperationMode
  _CAN2SetOperationMode
  L__CAN2SetOperationMode159
  L__CAN2SetOperationMode160
  L_end_CAN2GetOperationMode
  _CAN2GetOperationMode
  L_end_CAN2SetBaudRate
  _CAN2SetBaudRate
  L_end_CAN2SetMask
  _CAN2SetMask
  L__CAN2SetMask164
  L_end_CAN2SetFilter
  _CAN2SetFilter
  L__CAN2SetFilter166
  L__CAN2SetFilter167
  L__CAN2SetFilter168
  L__CAN2SetFilter169
  L__CAN2SetFilter170
  L_end_RegsToCAN2ID
  __Lib_CAN_12_RegsToCAN2ID
  L_end_CAN2Write
  _CAN2Write
  L__CAN2Write173
  L_end_CAN2Read
  _CAN2Read
  L__CAN2Read175
  L__CAN2Read176
  L__CAN2Read177
  L_end_CAN2Initialize
  _CAN2Initialize
  L__CAN2Initialize179
  L_fabs0
  L_floor1
  L_floor2
  L_floor3
  L_floor4
  L_floor5
  L_ceil6
  L_ceil7
  L_ceil8
  L_ceil9
  L_ceil10
  L_ldexp11
  L_ldexp12
  L_ldexp13
  L_ldexp14
  L_ldexp15
  L_ldexp16
  L___Lib_CMath_eval_poly17
  L___Lib_CMath_eval_poly18
  L_modf19
  L_modf20
  L_modf21
  L_modf22
  L_modf23
  L_modf24
  L_modf25
  L_modf26
  L_sqrt27
  L_sqrt28
  L_sqrt29
  L_sqrt30
  L_sqrt31
  L_sqrt32
  L_sqrt33
  L_atan34
  L_atan35
  L_atan36
  L_atan37
  L_atan38
  L_asin39
  L_asin40
  L_asin41
  L_atan242
  L_atan243
  L_atan244
  L_atan245
  L_atan246
  L_atan247
  L_sin48
  L_sin49
  L_sin50
  L_sin51
  L_cos52
  L_exp53
  L_exp54
  L_exp55
  L_exp56
  L_exp57
  L_exp58
  L_log59
  L_pow60
  L_pow61
  L_pow62
  L_pow63
  L_pow64
  L__modf65
  L__modf66
  L__modf67
  L__modf68
  L__modf69
  L__atan270
  L_end_fabs
  _fabs
  L__fabs72
  L__fabs73
  L_end_floor
  _floor
  L__floor75
  L__floor76
  L__floor77
  L__floor78
  L__floor79
  L__floor80
  L_end_ceil
  _ceil
  L__ceil82
  L__ceil83
  L__ceil84
  L__ceil85
  L__ceil86
  L__ceil87
  L_end_frexp
  _frexp
  L_end_ldexp
  _ldexp
  L__ldexp90
  L__ldexp91
  L__ldexp92
  L__ldexp93
  L_end_eval_poly
  __Lib_CMath_eval_poly
  L___Lib_CMath_eval_poly95
  L_end_modf
  _modf
  L__modf97
  L__modf98
  L__modf99
  L__modf100
  L__modf101
  L__modf102
  L__modf103
  L__modf104
  L__modf105
  L__modf106
  L_end_sqrt
  _sqrt
  L__sqrt108
  L__sqrt109
  L__sqrt110
  L__sqrt111
  L__sqrt112
  L__sqrt113
  L__sqrt114
  L__sqrt115
  L__sqrt116
  L_end_atan
  _atan
  L__atan118
  L__atan119
  L__atan120
  L__atan121
  L__atan122
  L__atan123
  L__atan124
  L_end_asin
  _asin
  L__asin126
  L__asin127
  L__asin128
  L__asin129
  L__asin130
  L__asin131
  L_end_acos
  _acos
  L_end_atan2
  _atan2
  L__atan2134
  L__atan2135
  L__atan2136
  L__atan2137
  L__atan2138
  L__atan2139
  L__atan2140
  L__atan2141
  L_end_sin
  _sin
  L__sin143
  L__sin144
  L__sin145
  L__sin146
  L__sin147
  L__sin148
  L__sin149
  L__sin150
  L_end_cos
  _cos
  L__cos152
  L__cos153
  L_end_tan
  _tan
  L_end_exp
  _exp
  L__exp156
  L__exp157
  L__exp158
  L__exp159
  L__exp160
  L__exp161
  L__exp162
  L__exp163
  L__exp164
  L__exp165
  L__exp166
  L_end_log
  _log
  L__log168
  L__log169
  L_end_log10
  _log10
  L_end_pow
  _pow
  L__pow172
  L__pow173
  L__pow174
  L__pow175
  L__pow176
  L__pow177
  L__pow178
  L__pow179
  L__pow180
  L_end_sinh
  _sinh
  L_end_cosh
  _cosh
  L_end_tanh
  _tanh
  Divide_32x32___testsus
  the_end_Divide_32x32
  Divide_32x32___divsi3
  Divide_32x32___udivsi3
  Divide_32x32_divtestb
  Divide_32x32_calcquot
  Divide_32x32_returnq
  Divide_32x32_nextbit
  Divide_32x32_iterate
  Modulus_32x32___testsus
  the_end_Modulus_32x32
  Modulus_32x32___modsi3
  Modulus_32x32___umodsi3
  Modulus_32x32_modtestb
  Modulus_32x32_calcrem
  Modulus_32x32_exitr
  Modulus_32x32___udivsi3
  Modulus_32x32_nextbit
  Modulus_32x32_iterate
  L_end__Multiply_32x32
  __Multiply_32x32
  L_end__Divide_32x32
  __Divide_32x32
  L_end__Modulus_32x32
  __Modulus_32x32
  Float__fpack
  the_end_Float__fpack
  Float_notsubnormal
  Float_zerosig
  Float_subnormal
  Float_packupandgo
  Float_overflow
  LL_intro_Long2Float
  the_end__Long2Float
  Longint2Float__floatsisf
  Longword2Float__floatuisf
  Long2Float_notspecial
  Long2Float_return0
  Longint2Float_negative
  Long2Float_fixshift
  Long2Float_round
  Long2Float_shiftleft
  Long2Float_shiftright
  Long2Float__fpack
  Long2Float_notsubnormal
  Long2Float_zerosig
  Long2Float_subnormal
  Long2Float_packupandgo
  Long2Float_overflow
  Longlong2Float_floatdisf
  the_end__LongLong2Float
  Longlong2Float_negative
  Longlong2Float_notspecial
  Longlong2Float_return0
  Longlong2Float_fixshift
  Longlong2Float_round
  Longlong2Float_shiftleft
  Longlong2Float_shiftright
  Float2Longword_fixunssfsi
  the_end__Float2Longword
  Float2Longword_funpack
  Float2Longword_returnzero
  Float2Longword_exit
  Float2Longword_shiftright
  Float2Longword_shiftleft
  Float2Longword_shiftrightloop
  Float2Longword_zeroorsub
  Float2Longword_nanorinf
  Float2Longword_finitereturn
  Float2Longword_infinite
  Float2Longword_subnormal
  Float2Longword_normalize
  Float2Longint__fixsfsi
  the_end__Float2Longint
  Float2Longint__funpack
  Float2Longint_setsign
  Float2Longint_shiftright
  Float2Longint_shiftleft
  Float2Longint_exit
  Float2Longint_shiftrightloop
  Float2Longint_zeroorsub
  Float2Longint_nanorinf
  Float2Longint_finitereturn
  Float2Longint_infinite
  Float2Longint_subnormal
  Float2Longint_normalize
  AddSubFP__addsf3
  the_end__AddSub_FP
  AddSubFP__funpack2
  AddSubFP__fPropagateNaN
  AddSubFP_aisinfinite
  AddSubFP_checkspecialb
  AddSubFP_return2_3
  AddSubFP_getsign
  AddSubFP_gotsign
  AddSubFP_expcanonical
  AddSubFP_nonegate
  AddSubFP_aligniter
  AddSubFP_signoff
  AddSubFP_align
  AddSubFP_aligned
  AddSubFP_normalizesum
  AddSubFP_checknormal
  AddSubFP_round
  AddSubFP_discardguard
  AddSubFP_underflow
  AddSubFP_normalizeloop
  AddSubFP_normalizeexit
  AddSubFP_normalizetest
  AddSubFP__fpack
  AddSubFP__fbopExit
  AddSubFP_return8_3
  AddSubFP__fbopReturnNaN
  AddSubFP__funpack
  AddSubFP_return0_1
  AddSubFP_return8_1
  AddSubFP_notsubnormal_1
  AddSubFP_zerosig
  AddSubFP_subnormal_1
  AddSubFP_packupandgo
  AddSubFP_overflow
  AddSubFP_zeroorsub
  AddSubFP_nanorinf
  AddSubFP_finitereturn
  AddSubFP_infinite
  AddSubFP_subnormal_2
  AddSubFP_normalize
  MulFP___mulsf3
  the_end__Mul_FP
  MulFP__funpack2
  MulFP__fPropagateNaN
  MulFP_aisinfinite
  MulFP_bisinfinite
  MulFP_return8_1
  MulFP_return2_1
  MulFP_formsticky
  MulFP_formRandSig
  MulFP__fpack
  MulFP_return0_1
  MulFP__fbopExit
  MulFP__fbopReturnNaN
  MulFP__funpack
  MulFP_return0_2
  MulFP_return8_2
  MulFP_notsubnormal
  MulFP_zerosig
  MulFP_subnormal1
  MulFP_packupandgo
  MulFP_overflow
  MulFP_zeroorsub
  MulFP_nanorinf
  MulFP_finitereturn
  MulFP_infinite
  MulFP_subnormal2
  MulFP_normalize
  DivFP___divsf3
  the_end__Div_FP
  DivFP__funpack2
  DivFP__fPropagateNaN
  DivFP_aisinfinite
  DivFP_returnZero
  DivFP_aiszero
  DivFP_returnInf
  DivFP_finitenonzero
  DivFP_diventry
  DivFP_divnext
  DivFP_divdone
  DivFP_divloop
  DivFP_stickyok
  DivFP_guardused
  DivFP__fpack
  DivFP_return0_1
  DivFP__fbopExit
  DivFP__fbopReturnNaN
  DivFP_return8_1
  DivFP_return2_1
  DivFP__funpack
  DivFP_return0
  DivFP_return8
  DivFP_notsubnormal
  DivFP_zerosig
  DivFP_subnormal
  DivFP_packupandgo
  DivFP_overfloW
  DivFP_zeroorsub
  DivFP_nanorinf
  DivFP_finitereturn
  DivFP_infinite
  DivFP_subnormal2
  DivFP_normalize
  CompareFp__fcompare
  the_end__Compare_Fp
  CompareFp__funpack2
  CompareFp_exit
  CompareFp_comparemag
  CompareFp_returnEqual
  CompareFp_adjust
  CompareFp__funpack
  CompareFp_zeroorsub
  CompareFp_nanorinf
  CompareFp_finitereturn
  CompareFp_infinite
  CompareFp_subnormal
  CompareFp_normalize
  L_end_Float_fpack
  _Float_fpack
  L_end__Long2Float
  __Long2Float
  L_end__LongLong2Float
  __LongLong2Float
  L_end__Float2Longword
  __Float2Longword
  L_end__Float2Longint
  __Float2Longint
  L_end__AddSub_FP
  __AddSub_FP
  L_end__Sub_FP
  __Sub_FP
  L_end__Mul_FP
  __Mul_FP
  L_end__Div_FP
  __Div_FP
  L_end__Compare_Fp
  __Compare_Fp
  L_end__Compare_Le_Fp
  __Compare_Le_Fp
  L_end__Compare_Ge_Fp
  __Compare_Ge_Fp
  L_FIR_filter0
  L_FIR_filter1
  L_FIR_filter2
  L_FIR_filter3
  L_FIR_filter4
  L_TIMER5_INT5
  L_TIMER5_INT6
  L_TIMER5_INT7
  L_TIMER5_INT8
  L_TIMER5_INT9
  L_TIMER5_INT10
  L_TIMER5_INT11
  L_TIMER5_INT12
  L_TIMER1_INT13
  L_TIMER1_INT14
  L_TIMER1_INT15
  L_TIMER1_INT16
  L_TIMER1_INT17
  L_TIMER1_INT18
  L_ADC_INT19
  L_ADC_INT20
  L_ADC_INT21
  L_ADC_INT22
  L_ADC_INT23
  L_Clear_buffer24
  L_Clear_buffer25
  L_Clear_buffer26
  L_Clear_buffer27
  L_Clear_buffer28
  L_Clear_buffer29
  L_main30
  L_main31
  L_end_FIR_filter
  _FIR_filter
  L__FIR_filter33
  L__FIR_filter34
  L_end_canInterrupt
  _canInterrupt
  L_end_TIMER5_INT
  _TIMER5_INT
  L__TIMER5_INT37
  L__TIMER5_INT38
  L__TIMER5_INT39
  L__TIMER5_INT40
  L_end_TIMER1_INT
  _TIMER1_INT
  L__TIMER1_INT42
  L__TIMER1_INT43
  L__TIMER1_INT44
  L__TIMER1_INT45
  L_end_ADC_INT
  _ADC_INT
  L__ADC_INT47
  L__ADC_INT48
  L_end_TIMER4_INT
  _TIMER4_INT
  L_end_Clear_buffer
  _Clear_buffer
  L__Clear_buffer51
  L__Clear_buffer52
  L_end_main
  _main
  L__main_end_loop
  L_FIR_filter0
  L_FIR_filter1
  L_FIR_filter2
  L_FIR_filter3
  L_FIR_filter4
  L_TIMER5_INT5
  L_TIMER5_INT6
  L_TIMER5_INT7
  L_TIMER5_INT8
  L_TIMER5_INT9
  L_TIMER5_INT10
  L_TIMER5_INT11
  L_TIMER5_INT12
  L_TIMER1_INT13
  L_TIMER1_INT14
  L_TIMER1_INT15
  L_TIMER1_INT16
  L_TIMER1_INT17
  L_TIMER1_INT18
  L_ADC_INT19
  L_ADC_INT20
  L_ADC_INT21
  L_ADC_INT22
  L_ADC_INT23
  L_Clear_buffer24
  L_Clear_buffer25
  L_Clear_buffer26
  L_Clear_buffer27
  L_Clear_buffer28
  L_Clear_buffer29
  L_main30
  L_main31
  L_end_FIR_filter
  _FIR_filter
  L__FIR_filter33
  L__FIR_filter34
  L_end_canInterrupt
  _canInterrupt
  L_end_TIMER5_INT
  _TIMER5_INT
  L__TIMER5_INT37
  L__TIMER5_INT38
  L__TIMER5_INT39
  L__TIMER5_INT40
  L_end_TIMER1_INT
  _TIMER1_INT
  L__TIMER1_INT42
  L__TIMER1_INT43
  L__TIMER1_INT44
  L__TIMER1_INT45
  L_end_ADC_INT
  _ADC_INT
  L__ADC_INT47
  L__ADC_INT48
  L_end_TIMER4_INT
  _TIMER4_INT
  L_end_Clear_buffer
  _Clear_buffer
  L__Clear_buffer51
  L__Clear_buffer52
  L_end_main
  _main
  L__main_end_loop
  L_FIR_filter0
  L_FIR_filter1
  L_FIR_filter2
  L_FIR_filter3
  L_FIR_filter4
  L_TIMER5_INT5
  L_TIMER5_INT6
  L_TIMER5_INT7
  L_TIMER5_INT8
  L_TIMER5_INT9
  L_TIMER5_INT10
  L_TIMER5_INT11
  L_TIMER5_INT12
  L_TIMER1_INT13
  L_TIMER1_INT14
  L_TIMER1_INT15
  L_TIMER1_INT16
  L_TIMER1_INT17
  L_TIMER1_INT18
  L_ADC_INT19
  L_ADC_INT20
  L_ADC_INT21
  L_ADC_INT22
  L_ADC_INT23
  L_Clear_buffer24
  L_Clear_buffer25
  L_Clear_buffer26
  L_Clear_buffer27
  L_Clear_buffer28
  L_Clear_buffer29
  L_main30
  L_main31
  L_end_FIR_filter
  _FIR_filter
  L__FIR_filter33
  L__FIR_filter34
  L_end_canInterrupt
  _canInterrupt
  L_end_TIMER5_INT
  _TIMER5_INT
  L__TIMER5_INT37
  L__TIMER5_INT38
  L__TIMER5_INT39
  L__TIMER5_INT40
  L_end_TIMER1_INT
  _TIMER1_INT
  L__TIMER1_INT42
  L__TIMER1_INT43
  L__TIMER1_INT44
  L__TIMER1_INT45
  L_end_ADC_INT
  _ADC_INT
  L__ADC_INT47
  L__ADC_INT48
  L_end_TIMER4_INT
  _TIMER4_INT
  L_end_Clear_buffer
  _Clear_buffer
  L__Clear_buffer51
  L__Clear_buffer52
  L_end_main
  _main
  L__main_end_loop
  L_dau_set_ID0
  L_dau_set_ID1
  L_dau_set_ID2
  L_dau_set_ID3
  L_dau_set_ID4
  L_dau_set_ID5
  L_dau_set_ID6
  L_dau_set_ID7
  L_dau_set_ID8
  L_dau_set_ID9
  L_dau_set_ID10
  L_dau_set_ID11
  L_Toggle_LEDRED12
  L_Toggle_LEDRED13
  L_Toggle_LEDBLUE14
  L_Toggle_LEDBLUE15
  L__dau_set_ID16
  L__dau_set_ID17
  L__dau_set_ID18
  L__dau_set_ID19
  L__dau_set_ID20
  L__dau_set_ID21
  L__dau_set_ID22
  L__dau_set_ID23
  L__dau_set_ID24
  L_end_tmr5_init
  _tmr5_init
  L_end_can_bus_init
  _can_bus_init
  L_end_adc_init
  _adc_init
  L_end_tmr4_init
  _tmr4_init
  L_end_tmr1_init
  _tmr1_init
  L_end_io_init
  _io_init
  L_end_dau_set_ID
  _dau_set_ID
  L_end_Toggle_LEDRED
  _Toggle_LEDRED
  L_end_Toggle_LEDBLUE
  _Toggle_LEDBLUE
  L_end_Set_LEDRED
  _Set_LEDRED
  L_end_set_LEDBLUE
  _set_LEDBLUE
  L_end_set_LEDGREEN
  _set_LEDGREEN
  Float__fpack
  the_end_Float__fpack
  Float_notsubnormal
  Float_zerosig
  Float_subnormal
  Float_packupandgo
  Float_overflow
  LL_intro_Long2Float
  the_end__Long2Float
  Longint2Float__floatsisf
  Longword2Float__floatuisf
  Long2Float_notspecial
  Long2Float_return0
  Longint2Float_negative
  Long2Float_fixshift
  Long2Float_round
  Long2Float_shiftleft
  Long2Float_shiftright
  Long2Float__fpack
  Long2Float_notsubnormal
  Long2Float_zerosig
  Long2Float_subnormal
  Long2Float_packupandgo
  Long2Float_overflow
  Longlong2Float_floatdisf
  the_end__LongLong2Float
  Longlong2Float_negative
  Longlong2Float_notspecial
  Longlong2Float_return0
  Longlong2Float_fixshift
  Longlong2Float_round
  Longlong2Float_shiftleft
  Longlong2Float_shiftright
  Float2Longword_fixunssfsi
  the_end__Float2Longword
  Float2Longword_funpack
  Float2Longword_returnzero
  Float2Longword_exit
  Float2Longword_shiftright
  Float2Longword_shiftleft
  Float2Longword_shiftrightloop
  Float2Longword_zeroorsub
  Float2Longword_nanorinf
  Float2Longword_finitereturn
  Float2Longword_infinite
  Float2Longword_subnormal
  Float2Longword_normalize
  Float2Longint__fixsfsi
  the_end__Float2Longint
  Float2Longint__funpack
  Float2Longint_setsign
  Float2Longint_shiftright
  Float2Longint_shiftleft
  Float2Longint_exit
  Float2Longint_shiftrightloop
  Float2Longint_zeroorsub
  Float2Longint_nanorinf
  Float2Longint_finitereturn
  Float2Longint_infinite
  Float2Longint_subnormal
  Float2Longint_normalize
  AddSubFP__addsf3
  the_end__AddSub_FP
  AddSubFP__funpack2
  AddSubFP__fPropagateNaN
  AddSubFP_aisinfinite
  AddSubFP_checkspecialb
  AddSubFP_return2_3
  AddSubFP_getsign
  AddSubFP_gotsign
  AddSubFP_expcanonical
  AddSubFP_nonegate
  AddSubFP_aligniter
  AddSubFP_signoff
  AddSubFP_align
  AddSubFP_aligned
  AddSubFP_normalizesum
  AddSubFP_checknormal
  AddSubFP_round
  AddSubFP_discardguard
  AddSubFP_underflow
  AddSubFP_normalizeloop
  AddSubFP_normalizeexit
  AddSubFP_normalizetest
  AddSubFP__fpack
  AddSubFP__fbopExit
  AddSubFP_return8_3
  AddSubFP__fbopReturnNaN
  AddSubFP__funpack
  AddSubFP_return0_1
  AddSubFP_return8_1
  AddSubFP_notsubnormal_1
  AddSubFP_zerosig
  AddSubFP_subnormal_1
  AddSubFP_packupandgo
  AddSubFP_overflow
  AddSubFP_zeroorsub
  AddSubFP_nanorinf
  AddSubFP_finitereturn
  AddSubFP_infinite
  AddSubFP_subnormal_2
  AddSubFP_normalize
  MulFP___mulsf3
  the_end__Mul_FP
  MulFP__funpack2
  MulFP__fPropagateNaN
  MulFP_aisinfinite
  MulFP_bisinfinite
  MulFP_return8_1
  MulFP_return2_1
  MulFP_formsticky
  MulFP_formRandSig
  MulFP__fpack
  MulFP_return0_1
  MulFP__fbopExit
  MulFP__fbopReturnNaN
  MulFP__funpack
  MulFP_return0_2
  MulFP_return8_2
  MulFP_notsubnormal
  MulFP_zerosig
  MulFP_subnormal1
  MulFP_packupandgo
  MulFP_overflow
  MulFP_zeroorsub
  MulFP_nanorinf
  MulFP_finitereturn
  MulFP_infinite
  MulFP_subnormal2
  MulFP_normalize
  DivFP___divsf3
  the_end__Div_FP
  DivFP__funpack2
  DivFP__fPropagateNaN
  DivFP_aisinfinite
  DivFP_returnZero
  DivFP_aiszero
  DivFP_returnInf
  DivFP_finitenonzero
  DivFP_diventry
  DivFP_divnext
  DivFP_divdone
  DivFP_divloop
  DivFP_stickyok
  DivFP_guardused
  DivFP__fpack
  DivFP_return0_1
  DivFP__fbopExit
  DivFP__fbopReturnNaN
  DivFP_return8_1
  DivFP_return2_1
  DivFP__funpack
  DivFP_return0
  DivFP_return8
  DivFP_notsubnormal
  DivFP_zerosig
  DivFP_subnormal
  DivFP_packupandgo
  DivFP_overfloW
  DivFP_zeroorsub
  DivFP_nanorinf
  DivFP_finitereturn
  DivFP_infinite
  DivFP_subnormal2
  DivFP_normalize
  CompareFp__fcompare
  the_end__Compare_Fp
  CompareFp__funpack2
  CompareFp_exit
  CompareFp_comparemag
  CompareFp_returnEqual
  CompareFp_adjust
  CompareFp__funpack
  CompareFp_zeroorsub
  CompareFp_nanorinf
  CompareFp_finitereturn
  CompareFp_infinite
  CompareFp_subnormal
  CompareFp_normalize
  L_end_Float_fpack
  _Float_fpack
  L_end__Long2Float
  __Long2Float
  L_end__LongLong2Float
  __LongLong2Float
  L_end__Float2Longword
  __Float2Longword
  L_end__Float2Longint
  __Float2Longint
  L_end__AddSub_FP
  __AddSub_FP
  L_end__Sub_FP
  __Sub_FP
  L_end__Mul_FP
  __Mul_FP
  L_end__Div_FP
  __Div_FP
  L_end__Compare_Fp
  __Compare_Fp
  L_end__Compare_Le_Fp
  __Compare_Le_Fp
  L_end__Compare_Ge_Fp
  __Compare_Ge_Fp
